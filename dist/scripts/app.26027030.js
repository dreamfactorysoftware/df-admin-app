"use strict";angular.module("dfUserManagement",["ngRoute","ngCookies","dfUtility"]).constant("MODUSRMNGR_ROUTER_PATH","/user-management").constant("MODUSRMNGR_ASSET_PATH","admin_components/adf-user-management/").run(["$cookieStore","$http","UserDataService",function($cookieStore,$http,UserDataService){var cookie=$cookieStore.get("CurrentUserObj");cookie&&(UserDataService.setCurrentUser($cookieStore.get("CurrentUserObj")),$http.defaults.headers.common["X-DreamFactory-Session-Token"]=cookie.session_id)}]).controller("UserManagementCtrl",["$scope",function($scope){}]).directive("modusrmngrNavigation",["MODUSRMNGR_ASSET_PATH",function(MODUSRMNGR_ASSET_PATH){return{restrict:"E",templateUrl:MODUSRMNGR_ASSET_PATH+"views/navigation.html",link:function(scope,elem,attrs){}}}]).directive("dreamfactoryUserLogin",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","$location","$cookies","$cookieStore","UserEventsService","UserDataService","_dfObjectService","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,$location,$cookies,$cookieStore,UserEventsService,UserDataService,_dfObjectService,SystemConfigDataService){return{restrict:"E",replace:!0,scope:{options:"=?",inErrorMsg:"=?"},templateUrl:MODUSRMNGR_ASSET_PATH+"views/login.html",link:function(scope,elem,attrs){scope.es=UserEventsService.login;var defaults={showTemplate:!0};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.loginFormTitle="Login",scope.loginActive=!0,scope.creds={email:"",password:""},scope.errorMsg=scope.inErrorMsg||"",scope.successMsg="",scope.loginWaiting=!1,scope.showOAuth=!0,scope.loginForm={},scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.adldap=scope.systemConfig.authentication.adldap||[],scope.adldapAvailable=scope.adldap.length>0?!0:!1,scope.selectedService=null,scope.rememberMe=!1,scope.userField={icon:"fa-envelope",text:"Enter Email",type:"email"},scope.rememberLogin=function(checked){scope.rememberMe=checked},scope.useAdLdapService=function(service){scope.selectedService=service,service?(scope.userField={icon:"fa-user",text:"Enter Username",type:"text"},scope.creds={username:"",password:"",service:service}):(scope.userField={icon:"fa-envelope",text:"Enter Email",type:"email"},scope.creds={email:"",password:""})};var queryString=location.search.substring(1),uri=$location.absUrl().split("?"),params=uri[1],token="";params&&-1!==params.indexOf("session_token")&&(token=params.substring(14)),""!==token?(scope.loginWaiting=!0,scope.showOAuth=!1,scope.loginDirect=!0,$http.get(INSTANCE_URL+"/api/v2/user/session?session_token="+token).then(function(result){scope._setCookies(result.data),$http.defaults.headers.common["X-DreamFactory-Session-Token"]=$cookies.PHPSESSID,UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data),scope.loginDirect=!1},function(result){window.location.href=uri[0]+"#/login",scope.loginDirect=!1})):queryString&&(scope.loginWaiting=!0,scope.showOAuth=!1,$http.post(INSTANCE_URL+"/api/v2/user/session?oauth_callback=true&"+queryString).then(function(result){scope._setCookies(result.data),$http.defaults.headers.common["X-DreamFactory-Session-Token"]=$cookies.PHPSESSID,UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data)})),scope.login=function(credsDataObj){scope.selectedService?(credsDataObj.username=$("#df-login-email").val(),credsDataObj.password=$("#df-login-password").val(),credsDataObj.service=scope.selectedService):(""===credsDataObj.email||""===credsDataObj.password)&&(credsDataObj.email=$("#df-login-email").val(),credsDataObj.password=$("#df-login-password").val()),credsDataObj.remember_me=scope.rememberMe,scope._login(credsDataObj)},scope.forgotPassword=function(){scope._forgotPassword()},scope.showLoginForm=function(){scope._toggleForms()},scope.dismissError=function(){scope.errorMsg=""},scope.dismissSuccess=function(){scope.successMsg=""},scope._loginRequest=function(credsDataObj,admin){return admin?$http.post(INSTANCE_URL+"/api/v2/system/admin/session",credsDataObj):$http.post(INSTANCE_URL+"/api/v2/user/session",credsDataObj)},scope._setSessionToken=function(sessionDataObj){$cookies.PHPSESSID=sessionDataObj.session_id},scope._setCurrentUser=function(sessionDataObj){$cookieStore.put("CurrentUserObj",sessionDataObj)},scope._setCookies=function(sessionDataObj){$cookies.PHPSESSID=$cookies.PHPSESSID===sessionDataObj.session_id?$cookies.PHPSESSID:sessionDataObj.session_id,scope._setCurrentUser(sessionDataObj)},scope._toggleFormsState=function(){scope.loginActive=!scope.loginActive,scope.resetPasswordActive=!scope.resetPasswordActive},scope._login=function(credsDataObj){scope.loginWaiting=!0,scope._loginRequest(credsDataObj,!1).then(function(result){delete result.data.no_group_apps,delete result.data.app_groups,scope._setCookies(result.data),$http.defaults.headers.common["X-DreamFactory-Session-Token"]=$cookies.PHPSESSID,UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data),scope.$root.$emit(scope.es.loginSuccess,result.data)},function(reject){"401"!=reject.status&&"404"!=reject.status||scope.selectedService?(scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.loginError,reject)):(scope.loginWaiting=!0,scope._loginRequest(credsDataObj,!0).then(function(result){delete result.data.no_group_apps,delete result.data.app_groups,scope._setCookies(result.data),$http.defaults.headers.common["X-DreamFactory-Session-Token"]=$cookies.PHPSESSID,UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data),scope.$root.$emit(scope.es.loginSuccess,result.data)},function(reject){scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.loginError,reject)})["finally"](function(){scope.loginWaiting=!1}))})["finally"](function(){scope.loginWaiting=!1})},scope._toggleForms=function(){scope._toggleFormsState()},scope._forgotPassword=function(){scope.$broadcast(UserEventsService.password.passwordResetRequest,{email:scope.creds.email})};scope.$watch("options",function(newValue,oldValue){newValue&&newValue.hasOwnProperty("showTemplate")&&(scope.showTemplate=newValue.showTemplate)},!0);scope.$on(scope.es.loginRequest,function(e,userDataObj){scope._login(userDataObj)})}}}]).directive("dreamfactoryForgotPwordEmail",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","_dfStringService","UserEventsService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,_dfStringService,UserEventsService){return{restrict:"E",replace:!0,scope:!1,templateUrl:MODUSRMNGR_ASSET_PATH+"views/fp-email-conf.html",link:function(scope,elem,attrs){scope.es=UserEventsService.password,scope.emailForm=!0,scope.emailError=!1,scope.securityQuestionForm=!1,scope.hidePasswordField=!1,scope.allowForeverSessions=scope.systemConfig.authentication.allow_forever_sessions,scope.sq={email:null,security_question:null,security_answer:null,new_password:null,verify_password:null},scope.identical=!0,scope.requestWaiting=!1,scope.questionWaiting=!1,scope.requestPasswordReset=function(emailDataObj){scope._requestPasswordReset(emailDataObj)},scope.securityQuestionSubmit=function(reset){return scope.identical?scope._verifyPasswordLength(reset)?void scope._securityQuestionSubmit(reset):void(scope.errorMsg="Password must be at least 5 characters."):void(scope.errorMsg="Passwords do not match.")},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._resetPasswordRequest=function(requestDataObj,admin){return admin?$http.post(INSTANCE_URL+"/api/v2/system/admin/password?reset=true",requestDataObj):$http.post(INSTANCE_URL+"/api/v2/user/password?reset=true",requestDataObj)},scope._resetPasswordSQ=function(requestDataObj,admin){return admin?$http.post(INSTANCE_URL+"/api/v2/system/admin/password?login=false",requestDataObj):$http.post(INSTANCE_URL+"/api/v2/user/password?login=false",requestDataObj)},scope._verifyPassword=function(userDataObj){scope.identical=_dfStringService.areIdentical(userDataObj.new_password,userDataObj.verify_password)},scope._verifyPasswordLength=function(credsDataObj){return credsDataObj.new_password.length>=5},scope._requestPasswordReset=function(requestDataObj){requestDataObj.reset=!0,scope.requestWaiting=!0,scope._resetPasswordRequest(requestDataObj,!1).then(function(result){result.data.hasOwnProperty("security_question")?(scope.emailForm=!1,scope.securityQuestionForm=!0,scope.sq.email=requestDataObj.email,scope.sq.security_question=result.data.security_question):(scope.successMsg="A password reset email has been sent to the provided email address.",scope.$emit(scope.es.passwordResetRequestSuccess,requestDataObj.email))},function(reject){"401"==reject.status||"404"==reject.status?scope._resetPasswordRequest(requestDataObj,!0).then(function(result){result.data.hasOwnProperty("security_question")?(scope.emailForm=!1,scope.securityQuestionForm=!0,scope.sq.email=requestDataObj.email,scope.sq.security_question=result.data.security_question):(scope.successMsg="A password reset email has been sent to the provided email address.",scope.$emit(scope.es.passwordResetRequestSuccess,requestDataObj.email))},function(reject){scope.errorMsg=reject.data.error.message})["finally"](function(){scope.requestWaiting=!1}):scope.errorMsg=reject.data.error.message})["finally"](function(){scope.requestWaiting=!1})},scope._securityQuestionSubmit=function(reset){scope.questionWaiting=!0,scope._resetPasswordSQ(reset,!1).then(function(result){var userCredsObj={email:reset.email,password:reset.new_password};scope.$emit(UserEventsService.password.passwordSetSuccess,userCredsObj)},function(reject){"401"==reject.status||"404"==reject.status?scope._resetPasswordSQ(reset,!0).then(function(result){var userCredsObj={email:reset.email,password:reset.new_password};scope.$emit(UserEventsService.password.passwordSetSuccess,userCredsObj)},function(reject){scope.questionWaiting=!1,scope.errorMsg=reject.data.error.message,scope.$emit(UserEventsService.password.passwordSetError)})["finally"](function(){}):(scope.questionWaiting=!1,scope.errorMsg=reject.data.error.message,scope.$emit(UserEventsService.password.passwordSetError))})["finally"](function(){})},scope.$on(UserEventsService.password.passwordResetRequest,function(e,resetDataObj){scope._toggleForms()})}}}]).directive("dreamfactoryForgotPwordQuestion",["MODUSRMNGR_ASSET_PATH",function(MODUSRMNGR_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MODUSRMNGR_ASSET_PATH+"views/fp-security-question.html",link:function(scope,elem,attrs){}}}]).directive("dreamfactoryPasswordReset",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","UserEventsService","_dfStringService","_dfObjectService","dfNotify","$location",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,UserEventsService,_dfStringService,_dfObjectService,dfNotify,$location){return{restrict:"E",scope:{options:"=?",inErrorMsg:"=?"},templateUrl:MODUSRMNGR_ASSET_PATH+"views/password-reset.html",link:function(scope,elem,attrs){scope.es=UserEventsService.password;var defaults={showTemplate:!0,login:!1};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.identical=!0,scope.successMsg="",scope.errorMsg="",scope.resetWaiting=!1,scope.user={};var UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){scope.user[key]=UrlParams[key]}),scope.dismissError=function(){scope.errorMsg=""},scope.dismissSuccess=function(){scope.successMsg=""},scope.resetPassword=function(credsDataObj){return scope.identical?scope._verifyPasswordLength(credsDataObj)?void scope._resetPassword(credsDataObj):void(scope.errorMsg="Password must be at least 5 characters."):void(scope.errorMsg="Passwords do not match.")},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._setPasswordRequest=function(requestDataObj,admin){var url=INSTANCE_URL+"/api/v2/system/admin/password";return admin||(url=INSTANCE_URL+"/api/v2/user/password"),$http({url:url,method:"POST",params:{login:scope.options.login},data:requestDataObj})},scope._verifyPassword=function(userDataObj){scope.identical=_dfStringService.areIdentical(userDataObj.new_password,userDataObj.verify_password)},scope._verifyPasswordLength=function(credsDataObj){return credsDataObj.new_password.length>=5},scope._resetPassword=function(credsDataObj){scope.resetWaiting=!0;var requestDataObj={email:credsDataObj.email,code:credsDataObj.code,new_password:credsDataObj.new_password};scope._setPasswordRequest(requestDataObj,!1).then(function(result){var userCredsObj={email:credsDataObj.email,password:credsDataObj.new_password};scope.$emit(scope.es.passwordSetSuccess,userCredsObj),scope.showTemplate=!1},function(reject){"401"==reject.status||"404"==reject.status?scope._setPasswordRequest(requestDataObj,!0).then(function(result){var userCredsObj={email:credsDataObj.email,password:credsDataObj.new_password};scope.$emit(scope.es.passwordSetSuccess,userCredsObj),scope.showTemplate=!1},function(reject){scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.passwordSetError),scope.resetWaiting=!1})["finally"](function(){scope.resetWaiting=!1}):(scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.passwordSetError),scope.resetWaiting=!1)})["finally"](function(){scope.resetWaiting=!1})};var watchInErrorMsg=scope.$watch("inErrorMsg",function(n,o){scope.confirmWaiting=!1,scope.errorMsg=n});scope.$on(scope.es.passwordSetRequest,function(e,credsDataObj){scope._resetPassword(credsDataObj)}),scope.$on("$destroy",function(e){watchInErrorMsg()})}}}]).directive("dreamfactoryUserLogout",["INSTANCE_URL","$http","$cookieStore","UserEventsService","UserDataService",function(INSTANCE_URL,$http,$cookieStore,UserEventsService,UserDataService){return{restrict:"E",scope:{},link:function(scope,elem,attrs){scope.es=UserEventsService.logout,scope._logoutRequest=function(admin){var user=UserDataService.getCurrentUser(),url=user.is_sys_admin?"/api/v2/system/admin/session":"/api/v2/user/session";return $http["delete"](INSTANCE_URL+url)},scope._logout=function(){scope._logoutRequest(!1).then(function(){$cookieStore.remove("PHPSESSID"),$cookieStore.remove("CurrentUserObj"),UserDataService.unsetCurrentUser(),$http.defaults.headers.common["X-DreamFactory-Session-Token"]="",scope.$emit(scope.es.logoutSuccess,!1)},function(reject){if("401"!=reject.status&&"401"!=reject.data.error.code)throw{module:"DreamFactory User Management",type:"error",provider:"dreamfactory",exception:reject};$cookieStore.remove("PHPSESSID"),$cookieStore.remove("CurrentUserObj"),UserDataService.unsetCurrentUser(),$http.defaults.headers.common["X-DreamFactory-Session-Token"]="",scope.$emit(scope.es.logoutSuccess,!1)})},scope.$on(scope.es.logoutRequest,function(e){scope._logout()}),scope._logout()}}}]).directive("dreamfactoryRegisterUser",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","$rootScope","$cookieStore","$location","UserEventsService","_dfStringService","_dfObjectService","dfXHRHelper",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,$rootScope,$cookieStore,$location,UserEventsService,_dfStringService,_dfObjectService,dfXHRHelper){return{restrict:"E",templateUrl:MODUSRMNGR_ASSET_PATH+"views/register.html",scope:{options:"=?"},link:function(scope,elem,attrs){scope.es=UserEventsService.register;var defaults={showTemplate:!0,login:!1};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.identical=!0,scope.errorMsg="",scope.user={};var UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){scope.user[key]=UrlParams[key]}),scope.dismissError=function(){scope.errorMsg=""},scope.register=function(registerDataObj){scope._register(registerDataObj)},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._registerRequest=function(registerDataObj){return $http({url:INSTANCE_URL+"/api/v2/user/register",method:"POST",params:{login:scope.options.login},data:registerDataObj})},scope._getSystemConfig=function(){return $http.get(INSTANCE_URL+"/api/v2/system/environment")},scope._register=function(registerDataObj){return 1!=scope.identical?void(scope.errorMsg="Password and confirm password do not match."):(scope._runRegister=function(registerDataObj){scope._registerRequest(registerDataObj).then(function(result){if(null==scope.options.confirmationRequired){var userCredsObj={email:registerDataObj.email,password:registerDataObj.new_password};scope.$emit(scope.es.registerSuccess,userCredsObj)}else scope.$emit(scope.es.registerConfirmation,result.data)},function(reject){var msg="Validation failed. ",context=reject.data.error.context;angular.forEach(context,function(value,key){msg=msg+key+": "+value+" "},msg),scope.errorMsg=msg})},void(null==scope.options.confirmationRequired?scope._getSystemConfig().then(function(result){var systemConfigDataObj=result.data;scope.options.confirmationRequired=systemConfigDataObj.authentication.open_reg_email_service_id,scope._runRegister(registerDataObj)},function(reject){throw{module:"DreamFactory User Management",type:"error",provider:"dreamfactory",exception:reject}}):scope._runRegister(registerDataObj)))},scope._verifyPassword=function(userDataObj){scope.identical=_dfStringService.areIdentical(userDataObj.new_password,userDataObj.verify_password)},scope.$watchCollection("options",function(newValue,oldValue){if(!newValue.hasOwnProperty("confirmationRequired")){var config=dfXHRHelper.get({url:"system/environment"});scope.options.confirmationRequired=config.authentication.allow_open_registration&&config.authentication.open_reg_email_service_id?!0:null}}),scope.$on(scope.es.registerRequest,function(e,registerDataObj){scope._register(registerDataObj)})}}}]).directive("dreamfactoryUserProfile",["MODUSRMNGR_ASSET_PATH","_dfObjectService","UserDataService","UserEventsService",function(MODUSRMNGR_ASSET_PATH,_dfObjectService,UserDataService,UserEventsService){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/edit-profile.html",scope:{options:"=?"},link:function(scope,elem,attrs){scope.es=UserEventsService.profile;var defaults={showTemplate:!0};scope.options=_dfObjectService.mergeObjects(scope.options,defaults)}}}]).directive("dreamfactoryRemoteAuthProviders",["MODUSRMNGR_ASSET_PATH","_dfObjectService","UserDataService","UserEventsService","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,_dfObjectService,UserDataService,UserEventsService,SystemConfigDataService){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/remote-auth-providers.html",scope:!1,link:function(scope,elem,attrs){scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.oauths=scope.systemConfig.authentication.oauth,scope.loginWithProvider=function(providerData){scope._loginWithProvider(providerData)},scope._loginWithProvider=function(providerData){window.top.location.href="/api/v2/"+providerData}}}}]).directive("dreamfactoryConfirmUser",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$location","$http","_dfObjectService","_dfStringService","UserDataService","UserEventsService","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$location,$http,_dfObjectService,_dfStringService,UserDataService,UserEventsService,SystemConfigDataService){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/confirmation-code.html",scope:{options:"=?",inErrorMsg:"=?"},link:function(scope,elem,attrs){var defaults={showTemplate:!0,title:"User Confirmation"};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.identical=!0,scope.errorMsg="",scope.successMsg="",scope.confirmWaiting=!1,scope.user={};var UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){scope.user[key]=UrlParams[key]}),scope.dismissError=function(){scope.errorMsg=""},scope.dismissSuccess=function(){scope.successMsg=""},scope.confirm=function(userConfirmObj){return scope.identical?scope._verifyPasswordLength(userConfirmObj)?void scope._confirm(userConfirmObj):void(scope.errorMsg="Password must be at least 5 characters."):void(scope.errorMsg="Passwords do not match.")},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._verifyPassword=function(userDataObj){scope.identical=_dfStringService.areIdentical(userDataObj.new_password,userDataObj.verify_password)},scope._verifyPasswordLength=function(user){return user.new_password.length>=5},scope._confirmUserToServer=function(requestDataObj){return $http({url:INSTANCE_URL+"/api/v2/user/password",method:"POST",params:{login:!1},data:requestDataObj})},scope._confirm=function(userConfirmObj){scope.confirmWaiting=!0;var requestDataObj=userConfirmObj;scope._confirmUserToServer(requestDataObj).then(function(result){var userCreds={email:requestDataObj.email,password:requestDataObj.new_password};scope.$emit(UserEventsService.confirm.confirmationSuccess,userCreds)},function(reject){scope.errorMsg=reject.data.error.message,scope.$emit(UserEventsService.confirm.confirmationError),scope.confirmWaiting=!1})["finally"](function(){})};var watchInErrorMsg=scope.$watch("inErrorMsg",function(n,o){scope.confirmWaiting=!1,scope.errorMsg=n});scope.$on("$destroy",function(e){watchInErrorMsg()}),scope.$on(UserEventsService.confirm.confirmationRequest,function(e,confirmationObj){scope._confirm(confirmationObj)})}}}]).directive("dreamfactoryWaiting",["MODUSRMNGR_ASSET_PATH",function(MODUSRMNGR_ASSET_PATH){return{restrict:"E",scope:{show:"=?"},replace:!1,templateUrl:MODUSRMNGR_ASSET_PATH+"views/dreamfactory-waiting.html",link:function(scope,elem,attrs){function size(){h=el.parent(".panel-body").outerHeight(),w=el.parent(".panel-body").outerWidth(),t=el.parent(".panel-body").position().top,l=el.parent(".panel-body").position().left,container.css({height:h+"px",width:w+"px",position:"absolute",left:l,top:t}),container.children(".df-spinner").css({position:"absolute",top:(h-110)/2,left:(w-70)/2})}var el=$(elem),container=el.children(),h=el.parent(".panel-body").outerHeight(),w=el.parent(".panel-body").outerWidth(),t=el.position().top+parseInt(el.parent().css("padding-top"))+"px",l=el.position().left+parseInt(el.parent().css("padding-left"))+"px";scope._showWaiting=function(){size(),container.fadeIn("fast")},scope._hideWaiting=function(){container.hide()},scope.$watch("show",function(n,o){n?scope._showWaiting():scope._hideWaiting()}),$(window).on("resize load",function(){size()})}}}]).service("UserEventsService",[function(){return{login:{loginRequest:"user:login:request",loginSuccess:"user:login:success",loginError:"user:login:error"},logout:{logoutRequest:"user:logout:request",logoutSuccess:"user:logout:success",logoutError:"user:logout:error"},register:{registerRequest:"user:register:request",registerSuccess:"user:register:success",registerError:"user:register:error",registerConfirmation:"user:register:confirmation"},password:{passwordResetRequest:"user:passwordreset:request",passwordResetRequestSuccess:"user:passwordreset:requestsuccess",passwordSetRequest:"user:passwordset:request",passwordSetSuccess:"user:passwordset:success",passwordSetError:"user:passwordset:error"},profile:{},confirm:{confirmationSuccess:"user:confirmation:success",confirmationError:"user:confirmation:error",confirmationRequest:"user:confirmation:request"}}}]).service("UserDataService",["$http","INSTANCE_URL","XHRHelper",function($http,INSTANCE_URL,XHRHelper){function _getCurrentUser(){return currentUser}function _saveUserSetting(userSettings){return $http({url:INSTANCE_URL+"/api/v2/user/custom",method:"POST",data:userSettings})}function _getUserSetting(setting,sync){if(setting=setting||"",sync=sync||!1){var requestDataObj={url:"user/custom/"+setting};return XHRHelper.ajax(requestDataObj)}return $http({url:INSTANCE_URL+"/api/v2/user/custom/"+setting,method:"GET"})}function _setCurrentUser(userDataObj){currentUser=userDataObj}function _unsetCurrentUser(){currentUser=!1}function _hasUser(){return!!currentUser}var currentUser=!1;return{getCurrentUser:function(){return _getCurrentUser()},saveUserSetting:function(userSettings){return _saveUserSetting(userSettings)},getUserSetting:function(userSetting,sync){return _getUserSetting(userSetting,sync)},setCurrentUser:function(userDataObj){_setCurrentUser(userDataObj)},unsetCurrentUser:function(){_unsetCurrentUser()},hasUser:function(){return _hasUser()}}}]).service("_dfStringService",[function(){return{areIdentical:function(stringA,stringB){function _sameLength(stringA,stringB){return stringA.length==stringB.length}function _sameLetters(stringA,stringB){for(var l=Math.min(stringA.length,stringB.length),i=0;l>i;i++)if(stringA.charAt(i)!==stringB.charAt(i))return!1;return!0}return stringA=stringA||"",stringB=stringB||"",_sameLength(stringA,stringB)&&_sameLetters(stringA,stringB)?!0:!1}}}]).service("_dfObjectService",[function(){return{self:this,mergeObjects:function(obj1,obj2){for(var key in obj1)obj2[key]=obj1[key];return obj2},deepMergeObjects:function(obj1,obj2){var self=this;for(var _key in obj1)obj2.hasOwnProperty(_key)&&("object"==typeof obj2[_key]?obj2[_key]=self.deepMergeObjects(obj1[_key],obj2[_key]):obj2[_key]=obj1[_key]);return obj2}}}]).service("dfXHRHelper",["INSTANCE_URL","ADMIN_API_KEY","$cookies",function(INSTANCE_URL,ADMIN_API_KEY,$cookies){function _isEmpty(obj){if(null==obj)return!0;if(obj.length>0)return!1;if(0===obj.length)return!0;for(var key in obj)if(hasOwnProperty.call(obj,key))return!1;return!0}function _setHeaders(_xhrObj,_headersDataObj){_xhrObj.setRequestHeader("X-DreamFactory-API-Key",ADMIN_API_KEY),_xhrObj.setRequestHeader("X-DreamFactory-Session-Token",$cookies.PHPSESSID);for(var _key in _headersDataObj)_xhrObj.setRequestHeader(_key,_headersDataObj[_key])}function _setParams(_paramsDataObj){var params="";if(!_isEmpty(_paramsDataObj)){params="?";for(var _key in _paramsDataObj)params+=_key+"="+_paramsDataObj[_key]+"&"}return""!==params&&(params=params.substring(0,params.length-1),encodeURI(params)),params}function _makeRequest(_method,_url,_async,_params,_headers,_mimeType){var xhr;xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");var params=_setParams(_params);return xhr.open(_method,INSTANCE_URL+"/api/v2/"+_url+params,_async),_setHeaders(xhr,_headers),xhr.overrideMimeType(_mimeType),xhr.send(),4==xhr.readyState&&200==xhr.status?angular.fromJson(xhr.responseText):xhr.status}function _get(optionsDataObj){if(!optionsDataObj.url||""===optionsDataObj.url)throw{module:"DreamFactory System Config Module",type:"error",provider:"dreamfactory",exception:"XHRHelper Request Failure: No URL provided"};var defaults={method:"GET",url:"",async:!1,params:{},headers:{},mimeType:"application/json"};for(var _key in defaults)optionsDataObj.hasOwnProperty(_key)&&(defaults[_key]=optionsDataObj[_key]);return _makeRequest(defaults.method,defaults.url,defaults.async,defaults.params,defaults.headers,defaults.mimeType)}return{get:function(requestOptions){return _get(requestOptions)}}}]),angular.module("dfUtility",["dfApplication"]).constant("MOD_UTILITY_ASSET_PATH","admin_components/adf-utility/").directive("dfGithubModal",["MOD_UTILITY_ASSET_PATH","$http","dfApplicationData","$rootScope",function(MOD_UTILITY_ASSET_PATH,$http,dfApplicationData,$rootScope){return{restrict:"E",scope:{editor:"=?",accept:"=?",target:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-github-modal.html",link:function(scope,elem,attrs){scope.modalError={},scope.githubModal={},scope.githubUpload=function(){var url=angular.copy(scope.githubModal.url);if(null!==url){var url_params=url.substr(url.indexOf(".com/")+5),url_array=url_params.split("/"),github_api_url="",owner="",repo="",branch="",path="";url.indexOf("raw.github")>-1?(owner=url_array[0],repo=url_array[1],branch=url_array[2],path=url_array.splice(3,url_array.length-3).join("/")):(owner=url_array[0],repo=url_array[1],branch=url_array[3],path=url_array.splice(4,url_array.length-4).join("/")),github_api_url="https://api.github.com/repos/"+owner+"/"+repo+"/contents/"+path+"?ref="+branch;var username=angular.copy(scope.githubModal.username),password=angular.copy(scope.githubModal.password),authdata=btoa(username+":"+password);username&&($http.defaults.headers.common.Authorization="Basic "+authdata),$http.get(github_api_url,{headers:{"X-DreamFactory-API-Key":void 0,"X-DreamFactory-Session-Token":void 0},ignore401:!0}).then(function(response){var extension=path.substr(path.lastIndexOf(".")+1,path.length-path.lastIndexOf(".")),mode="";switch(extension){case"js":mode="javascript";break;case"php":mode="php";break;case"py":mode="python";break;case"json":mode="json";break;default:mode="javascript"}if(void 0!==scope.editor){console.log("editor - utility");var decodedString=atob(response.data.content);scope.editor.session.setValue(decodedString),scope.editor.session.setMode({path:"ace/mode/"+mode,inline:!0}),scope.editor.focus(),scope.currentScriptObj={content:decodedString}}var element=angular.element("#"+scope.target);element.on("hidden.bs.modal",function(){void 0!==$(this).find("form")[0]&&$(this).find("form")[0].reset()}),scope.githubModal={"private":!1},scope.modalError={},element.appendTo("body").modal("hide")},function(response){401===response.status&&(scope.modalError={visible:!0,message:"Error: Authentication failed."}),404===response.status&&(scope.modalError={visible:!0,message:"Error: The file could not be found."})})}},scope.githubModalCancel=function(){scope.githubModal={"private":!1},scope.modalError={};var element=angular.element("#"+scope.target);element.on("hidden.bs.modal",function(){void 0!==$(this).find("form")[0]&&$(this).find("form")[0].reset()}),element.appendTo("body").modal("hide")};scope.$watch("githubModal.username",function(newValue,oldValue){return newValue?void(scope.modalError={visible:!1,message:""}):!1}),scope.$watch("githubModal.password",function(newValue,oldValue){return newValue?void(scope.modalError={visible:!1,message:""}):!1}),scope.$watch("githubModal.url",function(newValue,oldValue){if(!newValue)return!1;scope.modalError={visible:!1,message:""};var file_ext=newValue.substring(newValue.lastIndexOf(".")+1,newValue.length);if(scope.accept.indexOf(file_ext)>-1){var url=angular.copy(scope.githubModal.url),url_params=url.substr(url.indexOf(".com/")+5),url_array=url_params.split("/"),owner=url_array[0],repo=url_array[1],github_api_url="https://api.github.com/repos/"+owner+"/"+repo;$http.get(github_api_url,{headers:{"X-DreamFactory-API-Key":void 0,"X-DreamFactory-Session-Token":void 0}}).then(function(response){scope.githubModal["private"]=response.data["private"]},function(response){scope.githubModal["private"]=!0})}else{var formats=scope.accept.join(", ");scope.modalError={visible:!0,message:"Error: Invalid file format. Only "+formats+" file format(s) allowed"}}});scope.$on("githubShowModal",function(event,data){if(void 0!==data){var element=angular.element("#"+data);element.on("hidden.bs.modal",function(){void 0!==$(this).find("form")[0]&&$(this).find("form")[0].reset()}),element.appendTo("body").modal("show")}})}}}]).directive("dfComponentTitle",["MOD_UTILITY_ASSET_PATH","$location",function(MOD_UTILITY_ASSET_PATH,$location){return{restrict:"E",replace:!0,scope:!1,template:'<h1 class="df-component-nav-title pull-left">{{$parent.title}}</h1>'}}]).directive("dfTopLevelNavStd",["MOD_UTILITY_ASSET_PATH","$location","UserDataService",function(MOD_UTILITY_ASSET_PATH,$location,UserDataService){return{restrict:"E",scope:{options:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-top-level-nav-std.html",link:function(scope,elem,attrs){scope.links=scope.options.links,scope.activeLink=null,scope.$watch(function(){return $location.path()},function(newValue,oldValue){switch(newValue){case"/home":case"/apps":case"/admins":case"/users":case"/roles":case"/services":case"/schema":case"/data":case"/file-manager":case"/scripts":case"/config":case"/package-manager":case"/apidocs":case"/downloads":scope.activeLink="admin";break;case"/launchpad":scope.activeLink="launchpad";
break;case"/profile":scope.activeLink="user";break;case"/login":scope.activeLink="login";break;case"/register":case"/register-complete":case"/register-confirm":scope.activeLink="register"}})}}}]).directive("dfComponentNav",["MOD_UTILITY_ASSET_PATH","$location","$rootScope",function(MOD_UTILITY_ASSET_PATH,$location,$rootScope){return{restrict:"E",scope:{options:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-component-nav.html",link:function(scope,elem,attrs){scope.activeLink=null,scope.links=scope.options.links,scope.toggleMenu=!1,scope.openMenu=function(){scope._openMenu()},scope.closeMenu=function(){scope._closeMenu()},scope._openMenu=function(){scope.toggleMenu=!0},scope._closeMenu=function(){scope.toggleMenu=!1},scope.$watch("toggleMenu",function(n,o){return 1==n?($("#component-nav-flyout-mask").fadeIn(250),$("#top-bar-mask").fadeIn(250),$("#dreamfactoryApp").css({position:"fixed",right:"0",left:"0"}).animate({right:"+=300",left:"-=300"},250,function(){}),void $("#component-nav-flyout-menu").animate({right:"+=300"},250,function(){})):n===!1&&o?($("#dreamfactoryApp").animate({right:"-=300",left:"+=300"},250,function(){}),$("#component-nav-flyout-menu").animate({right:"-=300"},250,function(){}),$("#dreamfactoryApp").css("position","relative"),$("#component-nav-flyout-mask").fadeOut(250),void $("#top-bar-mask").fadeOut(250)):void 0}),scope.$watch(function(){return $location.path()},function(newValue,oldValue){return newValue?void(scope.activeLink=newValue.substr(1,newValue.length)):void(scope.activeLink=null)}),$rootScope.$on("$routeChangeSuccess",function(e){scope.$broadcast("component-nav:view:change"),scope._closeMenu()})}}}]).directive("dfSidebarNav",["MOD_UTILITY_ASSET_PATH","$rootScope","$location",function(MOD_UTILITY_ASSET_PATH,$rootScope,$location){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-sidebar-nav.html",link:function(scope,elem,attrs){function setMargin(location){switch(location){case"/schema":case"/data":case"/file-manager":case"/scripts":case"/apidocs":case"/package-manager":case"/downloads":$(".df-component-nav-title").css({marginLeft:0});break;case"/home":case"/apps":case"/admins":case"/users":case"/roles":case"/services":case"/config":var _elem=$(document).find("#sidebar-open");_elem&&_elem.is(":visible")?$(".df-component-nav-title").css({marginLeft:"45px"}):$(".df-component-nav-title").css({marginLeft:0})}}scope.activeView=scope.links[0],scope.toggleMenu=!1,scope.setActiveView=function(linkObj){scope._setActiveView(linkObj)},scope.openMenu=function(){scope._openMenu()},scope.closeMenu=function(){scope._closeMenu()},scope._setActiveView=function(linkObj){scope.activeView=linkObj,scope._closeMenu(),scope.$broadcast("sidebar-nav:view:change")},scope._openMenu=function(){scope.toggleMenu=!0},scope._closeMenu=function(){scope.toggleMenu=!1},scope.$watch("toggleMenu",function(n,o){return 1==n?($("#sidebar-nav-flyout-mask").css("z-index",10).fadeIn(250),$("#top-bar-mask").fadeIn(250),$("#dreamfactoryApp").css({position:"fixed",right:"0",left:"0"}).animate({right:"-=300",left:"+=300"},250,function(){}),void $("#sidebar-nav-flyout-menu").animate({left:"+=300"},250,function(){})):n===!1&&o?($("#dreamfactoryApp").animate({right:"+=300",left:"-=300"},250,function(){}),$("#sidebar-nav-flyout-menu").animate({left:"-=300"},250,function(){}),$("#dreamfactoryApp").css("position","relative"),$("#sidebar-nav-flyout-mask").fadeOut(250),void $("#top-bar-mask").fadeOut(250)):void 0}),scope.$watch("activeView",function(newValue,oldValue){return newValue?(oldValue.active=!1,void(newValue.active=!0)):!1}),$(window).resize(function(){setMargin($location.path())}),scope.$watch(function(){return $location.path()},function(newValue,oldValue){setMargin(newValue)})}}}]).directive("dreamfactoryAutoHeight",["$window","$route",function($window){return{restrict:"A",link:function(scope,elem,attrs){scope._getWindow=function(){return $(window)},scope._getDocument=function(){return $(document)},scope._getParent=function(parentStr){switch(parentStr){case"window":return scope._getWindow();case"document":return scope._getDocument();default:return $(parentStr)}},scope._setElementHeight=function(){angular.element(elem).css({height:scope._getParent(attrs.autoHeightParent).height()-200-attrs.autoHeightPadding})},scope._setElementHeight(),angular.element($window).on("resize",function(){scope._setElementHeight()})}}}]).directive("resize",[function($window){return function(scope,element){var w=angular.element($window);scope.getWindowDimensions=function(){return{h:w.height(),w:w.width()}},scope.$watch(scope.getWindowDimensions,function(newValue,oldValue){scope.windowHeight=newValue.h,scope.windowWidth=newValue.w,angular.element(element).css({width:newValue.w-angular.element("sidebar").css("width")+"px"})},!0)}}]).directive("dfFsHeight",["$window","$rootScope",function($window,$rootScope){return function(scope,elem,attrs){var setSize=function(){var _elem=$(elem),winHeight=$(window).height(),winWidth=$(window).width();_elem.is("#swagger")?_elem.attr("height",winHeight-200+"px"):_elem.is("#file-manager")?(_elem.attr("height",winHeight-130+"px"),$rootScope.$emit("filemanager:sized")):_elem.is("#scripting-sidebar-list")?_elem.css("height",winHeight-280+"px"):"ide"===_elem.attr("id")?_elem.css({height:winHeight-280+"px"}):_elem.hasClass("package-export-table")?_elem.css({height:winHeight-600}):winWidth>=992?$(elem).css({height:winHeight-120}):$(elem).css({height:"auto"})};scope.$on("apidocs:loaded",function(e){setSize()}),scope.$on("filemanager:loaded",function(e){setSize()}),scope.$on("script:loaded:success",function(e){setSize()}),scope.$on("sidebar-nav:view:change",function(e){setSize()}),scope.$on("sidebar-nav:view:change",function(e){setSize()}),$rootScope.$on("$routeChangeSuccess",function(e){setSize()}),$(document).ready(function(){setSize()}),$(window).on("resize",function(){setSize()})}}]).directive("dfVerbPicker",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{allowedVerbs:"=?",allowedVerbMask:"=?",description:"=?",size:"@"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-verb-picker.html",link:function(scope,elem,attrs){scope.verbs={GET:{name:"GET",active:!1,description:" (read)",mask:1},POST:{name:"POST",active:!1,description:" (create)",mask:2},PUT:{name:"PUT",active:!1,description:" (replace)",mask:4},PATCH:{name:"PATCH",active:!1,description:" (update)",mask:8},DELETE:{name:"DELETE",active:!1,description:" (remove)",mask:16}},scope.btnText="None Selected",scope.description=!0,scope._setVerbState=function(nameStr,stateBool){var verb=scope.verbs[nameStr];scope.verbs.hasOwnProperty(verb.name)&&(scope.verbs[verb.name].active=stateBool)},scope._toggleVerbState=function(nameStr,event){event.stopPropagation(),scope.verbs.hasOwnProperty(scope.verbs[nameStr].name)&&(scope.verbs[nameStr].active=!scope.verbs[nameStr].active,scope.allowedVerbMask=scope.allowedVerbMask^scope.verbs[nameStr].mask),scope.allowedVerbs=[],angular.forEach(scope.verbs,function(_obj){_obj.active&&scope.allowedVerbs.push(_obj.name)})},scope._isVerbActive=function(verbStr){return scope.verbs[verbStr].active},scope._setButtonText=function(){var verbs=[];angular.forEach(scope.verbs,function(verbObj){verbObj.active&&verbs.push(verbObj.name)}),scope.btnText="";var max=1;0==verbs.length?scope.btnText="None Selected":verbs.length>0&&verbs.length<=max?angular.forEach(verbs,function(_value,_index){scope._isVerbActive(_value)&&(_index!=verbs.length-1?scope.btnText+=_value+", ":scope.btnText+=_value)}):verbs.length>max&&(scope.btnText=verbs.length+" Selected")},scope.$watch("allowedVerbs",function(newValue,oldValue){return newValue?(Object.keys(scope.verbs).forEach(function(key){scope._setVerbState(key,!1)}),angular.forEach(scope.allowedVerbs,function(_value,_index){scope._setVerbState(_value,!0)}),void scope._setButtonText()):!1}),scope.$watch("allowedVerbMask",function(n,o){return null==n&&void 0==n?!1:(angular.forEach(scope.verbs,function(verbObj){n&verbObj.mask&&(verbObj.active=!0)}),void scope._setButtonText())}),elem.css({display:"inline-block",position:"relative"})}}}]).directive("dfRequestorPicker",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{allowedRequestors:"=?",allowedRequestorMask:"=?",size:"@"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-requestor-picker.html",link:function(scope,elem,attrs){scope.requestors={API:{name:"API",active:!1,mask:1},SCRIPT:{name:"SCRIPT",active:!1,mask:2}},scope.btnText="None Selected",scope._setRequestorState=function(nameStr,stateBool){var requestor=scope.requestors[nameStr];scope.requestors.hasOwnProperty(requestor.name)&&(scope.requestors[requestor.name].active=stateBool)},scope._toggleRequestorState=function(nameStr,event){event.stopPropagation(),scope.requestors.hasOwnProperty(scope.requestors[nameStr].name)&&(scope.requestors[nameStr].active=!scope.requestors[nameStr].active,scope.allowedRequestorMask=scope.allowedRequestorMask^scope.requestors[nameStr].mask),scope.allowedRequestors=[],angular.forEach(scope.requestors,function(_obj){_obj.active&&scope.allowedRequestors.push(_obj.name)})},scope._isRequestorActive=function(requestorStr){return scope.requestors[requestorStr].active},scope._setButtonText=function(){var requestors=[];angular.forEach(scope.requestors,function(rObj){rObj.active&&requestors.push(rObj.name)}),scope.btnText="",0==requestors.length?scope.btnText="None Selected":angular.forEach(requestors,function(_value,_index){scope._isRequestorActive(_value)&&(_index!=requestors.length-1?scope.btnText+=_value+", ":scope.btnText+=_value)})},scope.$watch("allowedRequestors",function(newValue,oldValue){return newValue?(angular.forEach(scope.allowedRequestors,function(_value,_index){scope._setRequestorState(_value,!0)}),void scope._setButtonText()):!1}),scope.$watch("allowedRequestorMask",function(n,o){return null==n&&void 0==n?!1:(angular.forEach(scope.requestors,function(requestorObj){n&requestorObj.mask&&(requestorObj.active=!0)}),void scope._setButtonText())}),elem.css({display:"inline-block",position:"absolute"})}}}]).directive("dfServicePicker",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http){return{restrict:"E",scope:{services:"=?",selected:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-service-picker.html",link:function(scope,elem,attrs){scope.resources=[],scope.activeResource=null,scope.activeService=null,scope.setServiceAndResource=function(){scope._checkForActive()&&scope._setServiceAndResource()},scope._getResources=function(){return $http({method:"GET",url:INSTANCE_URL+"/api/v2/"+scope.activeService})},scope._setServiceAndResource=function(){scope.selected={service:scope.activeService,resource:scope.activeResource}},scope._checkForActive=function(){return!!scope.activeResource&&scope.activeService},scope.$watch("activeService",function(newValue,oldValue){return newValue?(scope.resources=[],void scope._getResources().then(function(result){scope.resources=result.data.resource},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})):(scope.resources=[],scope.activeResource=null,!1)})}}}]).directive("dfDbTablePicker",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http","dfApplicationData",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http,dfApplicationData){return{restrict:"E",scope:{services:"=?",selected:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-db-table-picker.html",link:function(scope,elem,attrs){scope.resources=[],scope.activeResource=null,scope.activeService=null,scope.setServiceAndResource=function(){scope._checkForActive()&&scope._setServiceAndResource()},scope._getResources=function(){return dfApplicationData.getServiceComponents(scope.activeService,INSTANCE_URL+"/api/v2/"+scope.activeService+"/_table/",{params:{fields:"name,label"}})},scope._setServiceAndResource=function(){scope.selected={service:scope.activeService,resource:scope.activeResource}},scope._checkForActive=function(){return!!scope.activeResource&&scope.activeService},scope.$watch("activeService",function(newValue,oldValue){return newValue?(scope.resources=[],void scope._getResources().then(function(result){scope.resources=result},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})):(scope.resources=[],scope.activeResource=null,!1)})}}}]).directive("dfDbSchemaPicker",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http){return{restrict:"E",scope:{services:"=?",selected:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-db-schema-picker.html",link:function(scope,elem,attrs){scope.resources=[],scope.activeResource=null,scope.activeService=null,scope.setServiceAndResource=function(){scope._checkForActive()&&scope._setServiceAndResource()},scope._getResources=function(){return $http({method:"GET",url:INSTANCE_URL+"/api/v2/"+scope.activeService+"/_schema/"})},scope._setServiceAndResource=function(){scope.selected={service:scope.activeService,resource:scope.activeResource}},scope._checkForActive=function(){return!!scope.activeResource&&scope.activeService},scope.$watch("activeService",function(newValue,oldValue){return newValue?(scope.resources=[],void scope._getResources().then(function(result){scope.resources=result.data.resource},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})):(scope.resources=[],scope.activeResource=null,!1)})}}}]).directive("dfAceEditor",["INSTANCE_URL","MOD_UTILITY_ASSET_PATH","$http","$compile",function(INSTANCE_URL,MOD_UTILITY_ASSET_PATH,$http,$compile){return{restrict:"E",scope:{directData:"=?",currentEditor:"=?",serviceName:"=?",fileName:"=?",filePath:"=?",isUserCustom:"=?",isClean:"=?",isEditable:"=?",hideGutter:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-ace-editor.html",link:function(scope,elem,attrs){window.define=window.define||ace.define;var _elem=$(elem),_rand=Math.floor(100*Math.random()+1);_elem.children(".ide-attach").append($compile('<div id="ide_'+_rand+'" class="df-fs-height" style="height:400px"></div>')(scope)),scope.editor=null,scope.currentScriptObj="",scope.backupDoc="",scope.hideGutter=scope.hideGutter||!0,scope._getFileFromServer=function(requestDataObj){return $http({method:"GET",url:INSTANCE_URL+"/rest"+requestDataObj.serviceName+"/"+requestDataObj.fileName,cache:!1,params:requestDataObj.params})},scope._saveFileOnServer=function(requestDataObj){return $http({method:"PUT",url:INSTANCE_URL+"/rest"+requestDataObj.serviceName+"/"+requestDataObj.fileName,headers:{"Content-Type":"text/plain"},data:{post_body:requestDataObj.body}})},scope._deleteFileOnServer=function(requestDataObj){return $http({method:"DELETE",url:INSTANCE_URL+"/rest"+requestDataObj.serviceName+"/"+requestDataObj.fileName,params:{script_id:requestDataObj.scriptId}})},scope._setEditorInactive=function(stateBool){stateBool=stateBool||!1,stateBool?(scope.editor.setOptions({readOnly:!0,highlightActiveLine:!1,highlightGutterLine:!1}),scope.editor.renderer.$cursorLayer.element.style.opacity=0):(scope.editor.setOptions({readOnly:!1,highlightActiveLine:!0,highlightGutterLine:!0}),scope.editor.renderer.$cursorLayer.element.style.opacity=100)},scope._loadEditor=function(contents,mode,inactive){inactive=inactive||!1,scope.editor=ace.edit("ide_"+_rand),scope.editor.renderer.setShowGutter(scope.hideGutter),mode===!1?(scope.editor.session.setMode("ace/mode/javascript"),scope.editor.session.setMode({path:"ace/mode/javascript",v:Date.now()})):scope.editor.session.setMode({path:"ace/mode/"+mode,v:Date.now()}),scope._setEditorInactive(inactive),scope.editor.session.setValue(contents),scope.editor.on("input",function(){scope.$apply(function(){scope.isClean=scope.editor.session.getUndoManager().isClean()})}),scope.editor.on("blur",function(){scope.$apply(function(){try{scope.directData=JSON.parse(scope.editor.getValue())}catch(e){}})})},scope._cleanEditor=function(){scope.editor.session.getUndoManager().reset(),scope.editor.session.getUndoManager().markClean()};var watchScriptFileName=scope.$watch("fileName",function(newValue,oldValue){if("samples"===newValue)return!1;if(!newValue)return scope._loadEditor("",!1,!0),!1;var requestDataObj={serviceName:scope.serviceName,fileName:newValue,params:{include_body:!0}};scope._getFileFromServer(requestDataObj).then(function(result){scope.currentScript=result.data,scope._loadEditor(result.data.script_body,!1)},function(reject){scope._loadEditor("",!1)})}),watchDirectData=scope.$watch("directData",function(newValue,oldValue){var dataFormat=null;if(scope.$parent.hasOwnProperty("service")&&null!==scope.$parent.service&&scope.$parent.service.record.hasOwnProperty("doc")&&scope.$parent.service.record.doc){var format=scope.$parent.service.record.doc.format;switch(format){case 0:dataFormat="json";break;case 1:dataFormat="yaml";break;default:dataFormat="json"}}if(!newValue)return scope._loadEditor("",!1,!0),!1;try{newValue=angular.fromJson(newValue),newValue=JSON.stringify(newValue,null,"	")}catch(e){}scope._loadEditor(newValue,dataFormat,!scope.isEditable),scope.backupDoc=angular.copy(newValue),scope.currentEditor=scope.editor},!0);scope.$watch("isEditable",function(newValue,oldValue){scope.editor.setOptions({readOnly:!1,highlightActiveLine:!0,highlightGutterLine:!0}),scope.editor.renderer.$cursorLayer.element.style.opacity=100});scope.$on("$destroy",function(e){watchScriptFileName(),watchDirectData()}),scope.$on("save:script",function(e){var requestDataObj={serviceName:scope.serviceName,fileName:scope.fileName,body:scope.editor.getValue()||" "};scope._saveFileOnServer(requestDataObj).then(function(result){scope._cleanEditor(),$(function(){new PNotify({title:"Scripts",type:"success",text:"Script saved successfully."})})},function(reject){throw{module:"DreamFactory System Config Module",type:"error",provider:"dreamfactory",exception:reject}})}),scope.$on("delete:script",function(e){var requestDataObj={serviceName:scope.serviceName,fileName:scope.fileName,scriptId:scope.currentScriptObj.script_id};scope._deleteFileOnServer(requestDataObj).then(function(result){scope.editor.setValue("",!1),scope._cleanEditor(),$(function(){new PNotify({title:"Scripts",type:"success",text:"Script deleted successfully."})})},function(reject){throw{module:"DreamFactory System Config Module",type:"error",provider:"dreamfactory",exception:reject}})}),scope.$on("load:direct",function(e,dataObj){scope._loadEditor(dataObj,!1)}),scope.$on("reload:script",function(e,mode){scope._loadEditor(scope.backupDoc,mode)})}}}]).directive("fileModel",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.on("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("fileModel2",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.on("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("showtab",[function(){return{restrict:"A",link:function(scope,element,attrs){element.click(function(e){e.preventDefault(),$(element).tab("show")}),scope.activeTab=$(element).attr("id")}}}]).directive("dfSectionToolbar",["MOD_UTILITY_ASSET_PATH","$compile","dfApplicationData","$location","$timeout","$route",function(MOD_UTILITY_ASSET_PATH,$compile,dfApplicationData,$location,$timeout,$route){return{restrict:"E",scope:!1,transclude:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-toolbar.html",link:function(scope,elem,attrs){scope.changeFilter=function(searchStr){$timeout(function(){return searchStr!==scope.filterText&&scope.filterText?void 0:(scope.filterText=scope.filterText||null,void $location.search("filter",scope.filterText))},1e3)},scope.filterText=$location.search()&&$location.search().filter?$location.search().filter:"",elem.find("input")[0]&&elem.find("input")[0].focus()}}}]).directive("dfToolbarViewModes",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:!1,replace:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-view-modes.html",link:function(scope,elem,attrs){scope=scope.$parent,scope.viewMode=["list","thumbnails","table"],scope.toggleViewMode=function(mode){scope._toggleViewMode(mode)},scope._toggleViewMode=function(mode){scope.currentViewMode=scope.viewMode[mode]}}}}]).directive("dfToolbarHelp",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:!1,replace:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-toolbar-help.html",link:function(scope,elem,attrs){scope=scope.$parent}}}]).directive("dfToolbarPaginate",["MOD_UTILITY_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify","$location",function(MOD_UTILITY_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify,$location){return{restrict:"E",scope:{api:"=",prepFunc:"=?"},replace:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-toolbar-paginate.html",link:function(scope,elem,attrs){scope.totalCount=0,scope.pagesArr=[],scope.currentPage={},scope.isInProgress=!1,dfApplicationData.systemDataExists(scope.api)&&(scope.totalCount=dfApplicationData.getApiData(scope.api,"meta").count),scope.getPrevious=function(){return scope._isFirstPage()||scope.isInProgress?!1:void scope._getPrevious()},scope.getNext=function(){return scope._isLastPage()||scope.isInProgress?!1:void scope._getNext()},scope.getPage=function(pageObj){scope._getPage(pageObj)},scope.prepFunc=function(data){return data},scope._getDataFromServer=function(offset,type,value){var params={offset:offset,include_count:!0};return type&&("filter"==type?params.filter=value:params.type=value),dfApplicationData.getDataSetFromServer(scope.api,{params:params}).$promise},scope._calcTotalPages=function(totalCount,numPerPage){return Math.ceil(totalCount/numPerPage)},scope._createPageObj=function(_pageNum){return{number:_pageNum+1,value:_pageNum,offset:_pageNum*dfApplicationPrefs.getPrefs().data[scope.api].limit,stopPropagation:!1}},scope._createPagesArr=function(_totalCount){scope.pagesArr=[];for(var i=0;_totalCount>i;i++)scope.pagesArr.push(scope._createPageObj(i))},scope._setCurrentPage=function(pageDataObj){scope.currentPage=pageDataObj},scope._getCurrentPage=function(){return!scope.currentPage&&scope.pagesArr.length>0?scope.currentPage=scope.pagesArr[0]:scope.currentPage||scope.pagesArr.length||(scope.pagesArr.push(scope._createPageObj(0)),scope.currentPage=scope.pagesArr[0]),scope.currentPage},scope._isFirstPage=function(){return 0===scope._getCurrentPage().value},scope._isLastPage=function(){return scope.currentPage.value===scope.pagesArr.length-1},scope._previousPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value-1]},scope._nextPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value+1]},scope._calcPagination=function(newValue){return scope.pagesArr=[],0==scope.totalCount?(scope.pagesArr.push(scope._createPageObj(0)),!1):void scope._createPagesArr(scope._calcTotalPages(scope.totalCount,dfApplicationPrefs.getPrefs().data[newValue].limit))};var detectFilter=function(){var filterText=$location.search()&&$location.search().filter?$location.search().filter:void 0;if(!filterText)return!1;var arr=["first_name","last_name","name","email"];return arr.map(function(item){return"("+item+' like "%'+filterText+'%")'}).join(" or ")};scope._getPrevious=function(){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=scope.pagesArr[scope.currentPage.value-1].offset,filter=detectFilter(),filterFunction=filter?scope._getDataFromServer(offset,"filter",filter):scope._getDataFromServer(offset);filterFunction.then(function(result){scope.linkedData=scope.prepFunc({dataArr:result.record}),scope._previousPage(),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})},scope._getNext=function(){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=scope.pagesArr[scope.currentPage.value+1].offset,filter=detectFilter(),filterFunction=filter?scope._getDataFromServer(offset,"filter",filter):scope._getDataFromServer(offset);filterFunction.then(function(result){scope.linkedData=scope.prepFunc({dataArr:result.record}),scope._nextPage(),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})},scope._getPage=function(pageObj){if(scope.isInProgress)return!1;scope.isInProgress=!0;var filter=detectFilter(),filterFunction=filter?scope._getDataFromServer(pageObj.offset,"filter",filter):scope._getDataFromServer(pageObj.offset);filterFunction.then(function(result){scope._setCurrentPage(pageObj),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})};scope.$watch("api",function(newValue,oldValue){return newValue?(scope._calcPagination(newValue),void scope._setCurrentPage(scope.pagesArr[0])):!1});scope.$on("toolbar:paginate:"+scope.api+":reset",function(e){if("/logout"!==$location.path()){if(scope.isInProgress)return!1;scope.isInProgress=!0;var filter=detectFilter(),filterFunction=filter?scope._getDataFromServer(0,"filter",filter):scope._getDataFromServer(0);filterFunction.then(function(result){scope.totalCount=dfApplicationData.getApiData(scope.api,"meta").count,scope._calcPagination(scope.api),scope._setCurrentPage(scope.pagesArr[0]),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})}}),scope.$on("toolbar:paginate:"+scope.api+":delete",function(e){if(!scope.isInProgress){var curOffset=scope.currentPage.offset,recalcPagination=!1;scope._isLastPage()&&!dfApplicationData.getApiData(scope.api).length&&(recalcPagination=!0,1!==scope.currentPage.number&&(curOffset=scope.currentPage.offset-dfApplicationPrefs.getPrefs().data[scope.api].limit)),scope.isInProgress=!0,scope._getDataFromServer(curOffset).then(function(result){scope.totalCount=dfApplicationData.getApiData(scope.api,"meta").count,recalcPagination&&(scope._calcPagination(scope.api),scope._setCurrentPage(scope.pagesArr[scope.pagesArr.length-1])),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})}})}}}]).directive("dfDetailsHeader",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:{"new":"=",name:"=?",apiName:"=?"},template:'<div class="df-section-header df-section-all-round"><h4 data-ng-if="new">Create {{apiName}}</h4><h4 data-ng-if="!new">Edit {{name}}</h4></div>',link:function(scope,elem,attrs){}}}]).directive("dfSectionHeader",[function(){return{restrict:"E",scope:{title:"=?"},template:'<div class="df-section-header df-section-all-round"><h4>{{title}}</h4></div>',link:function(scope,elem,attrs){}}}]).directive("dfSetUserPassword",["MOD_USER_ASSET_PATH","$compile","dfStringService",function(MOD_USER_ASSET_PATH,$compile,dfStringService){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-input-manual-password.html",link:function(scope,elem,attrs){scope.verifyPassword="",scope.updatePassword=!1,scope.setPassword=!1,scope.identical=!0,scope._verifyPassword=function(password){password=password||scope.user.record.password,scope.identical=dfStringService.areIdentical(password,scope.verifyPassword)},scope._resetUserPasswordForm=function(){scope.verifyPassword="",scope.setPassword=!1};var watchSetPassword=scope.$watch("setPassword",function(newValue,oldValue){if(!newValue)return!1;var html="";scope.updatePassword?(html+='<div class="form-group"><input type="password" id="old-password" class="form-control" data-ng-model="password.old_password" placeholder="Enter Old Password" /></div>',html+='<div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="password" name="password" placeholder="Enter Password" data-ng-model="password.new_password" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword(password.new_password)" ></div><div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="verify-password" name="verify-password" placeholder="Verify Password" data-ng-model="verifyPassword" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword(password.new_password)" ></div>'):html+='<div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="password" name="password" placeholder="Enter Password" data-ng-model="user.record.password" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword()" ></div><div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="verify-password" name="verify-password" placeholder="Verify Password" data-ng-model="verifyPassword" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword()" ></div>';var el=$compile(html)(scope);angular.element("#set-password").append(el)});scope.$on("reset:user:form",function(e){scope._resetUserPasswordForm()}),scope.$on("$destroy",function(e){watchSetPassword()})}}}]).directive("dfSetSecurityQuestion",["MOD_UTILITY_ASSET_PATH","$compile",function(MOD_UTILITY_ASSET_PATH,$compile){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-set-security-question.html",link:function(scope,elem,attrs){scope.setQuestion=!1;scope.$watch("setQuestion",function(n,o){if(!n)return!1;var html="";html+='<div class="form-group"></div><label for="user-security-question">Security Question</label><input type="text" id="user-security-question" data-ng-model="user.record.security_question" class="form-control" placeholder="Enter security question" /></div><div class="form-group"></div><label for="user-security-answer">Security Answer</label><input type="text" id="user-security-answer" data-ng-model="user.record.security_answer" class="form-control" placeholder="Enter security answer" /></div>',angular.element("#set-question").append($compile(html)(scope))})}}}]).directive("dfDownloadSdk",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:{btnSize:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-download-sdk.html",link:function(scope,elem,attrs){scope.sampleAppLinks=[{label:"Android",href:"https://github.com/dreamfactorysoftware/android-sdk",icon:""},{label:"iOS Objective-C",href:"https://github.com/dreamfactorysoftware/ios-sdk",icon:""},{label:"iOS Swift",href:"https://github.com/dreamfactorysoftware/ios-swift-sdk",icon:""},{label:"JavaScript",href:"https://github.com/dreamfactorysoftware/javascript-sdk",icon:""},{label:"AngularJS",href:"https://github.com/dreamfactorysoftware/angular-sdk",icon:""},{label:"Angular 2",href:"https://github.com/dreamfactorysoftware/angular2-sdk",icon:""},{label:"Ionic",href:"https://github.com/dreamfactorysoftware/ionic-sdk",icon:""},{label:"Titanium",href:"https://github.com/dreamfactorysoftware/titanium-sdk",icon:""},{label:"ReactJS",href:"https://github.com/dreamfactorysoftware/reactjs-sdk",icon:""},{label:".NET",href:"https://github.com/dreamfactorysoftware/.net-sdk",icon:""}];
}}}]).directive("dfEmptySection",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-empty-section.html"}}]).directive("dfEmptySearchResult",["MOD_UTILITY_ASSET_PATH","$location",function(MOD_UTILITY_ASSET_PATH,$location){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-empty-search-result.html",link:function(scope,elem,attrs){$location.search()&&$location.search().filter&&(scope.$parent.filterText=$location.search()&&$location.search().filter?$location.search().filter:null)}}}]).directive("__dfMainLoading",["MOD_UTILITY_ASSET_PATH","dfApplicationData","$interval",function(MOD_UTILITY_ASSET_PATH,dfApplicationData,$interval){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-main-loading.html",link:function(scope,elem,attrs){scope.text={operation:"Loading",module:null},scope.moduleNames=["Services","Apps","Roles","System","Users","Config","Email Templates","Lookup Keys","CORS Config","App Groups","Events","Current User"];var loadingDots=null;scope.dfmlStart=function(){scope._dfmlStart()},scope.dfmlUpdate=function(){scope._dfmlUpdate()},scope.dfmlFinish=function(){scope._dfmlFinish()},scope._setProgressBar=function(percent){$(".progress-bar").css({width:percent+"%"})},scope._getModuleName=function(moduleStr){switch(moduleStr){case"service":return scope.moduleNames[0];case"app":return scope.moduleNames[1];case"role":return scope.moduleNames[2];case"system":return scope.moduleNames[3];case"user":return scope.moduleNames[4];case"config":return scope.moduleNames[5];case"email_template":return scope.moduleNames[6];case"lookup":return scope.moduleNames[7];case"cors":return scope.moduleNames[8];case"app_group":return scope.moduleNames[9];case"event":return scope.moduleNames[10];case"Current User":return scope.moduleNames[11]}},scope._getOpName=function(opStr){switch(opStr){case"loading":return"Loading"}},scope._loadingDots=function(){var counter=0;loadingDots=$interval(function(){counter++,3>=counter?(console.log(counter),$("#loading-dots").append(".")):($("#loading-dots").html(""),console.log("reset"),counter=0)},500,0,!1)},scope._dfmlStart=function(){scope.text.module=scope._getModuleName(dfApplicationData.getMainLoadData().loadData.module),$(elem).find("small").html(scope.text.module),scope._setProgressBar(0),$.each($(elem).children(),function(index,value){$(value).show()})},scope._dfmlUpdate=function(){var data=dfApplicationData.getMainLoadData().loadData;scope.text.module=scope._getModuleName(data.module),$(elem).find("h1").html(scope.text.operation),$(elem).find("p").html(scope.text.module),scope._setProgressBar(data.percent)},scope._dfmlFinish=function(){$(elem).children().hide(),scope._setProgressBar(0),$interval.cancel(loadingDots)},scope.$on("dfml:start",function(e,dataObj){scope.dfmlStart()}),scope.$on("dfml:update",function(e,dataObj){scope.dfmlUpdate()}),scope.$on("dfml:finish",function(e,dataObj){scope.dfmlFinish()})}}}]).service("dfMainLoading",["$timeout","$window",function($timeout,$window){function calcPercent(totalApis){return 100/totalApis}function setProgressBar(percent){$(".progress-bar").css({width:percent+"%"})}var appendTo="dreamfactoryApp",containerName="df-main-loading-container",title="df-loading-title",template='<div id="'+containerName+'" class="col-xs-10 col-sm-6 col-md-4 col-xs-offset-1 col-sm-offset-3 col-md-offset-4 df-main-loading df-auth-container"><div class="panel panel-default"><div class="panel-heading"><span id="'+title+'"></span>&nbsp;<span id="loading-dots"></span></div><div class="panel-body"><!--<h1 class="df-main-loading">{{text.operation}}</h1>--><p></p><div style="clear: both"></div><div class="progress"><div class="progress-bar df-main-loading-bar progress-bar-striped active" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" ><span class="sr-only"></span></div></div></div></div></div>';return{percentIncrease:0,currentPercent:0,start:function(totalApis){this.percentIncrease=calcPercent(totalApis),$("#"+appendTo).append(template)},update:function(apiName){this.currentPercent+=this.percentIncrease,setProgressBar(this.currentPercent),$("#"+title).html(apiName.substr(0,1).toUpperCase()+apiName.substr(1,apiName.length).split("_").join(" "))},finish:function(apiName){this.currentPercent+=this.percentIncrease,setProgressBar(this.currentPercent),$("#"+containerName).remove(),this.currentPercent=0}}}]).directive("dfPopupLogin",["MOD_UTILITY_ASSET_PATH","$compile","$location","UserEventsService",function(MOD_UTILITY_ASSET_PATH,$compile,$location,UserEventsService){return{restrict:"A",scope:!1,link:function(scope,elem,attrs){scope.popupLoginOptions={showTemplate:!0},scope.openLoginWindow=function(errormsg){scope._openLoginWindow(errormsg)},scope._openLoginWindow=function(errormsg){var html='<div id="df-login-frame" style="overflow: hidden; position: absolute; top:0; z-index:99999; background: rgba(0, 0, 0, .8); width: 100%; height: 100%"><div style="padding-top: 120px;"><dreamfactory-user-login data-in-err-msg="errormsg.data.error.message" data-options="popupLoginOptions"></dreamfactory-user-login></div></div>';$("#popup-login-container").html($compile(html)(scope))},scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){e.stopPropagation(),$("#df-login-frame").remove()}),scope.$on(UserEventsService.login.loginError,function(e,userDataObj){$("#df-login-frame").remove(),$location.url("/logout")})}}}]).directive("dfCopyrightFooter",["MOD_UTILITY_ASSET_PATH","APP_VERSION",function(MOD_UTILITY_ASSET_PATH,APP_VERSION){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-copyright-footer.html",link:function(scope,elem,attrs){scope.version=APP_VERSION}}}]).service("dfRouteChecker",["UserDataService","SystemConfigDataService","$location",function(UserDataService,SystemConfigDataService,$location){return function(){var currentUser=UserDataService.getCurrentUser();SystemConfigDataService.getSystemConfig();currentUser?currentUser&&!currentUser.is_sys_admin&&$location.url("/launchpad"):$location.url("/login")}}]).service("dfObjectService",["dfStringService",function(dfStringService){return{mergeDiff:function(obj1,obj2){for(var key in obj1)obj2.hasOwnProperty(key)||"$"===key.substr(0,1)||(obj2[key]=obj1[key]);return obj2},mergeObjects:function(obj1,obj2){for(var key in obj1)obj2[key]=obj1[key];return obj2},deepMergeObjects:function(obj1,obj2){var self=this;for(var _key in obj1)if(obj2.hasOwnProperty(_key))switch(Object.prototype.toString.call(obj2[_key])){case"[object Object]":obj2[_key]=self.deepMergeObjects(obj1[_key],obj2[_key]);break;case"[object Array]":obj2[_key]=obj1[_key];break;default:obj2[_key]=obj1[_key]}return obj2},compareObjectsAsJson:function(o,p){return dfStringService.areIdentical(angular.toJson(o),angular.toJson(p))},compareObjects:function(o,p){var i,keysO=Object.keys(o).sort(),keysP=Object.keys(p).sort();if(keysO.length!==keysP.length)return console.log("not the same nr of keys"),!1;if(keysO.join("")!==keysP.join(""))return console.log("different keys"),!1;for(i=0;i<keysO.length;++i)if(o[keysO[i]]instanceof Array){if(!(p[keysO[i]]instanceof Array))return console.log("first array"),!1;if(p[keysO[i]].sort().join("")!==o[keysO[i]].sort().join(""))return console.log("secound array"),!1}else if(o[keysO[i]]instanceof Date){if(!(p[keysO[i]]instanceof Date))return console.log("date 1"),!1;if(""+o[keysO[i]]!=""+p[keysO[i]])return console.log("date 2"),!1}else if(o[keysO[i]]instanceof Function){if(!(p[keysO[i]]instanceof Function))return console.log("func 1"),!1}else if(o[keysO[i]]instanceof Object){if(!(p[keysO[i]]instanceof Object))return console.log("obj 1"),!1;if(o[keysO[i]]===o){if(p[keysO[i]]!==p)return console.log("date 2"),!1}else if(this.compareObjects(o[keysO[i]],p[keysO[i]])===!1)return console.log("something else"),!1}return!0}}}]).service("dfStringService",[function(){return{areIdentical:function(stringA,stringB){function _sameLength(stringA,stringB){return stringA.length==stringB.length}function _sameLetters(stringA,stringB){for(var l=Math.min(stringA.length,stringB.length),i=0;l>i;i++)if(stringA.charAt(i)!==stringB.charAt(i))return!1;return!0}return stringA=stringA||"",stringB=stringB||"",_sameLength(stringA,stringB)&&_sameLetters(stringA,stringB)?!0:!1}}}]).service("SystemConfigDataService",["INSTANCE_URL",function(INSTANCE_URL){function _getSystemConfigFromServerSync(){var xhr;if(xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP"),xhr.open("GET",INSTANCE_URL+"/api/v2/system/environment",!1),xhr.setRequestHeader("X-DreamFactory-API-Key","6498a8ad1beb9d84d63035c5d1120c007fad6de706734db9689f8996707e0f7d"),xhr.setRequestHeader("Content-Type","application/json"),xhr.send(),4==xhr.readyState&&200==xhr.status)return angular.fromJson(xhr.responseText);throw{module:"DreamFactory System Config Module",type:"error",provider:"dreamfactory",exception:"XMLHTTPRequest Failure:  _getSystemConfigFromServer() Failed retrieve config.  Please contact your system administrator."}}function _getSystemConfig(){return systemConfig}function _setSystemConfig(userDataObj){systemConfig=userDataObj}var systemConfig={};return{getSystemConfigFromServerSync:function(){return _getSystemConfigFromServerSync()},getSystemConfig:function(){return _getSystemConfig()},setSystemConfig:function(systemConfigDataObj){_setSystemConfig(systemConfigDataObj)}}}]).service("XHRHelper",["INSTANCE_URL","ADMIN_API_KEY","$cookies",function(INSTANCE_URL,ADMIN_API_KEY,$cookies){function _isEmpty(obj){if(null==obj)return!0;if(obj.length>0)return!1;if(0===obj.length)return!0;for(var key in obj)if(hasOwnProperty.call(obj,key))return!1;return!0}function _setHeaders(_xhrObj,_headersDataObj){_xhrObj.setRequestHeader("X-DreamFactory-API-Key",ADMIN_API_KEY),_xhrObj.setRequestHeader("X-DreamFactory-Session-Token",$cookies.PHPSESSID);for(var _key in _headersDataObj)_xhrObj.setRequestHeader(_key,_headersDataObj[_key])}function _setParams(_paramsDataObj){var params="";if(!_isEmpty(_paramsDataObj)){params="?";for(var _key in _paramsDataObj)params+=_key+"="+_paramsDataObj[_key]+"&"}return""!==params&&(params=params.substring(0,params.length-1),encodeURI(params)),params}function _makeRequest(_method,_url,_async,_params,_headers,_mimeType){var xhr;xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");var params=_setParams(_params);return xhr.open(_method,INSTANCE_URL+"/api/v2/"+_url+params,_async),_setHeaders(xhr,_headers),xhr.overrideMimeType(_mimeType),xhr.send(),4===xhr.readyState?xhr:void 0}function _ajax(optionsDataObj){if(!optionsDataObj.url||""===optionsDataObj.url)throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:"XHRHelper Request Failure: No URL provided"};var defaults={method:"GET",url:"",async:!1,params:{},headers:{},mimeType:"application/json"};for(var _key in defaults)optionsDataObj.hasOwnProperty(_key)&&(defaults[_key]=optionsDataObj[_key]);return _makeRequest(defaults.method,defaults.url,defaults.async,defaults.params,defaults.headers,defaults.mimeType)}return{ajax:function(requestOptions){return _ajax(requestOptions)}}}]).service("dfSessionStorage",[function(){return{setItem:function(key,value){sessionStorage.setItem(key,value)},getItem:function(key){return sessionStorage.hasOwnProperty(key)?sessionStorage.getItem(key):!1},removeItem:function(key){return sessionStorage.hasOwnProperty(key)&&!sessionStorage.removeItem(key)?!0:!1}}}]).service("dfNotify",["dfApplicationPrefs",function(dfApplicationPrefs){function pnotify(messageOptions){!function(){PNotify.prototype.options.styling="fontawesome",new PNotify({title:messageOptions.module,type:messageOptions.type,text:messageOptions.message,addclass:"stack_topleft",animation:"fade",animate_speed:150,position_animate_speed:150,stack:stack_topleft,mouse_reset:!1})}()}function parseDreamfactoryError(errorDataObj){var error="";return"[object String]"===Object.prototype.toString.call(errorDataObj)?error=errorDataObj:error+=errorDataObj.data.error.message,error}function parseError(error,retValue){switch(retValue){case"message":return parseDreamfactoryError(error.message);default:return error.message=parseDreamfactoryError(error.message),error}}var stack_topleft={dir1:"down",dir2:"right",push:"top",firstpos1:25,firstpos2:25,spacing1:5,spacing2:5};({dir1:"down",dir2:"left",context:$("#stack-context")});return{success:function(options){switch(dfApplicationPrefs.getPrefs().application.notificationSystem.success){case"pnotify":pnotify(options);break;case"browserAlert":alert(options.message);break;case"browserLog":console.log(options.message);break;case"dfModalNotify":console.log("dfModalNotfiy");break;default:console.log("browserAlert")}},error:function(options){switch(dfApplicationPrefs.getPrefs().application.notificationSystem.error){case"pnotify":options.message=parseError(options,"message"),pnotify(options);break;case"browserAlert":alert(parseError(options,"message"));break;case"browserLog":console.error(parseError(options,"message"));break;case"dfModalNotify":console.log("dfModalNotfiy");break;default:console.log("browserAlert")}},warn:function(options){switch(dfApplicationPrefs.getPrefs().application.notificationSystem.warn){case"pnotify":pnotify(options);break;case"browserAlert":alert(options);break;case"browserLog":console.error(options);break;case"dfModalNotify":console.log("dfModalNotfiy");break;default:console.log("browserAlert")}},confirmNoSave:function(){return confirm("Continue without saving?")},confirm:function(msg){switch(dfApplicationPrefs.getPrefs().application.notificationSystem.confirm){case"pnotify":return pnotify(options);default:return confirm(msg)}},alert:function(msg){alert(msg)}}}]).service("dfIconService",[function(){return function(){return{support:"fa fa-fw fa-support",launchpad:"fa fa-fw fa-bars",admin:"fa fa-fw fa-cog",login:"fa fa-fw fa-sign-in",register:"fa fa-fw fa-group",user:"fa fa-fw fa-user"}}}]).service("dfServerInfoService",["$window",function($window){return{currentServer:function(){return $window.location.origin}}}]).service("dfReplaceParams",["UserDataService","$window",function(UserDataService,$window){return function(appUrl,appName){var newParams="",url=appUrl;if(-1!==appUrl.indexOf("?")){var temp=appUrl.split("?");url=temp[0];var params=temp[1];params=params.split("&"),$.each(params,function(index,oneParam){if(oneParam){newParams+=""===newParams?"?":"&";var pieces=oneParam.split("=");if(1<pieces.length){var name=pieces.shift(),value=pieces.join("=");switch(value){case"{session_id}":case"{ticket}":case"{first_name}":case"{last_name}":case"{display_name}":case"{email}":value=value.substring(1,value.length-1),value=UserDataService.getCurrentUser()[value];break;case"{user_id}":value=UserDataService.getCurrentUser().id;break;case"{app_name}":value=appName;break;case"{server_url}":value=$window.location.origin}newParams+=name+"="+value}else newParams+=oneParam}})}return url+newParams}}]).filter("orderAndShowSchema",[function(){return function(items,fields,reverse){var filtered=[];return angular.forEach(fields,function(field){angular.forEach(items,function(item){item.name===field.name&&1==field.active&&filtered.push(item)})}),reverse&&filtered.reverse(),filtered}}]).filter("orderAndShowValue",[function(){return function(items,fields,reverse){var filtered=[];return angular.forEach(fields,function(field){for(var _key in items)_key===field.name&&1==field.active&&filtered.push(items[_key])}),reverse&&filtered.reverse(),filtered}}]).filter("orderObjectBy",[function(){return function(items,field,reverse){function cmp(a,b){return a==b?0:b>a?-1:1}var filtered=[];if(angular.forEach(items,function(item){filtered.push(item)}),0===filtered.length)return filtered;var filterOnThis=filtered[0].record?filtered[0].record[field]:filtered[0][field];switch(typeof filterOnThis){case"number":filtered.sort(function(a,b){return a.hasOwnProperty("record")&&b.hasOwnProperty("record")?(a=a.record[field],b=b.record[field]):(a=a[field],b=b[field]),a=null===a||void 0===a?0:a,b=null===b||void 0===b?0:b,cmp(Number(a),Number(b))});break;case"string":filtered.sort(function(a,b){a.hasOwnProperty("record")&&b.hasOwnProperty("record")?(a=a.record[field],b=b.record[field]):(a=a[field],b=b[field]),a=null===a||void 0===a?"":a,b=null===b||void 0===b?"":b;var upA=a.toUpperCase(),upB=b.toUpperCase();return upB>upA?-1:upA>upB?1:0});break;default:filtered.sort(function(a,b){a.hasOwnProperty("record")&&b.hasOwnProperty("record")?(a=a.record[field],b=b.record[field]):(a=a[field],b=b[field]),a=null===a||void 0===a?"":a,b=null===b||void 0===b?"":b;var upA=a,upB=b;return upB>upA?-1:upA>upB?1:0})}return reverse&&filtered.reverse(),filtered}}]).filter("dfFilterBy",[function(){return function(items,options){if(!options.on)return items;var filtered=[];return options&&options.field&&options.value?(options.regex||(options.regex=new RegExp(options.value,"i")),angular.forEach(items,function(item){options.regex.test(item[options.field])&&filtered.push(item)}),filtered):items}}]).filter("dfOrderExplicit",[function(){return function(items,order){var filtered=[],i=0;return angular.forEach(items,function(value,index){value.name===order[i]&&filtered.push(value),i++}),filtered}}]),angular.module("dfSystemConfig",["ngRoute","dfUtility","dfApplication"]).constant("MODSYSCONFIG_ROUTER_PATH","/config").constant("MODSYSCONFIG_ASSET_PATH","admin_components/adf-system-config/").config(["$routeProvider","MODSYSCONFIG_ROUTER_PATH","MODSYSCONFIG_ASSET_PATH",function($routeProvider,MODSYSCONFIG_ROUTER_PATH,MODSYSCONFIG_ASSET_PATH){$routeProvider.when(MODSYSCONFIG_ROUTER_PATH,{templateUrl:MODSYSCONFIG_ASSET_PATH+"views/main.html",controller:"SystemConfigurationCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["SystemConfigDataService",function(SystemConfigDataService){}]).controller("SystemConfigurationCtrl",["$scope","dfApplicationData","SystemConfigEventsService","SystemConfigDataService","dfObjectService","dfNotify","INSTANCE_URL","$http",function($scope,dfApplicationData,SystemConfigEventsService,SystemConfigDataService,dfObjectService,dfNotify,INSTANCE_URL,$http){$scope.test=dfApplicationData.loadApi(["environment","config","cors","lookup","email_template"]);var SystemConfig=function(systemConfigData){return{record:angular.copy(systemConfigData),recordCopy:angular.copy(systemConfigData)}};$scope.getCacheEnabledServices=function(){$scope.cacheEnabledServices=[],$http.get(INSTANCE_URL+"/api/v2/system/cache?fields=*").then(function(result){$scope.cacheEnabledServices=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},$scope.$parent.title="Config",$scope.es=SystemConfigEventsService.systemConfigController,$scope.links=[{name:"system-info",label:"System Info",path:"system-info",active:!0},{name:"cache",label:"Cache",path:"cache",active:!1},{name:"cors",label:"CORS",path:"cors",active:!1},{name:"email-templates",label:"Email Templates",path:"email-templates",active:!1},{name:"global-lookup-keys",label:"Global Lookup Keys",path:"global-lookup-keys",active:!1},{name:"edit-preferences",label:"Preferences",path:"edit-preferences"}],$scope.updateConfig=function(){$scope._updateConfig()},$scope._updateConfigData=function(requestDataObj){return dfApplicationData.updateApiData("config",requestDataObj).$promise},$scope._updateSystemConfigService=function(systemConfigDataObj){SystemConfigDataService.setSystemConfig(systemConfigDataObj)},$scope._prepareSystemConfigData=function(){$scope._prepareLookupKeyData()},$scope._updateConfig=function(){$scope._prepareSystemConfigData();var requestDataObj={params:{fields:"*"},data:$scope.systemConfig.record};$scope._updateConfigData(requestDataObj).then(function(result){var systemConfigDataObj=result;$scope._updateSystemConfigService(systemConfigDataObj),$scope.systemConfig=new SystemConfig(result);var messageOptions={module:"Config",type:"success",provider:"dreamfactory",message:"System config updated successfully."};dfNotify.success(messageOptions),$scope.$emit($scope.es.updateSystemConfigSuccess,systemConfigDataObj)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},$scope.$on("$locationChangeStart",function(e){dfObjectService.compareObjectsAsJson($scope.systemConfig.record,$scope.systemConfig.recordCopy)||dfNotify.confirmNoSave()||e.preventDefault()}),$scope.dfLargeHelp={systemInfo:{title:"System Info Overview",text:"Displays current system information."},cacheConfig:{title:"Cache Overview",text:"Flush system-wide cache or per-service caches. Use the cache clearing buttons below to refresh any changes made to your system configuration values."},corsConfig:{title:"CORS Overview",text:"Enter allowed hosts and HTTP verbs. You can enter * for all hosts. Use the * option for development to enable application code running locally on your computer to communicate directly with your DreamFactory instance."},emailTemplates:{title:"Email Templates Overview",text:"Create and edit email templates for User Registration, User Invite, Password Reset, and your custom email services."},globalLookupKeys:{title:"Global Lookup Keys Overview",text:'An administrator can create any number of "key value" pairs attached to DreamFactory. The key values are automatically substituted on the server. For example, you can use Lookup Keys in Email Templates, as parameters in external REST Services, and in the username and password fields to connect to a SQL or NoSQL database. Mark any Lookup Key as private to securely encrypt the key value on the server and hide it in the user interface.<span style="color: red;">  Note that Lookup Keys for REST service configuration and credentials must be private.</span>'}}}]).directive("dreamfactorySystemInfo",["MODSYSCONFIG_ASSET_PATH","INSTANCE_URL","APP_VERSION","$http","dfNotify","dfApplicationData",function(MODSYSCONFIG_ASSET_PATH,INSTANCE_URL,APP_VERSION,$http,dfNotify,dfApplicationData){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/system-info.html",link:function(scope,elem,attrs){scope.upgrade=function(){window.top.location="http://wiki.dreamfactory.com/"},scope.APP_VERSION=APP_VERSION;var watchEnvironment=scope.$watch("systemEnv",function(newValue,oldValue){null===newValue&&(scope.systemEnv=dfApplicationData.getApiData("environment"))}),watchdfApplicationData=scope.$watchCollection(function(){return dfApplicationData.getApiData("environment")},function(newValue,oldValue){newValue&&(scope.systemEnv=dfApplicationData.getApiData("environment"))});scope.$on("$destroy",function(e){watchEnvironment(),watchdfApplicationData()})}}}]).directive("dreamfactoryCacheConfig",["MODSYSCONFIG_ASSET_PATH","INSTANCE_URL","APP_VERSION","$http","dfNotify",function(MODSYSCONFIG_ASSET_PATH,INSTANCE_URL,APP_VERSION,$http,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/cache-config.html",link:function(scope,elem,attrs){scope.flushSystemCache=function(){$http["delete"](INSTANCE_URL+"/api/v2/system/cache").success(function(){var messageOptions={module:"Cache",type:"success",provider:"dreamfactory",message:"System-wide cache flushed."};dfNotify.success(messageOptions)}).error(function(error){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:{data:{error:[error.error]}}};dfNotify.error(messageOptions)})},scope.flushServiceCache=function(index){$http["delete"](INSTANCE_URL+"/api/v2/system/cache/"+scope.cacheEnabledServices[index].name).success(function(){var messageOptions={module:"Cache",type:"success",provider:"dreamfactory",message:scope.cacheEnabledServices[index].label+" service cache flushed."};dfNotify.success(messageOptions)}).error(function(error){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:{data:{error:[error.error]}}};dfNotify.error(messageOptions)})}}}}]).directive("dreamfactoryCorsConfig",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/cors-config.html",link:function(scope,elem,attrs){var CorsEntry=function(corsEntryData){function genTempId(){return Math.floor(1e5*Math.random())}var _new={id:null,path:"NEW",description:null,origin:"*",header:"*",exposed_header:null,max_age:0,method:[],supports_credentials:!1,enabled:!1};return corsEntryData=corsEntryData||_new,{__dfUI:{newHost:null===corsEntryData.id,tempId:genTempId()},record:angular.copy(corsEntryData),recordCopy:angular.copy(corsEntryData)}};scope.corsEntries=null,scope.selectedCorsEntry=null,scope.addCorsEntry=function(){scope._addCorsEntry()},scope.deleteCorsEntry=function(){dfNotify.confirm("Delete "+scope.selectedCorsEntry.record.path+"?")&&scope._deleteCorsEntry()},scope.saveCorsEntry=function(){var template=scope.selectedCorsEntry;if(null==template){var messageOptions={module:"CORS",type:"warn",provider:"dreamfactory",message:"No host selected."};return dfNotify.warn(messageOptions),void angular.element("#select-cors-host").focus()}if(null===template.record.id){if("NEW"===template.record.path){var messageOptions={module:"CORS",type:"warn",provider:"dreamfactory",message:"Entries should have a unique path pattern.  Please rename your entry to something other than the default 'new' name."};return void dfNotify.warn(messageOptions)}if(void 0===template.record.path){var messageOptions={module:"CORS",type:"error",provider:"dreamfactory",message:"Path is a required field."};return void dfNotify.error(messageOptions)}scope._saveCorsEntry(template)}else scope._updateCorsEntry(template)},scope._saveCorsEntryToServer=function(requestDataObj){return dfApplicationData.saveApiData("cors",requestDataObj).$promise},scope._updateCorsEntryToServer=function(requestDataObj){return dfApplicationData.updateApiData("cors",requestDataObj).$promise},scope._deleteCorsEntryFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("cors",requestDataObj).$promise},scope._addCorsEntry=function(){scope.corsEntries.push(new CorsEntry),scope.selectedCorsEntry=scope.corsEntries[scope.corsEntries.length-1]},scope._deleteCorsEntry=function(){if(scope.selectedCorsEntry.__dfUI.newHost){for(var i=0;i<scope.corsEntries.length;){if(scope.corsEntries[i].__dfUI.tempId===scope.selectedCorsEntry.__dfUI.tempId){scope.corsEntries.splice(i,1);break}i++}var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry deleted successfully."};return dfNotify.success(messageOptions),void(scope.selectedCorsEntry=null)}var requestDataObj={params:{fields:"*"},data:scope.selectedCorsEntry.record};scope._deleteCorsEntryFromServer(requestDataObj).then(function(result){var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry deleted successfully."};dfNotify.success(messageOptions),scope.selectedCorsEntry=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveCorsEntry=function(template){var requestDataObj={params:{fields:"*"},data:template.record};scope._saveCorsEntryToServer(requestDataObj).then(function(result){var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry created successfully."};dfNotify.success(messageOptions);for(var i=0;i<scope.corsEntries.length;){if(scope.corsEntries[i].record.path===result.path){var _newHost=new CorsEntry(result);scope.corsEntries[i]=_newHost,scope.selectedCorsEntry=_newHost}i++}},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateCorsEntry=function(template){var requestDataObj={params:{fields:"*"},data:template.record};scope._updateCorsEntryToServer(requestDataObj).then(function(result){var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry updated successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope.helpTextCors={description:{title:"Description",text:"Enter a description for this entry."},path:{title:"Path",text:"Enter an absolute path or a pattern to match against incoming requests. Example: * allows any path, api/v2/* will allow any path with api/v2/ prefix. Path is matched by most accurate, i.e. api/v2/system/environment will match api/v2/* before *."},origins:{title:"Origin (Access-Control-Allow-Origin)",text:"Enter a comma-delimited list of origins that you would like to allow for this path. Enter * for allowing any origin."},headers:{title:"Headers (Access-Control-Allow-Headers)",text:"Enter a comma-delimited list of allowed headers. Enter * to allow any header."},exposed_headers:{title:"Exposed Headers (Access-Control-Expose-Headers)",text:"Enter a comma-delimited list of headers to expose."},max_age:{title:"Max Age (Access-Control-Max-Age)",text:"Enter max age. This indicates how long (in seconds) the results of a pre-flight request can be cached. Enter 0 for no caching."},methods:{title:"Methods (Access-Control-Allow-Methods)",text:"Select HTTP verbs/methods that are allowed."}};var watchcorsEntries=scope.$watch("corsEntries",function(newValue,oldValue){null===newValue&&(scope.corsEntries=[],angular.forEach(dfApplicationData.getApiData("cors"),function(emailData){scope.corsEntries.push(new CorsEntry(emailData))}))}),watchdfApplicationData=scope.$watchCollection(function(){return dfApplicationData.getApiData("cors")},function(newValue,oldValue){newValue&&(scope.corsEntries=[],angular.forEach(newValue,function(hostData){scope.corsEntries.push(new CorsEntry(hostData))}))});scope.$on("$destroy",function(e){watchcorsEntries(),watchdfApplicationData()})}}}]).directive("dreamfactoryEmailTemplates",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/email-templates.html",link:function(scope,elem,attrs){var EmailTemplate=function(emailTemplateData){function genTempId(){return Math.floor(1e5*Math.random())}var _new={bcc:null,body_html:null,body_text:null,cc:null,defaults:[],description:null,from_email:null,from_name:null,id:null,name:"NEW EMAIL TEMPLATE",replay_to_email:null,replay_to_name:null,subject:null,to:null};return emailTemplateData=emailTemplateData||_new,{__dfUI:{newTemplate:null===emailTemplateData.id,tempId:genTempId()},record:angular.copy(emailTemplateData),recordCopy:angular.copy(emailTemplateData)}};scope.emailTemplates=null,scope.selectedEmailTemplate=null,scope.addEmailTemplate=function(){scope._addEmailTemplate()},scope.deleteEmailTemplate=function(){dfNotify.confirm("Delete "+scope.selectedEmailTemplate.record.name+"?")&&scope._deleteEmailTemplate()},scope.saveEmailTemplate=function(){var template=scope.selectedEmailTemplate;if(null==template){var messageOptions={module:"Email Templates",type:"warn",provider:"dreamfactory",message:"No email template selected."};return dfNotify.warn(messageOptions),void angular.element("#select-email-template").focus()}if(null===template.record.id){if("NEW EMAIL TEMPLATE"===template.record.name){var messageOptions={module:"Email Templates",
type:"warn",provider:"dreamfactory",message:"Email templates should have a unique name.  Please rename your email template to something other than the default 'new' template name."};return void dfNotify.warn(messageOptions)}if(void 0===template.record.name){var messageOptions={module:"Email Templates",type:"error",provider:"dreamfactory",message:"Template Name is a required field."};return void dfNotify.error(messageOptions)}scope._saveEmailTemplate(template)}else scope._updateEmailTemplate(template)},scope._saveEmailTemplateToServer=function(requestDataObj){return dfApplicationData.saveApiData("email_template",requestDataObj).$promise},scope._updateEmailTemplateToServer=function(requestDataObj){return dfApplicationData.updateApiData("email_template",requestDataObj).$promise},scope._deleteEmailTemplateFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("email_template",requestDataObj).$promise},scope._addEmailTemplate=function(){scope.emailTemplates.push(new EmailTemplate),scope.selectedEmailTemplate=scope.emailTemplates[scope.emailTemplates.length-1]},scope._deleteEmailTemplate=function(){if(scope.selectedEmailTemplate.__dfUI.newTemplate){for(var i=0;i<scope.emailTemplates.length;){if(scope.emailTemplates[i].__dfUI.tempId===scope.selectedEmailTemplate.__dfUI.tempId){scope.emailTemplates.splice(i,1);break}i++}var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template deleted successfully."};return dfNotify.success(messageOptions),void(scope.selectedEmailTemplate=null)}var requestDataObj={params:{fields:"*"},data:scope.selectedEmailTemplate.record};scope._deleteEmailTemplateFromServer(requestDataObj).then(function(result){var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template deleted successfully."};dfNotify.success(messageOptions),scope.selectedEmailTemplate=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveEmailTemplate=function(template){var requestDataObj={params:{fields:"*"},data:template.record};scope._saveEmailTemplateToServer(requestDataObj).then(function(result){var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template created successfully."};dfNotify.success(messageOptions);for(var i=0;i<scope.emailTemplates.length;){if(scope.emailTemplates[i].record.name===result.name){var _newTemplate=new EmailTemplate(result);scope.emailTemplates[i]=_newTemplate,scope.selectedEmailTemplate=_newTemplate}i++}},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateEmailTemplate=function(template){var requestDataObj={params:{fields:"*"},data:template.record};scope._updateEmailTemplateToServer(requestDataObj).then(function(result){var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template updated successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope.helpText={recipient:{title:"Recipient",text:"Enter recipient address."},cc:{title:"Cc",text:"Enter cc address."},bcc:{title:"Bcc",text:"Enter bcc address."},reply_to_name:{title:"Reply to Name",text:"Enter reply to name."},reply_to_email:{title:"Reply to Email",text:"Enter reply to email."}};var watchEmailTemplates=scope.$watch("emailTemplates",function(newValue,oldValue){null===newValue&&(scope.emailTemplates=[],angular.forEach(dfApplicationData.getApiData("email_template"),function(emailData){scope.emailTemplates.push(new EmailTemplate(emailData))}))}),watchdfApplicationData=scope.$watchCollection(function(){return dfApplicationData.getApiData("email_template")},function(newValue,oldValue){newValue&&(scope.emailTemplates=[],angular.forEach(newValue,function(emailData){scope.emailTemplates.push(new EmailTemplate(emailData))}))});scope.$on("$destroy",function(e){watchEmailTemplates(),watchdfApplicationData()})}}}]).directive("dreamfactoryGlobalLookupKeys",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/global-lookup-keys.html",link:function(scope,elem,attrs){var Lookup=function(lookupKeyData){function genTempId(){return Math.floor(1e5*Math.random())}var _new={id:null,name:"NEW",value:null};return lookupKeyData=lookupKeyData||_new,{__dfUI:{newLookup:null===lookupKeyData.id,tempId:genTempId()},record:angular.copy(lookupKeyData),recordCopy:angular.copy(lookupKeyData)}};scope.globalLookups=null,scope.selectedLookup=null,scope.addLookup=function(){scope._addLookup()},scope.deleteLookup=function(){dfNotify.confirm("Delete "+scope.selectedLookup.record.name+"?")&&scope._deleteLookup()},scope.saveLookup=function(){var lookup=scope.selectedLookup;if(null==lookup){var messageOptions={module:"Global Lookup Keys",type:"warn",provider:"dreamfactory",message:"No lookup key selected."};return dfNotify.warn(messageOptions),void angular.element("#select-global-lookup").focus()}if(null===lookup.record.id){if("NEW"===lookup.record.name){var messageOptions={module:"Global Lookup Keys",type:"warn",provider:"dreamfactory",message:"Lookup keys should have a unique name.  Please rename your key to something other than the default 'new' key name."};return void dfNotify.warn(messageOptions)}if(void 0===lookup.record.name){var messageOptions={module:"Global Lookup Keys",type:"error",provider:"dreamfactory",message:"Lookup keys should have a unique name.  Please name your key."};return void dfNotify.error(messageOptions)}scope._saveLookup(lookup)}else scope._updateLookup(lookup)},scope._saveLookupToServer=function(requestDataObj){return dfApplicationData.saveApiData("lookup",requestDataObj).$promise},scope._updateLookupToServer=function(requestDataObj){return dfApplicationData.updateApiData("lookup",requestDataObj).$promise},scope._deleteLookupFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("lookup",requestDataObj).$promise},scope._addLookup=function(){scope.globalLookups.push(new Lookup),scope.selectedLookup=scope.globalLookups[scope.globalLookups.length-1]},scope._deleteLookup=function(){if(scope.selectedLookup.__dfUI.newLookup){for(var i=0;i<scope.globalLookups.length;){if(scope.globalLookups[i].__dfUI.tempId===scope.selectedLookup.__dfUI.tempId){scope.globalLookups.splice(i,1);break}i++}var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key deleted successfully."};return dfNotify.success(messageOptions),void(scope.selectedLookup=null)}var requestDataObj={params:{fields:"*"},data:scope.selectedLookup.record};scope._deleteLookupFromServer(requestDataObj).then(function(result){var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key deleted successfully."};dfNotify.success(messageOptions),scope.selectedLookup=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveLookup=function(lookup){var requestDataObj={params:{fields:"*"},data:lookup.record};scope._saveLookupToServer(requestDataObj).then(function(result){var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key created successfully."};dfNotify.success(messageOptions);for(var i=0;i<scope.globalLookups.length;){if(scope.globalLookups[i].record.name===result.name){var _newLookup=new Lookup(result);scope.globalLookups[i]=_newLookup,scope.selectedLookup=_newLookup}i++}},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateLookup=function(lookup){var requestDataObj={params:{fields:"*"},data:lookup.record};scope._updateLookupToServer(requestDataObj).then(function(result){var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key updated successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})};var watchGlobalLookupKeys=scope.$watch("globalLookups",function(newValue,oldValue){null===newValue&&(scope.globalLookups=[],angular.forEach(dfApplicationData.getApiData("lookup"),function(lookupData){scope.globalLookups.push(new Lookup(lookupData))}))}),watchdfApplicationData=scope.$watchCollection(function(){return dfApplicationData.getApiData("lookup")},function(newValue,oldValue){newValue&&(scope.globalLookups=[],angular.forEach(newValue,function(lookupData){scope.globalLookups.push(new Lookup(lookupData))}))});scope.$on("$destroy",function(e){watchGlobalLookupKeys(),watchdfApplicationData()})}}}]).directive("dfEditPreferences",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfPrefFactory","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfPrefFactory,dfNotify){return{restrict:"E",scope:{},templateUrl:MODSYSCONFIG_ASSET_PATH+"views/df-edit-preferences.html",link:function(scope,elem,attrs){scope.prefs={},scope.viewModes=["list","thumbnails","table"],angular.forEach(dfApplicationPrefs.getPrefs(),function(value,key){scope.prefs[key]={},angular.forEach(value,function(_value,_key){scope.prefs[key][_key]=[],angular.forEach(_value,function(__value,__key){scope.prefs[key][_key].push(dfPrefFactory(__key,__value))})})}),scope.savePrefs=function(){scope._savePrefs()},scope._savePrefsToServer=function(requestDataObj){return dfApplicationData.saveAdminPrefs(requestDataObj)},scope._formatPrefs=function(){var _prefs={};return angular.forEach(scope.prefs,function(value,key){_prefs[key]={},angular.forEach(value,function(_value,_key){_prefs[key][_key]={},angular.forEach(_value,function(obj){_prefs[key][_key][obj.key]=obj.value})})}),_prefs},scope._savePrefs=function(){var requestDataObj=scope._formatPrefs();scope._savePrefsToServer(requestDataObj).then(function(result){var messageOptions={module:"Preferences",type:"success",provider:"dreamfactory",message:"Preferences saved."};dfNotify.success(messageOptions),dfApplicationPrefs.setPrefs(requestDataObj)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}}}}]).factory("dfPrefFactory",[function(){return function(key,value){var Pref=function(type,key,value){return{type:type,key:key,value:value}};switch(Object.prototype.toString.call(value)){case"[object String]":return new Pref("string",key,value);case"[object Array]":return new Pref("array",key,value);case"[object Number]":return new Pref("number",key,value);case"[object Boolean]":return new Pref("boolean",key,value);case"[object Object":return new Pref("object",key,value)}}}]).service("SystemConfigEventsService",[function(){return{systemConfigController:{updateSystemConfigRequest:"update:systemconfig:request",updateSystemConfigSuccess:"update:systemconfig:success",updateSystemConfigError:"update:systemconfig:error"}}}]).service("SystemConfigDataService",["INSTANCE_URL",function(INSTANCE_URL){function _getSystemConfigFromServerSync(){var xhr;if(xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP"),xhr.open("GET",INSTANCE_URL+"/api/v2/system/environment",!1),xhr.setRequestHeader("X-DreamFactory-API-Key","6498a8ad1beb9d84d63035c5d1120c007fad6de706734db9689f8996707e0f7d"),xhr.setRequestHeader("Content-Type","application/json"),xhr.send(),4==xhr.readyState&&200==xhr.status)return angular.fromJson(xhr.responseText);throw{module:"DreamFactory System Config Module",type:"error",provider:"dreamfactory",exception:"XMLHTTPRequest Failure:  _getSystemConfigFromServer() Failed retrieve config.  Please contact your system administrator."}}function _getSystemConfig(){return systemConfig}function _setSystemConfig(userDataObj){systemConfig=userDataObj}var systemConfig={};return{getSystemConfigFromServerSync:function(){return _getSystemConfigFromServerSync()},getSystemConfig:function(){return _getSystemConfig()},setSystemConfig:function(systemConfigDataObj){_setSystemConfig(systemConfigDataObj)}}}]),angular.module("dfAdmins",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_ADMIN_ROUTER_PATH","/admins").constant("MOD_ADMIN_ASSET_PATH","admin_components/adf-admins/").config(["$routeProvider","MOD_ADMIN_ROUTER_PATH","MOD_ADMIN_ASSET_PATH",function($routeProvider,MOD_ADMIN_ROUTER_PATH,MOD_ADMIN_ASSET_PATH){$routeProvider.when(MOD_ADMIN_ROUTER_PATH,{templateUrl:MOD_ADMIN_ASSET_PATH+"views/main.html",controller:"AdminsCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("AdminsCtrl",["$rootScope","$scope","dfApplicationData","dfNotify",function($rootScope,$scope,dfApplicationData,dfNotify){$scope.$parent.title="Admins",$rootScope.isRouteLoading=!0,dfApplicationData.loadApi(["admin"]),$scope.links=[{name:"manage-admins",label:"Manage",path:"manage-admins"},{name:"create-admin",label:"Create",path:"create-admin"}],$scope.emptySectionOptions={title:"You have no Admins!",text:"Click the button below to get started adding admins.  You can always create new admins by clicking the tab located in the section menu to the left.",buttonText:"Create An Admin!",viewLink:$scope.links[1],active:!1},$scope.emptySearchResult={title:"You have no Admins that match your search criteria!",text:""}}]).directive("dfAdminDetails",["MOD_ADMIN_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify","dfObjectService","INSTANCE_URL","$http","$cookies","UserDataService","$cookieStore",function(MOD_ADMIN_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify,dfObjectService,INSTANCE_URL,$http,$cookies,UserDataService,$cookieStore){return{restrict:"E",scope:{adminData:"=?",newAdmin:"=?"},templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-admin-details.html",link:function(scope,elem,attrs){var Admin=function(adminData){var _admin={name:null,first_name:null,last_name:null,email:null,phone:null,confirmed:!1,is_active:!0,user_source:0,user_data:[],password:null,user_lookup_by_user_id:[]};return adminData=adminData||_admin,{__dfUI:{selected:!1},record:angular.copy(adminData),recordCopy:angular.copy(adminData)}};scope.admin=null,scope.newAdmin&&(scope.admin=new Admin),scope.sendEmailOnCreate=!1,scope._validateData=function(){return scope.setPassword&&scope.verifyPassword!==scope.admin.record.password?(dfNotify.error({module:"Admins",type:"error",message:"Passwords not same."}),!1):!0},scope.saveAdmin=function(){scope._validateData()&&(scope.newAdmin?scope._saveAdmin():scope._updateAdmin())},scope.closeAdmin=function(){scope._closeAdmin()},scope._saveAdminToServer=function(requestDataObj){return dfApplicationData.saveApiData("admin",requestDataObj).$promise},scope._updateAdminToServer=function(requestDataObj){return dfApplicationData.updateApiData("admin",requestDataObj).$promise},scope._resetAdminDetails=function(){scope.newAdmin?scope.admin=new Admin:scope.adminData=null},scope._prepareAdminData=function(){scope._prepareLookupKeyData()},scope._saveAdmin=function(){scope._prepareAdminData();var requestDataObj={params:{fields:"*",related:"user_lookup_by_user_id",send_invite:scope.sendEmailOnCreate},data:scope.admin.record};scope._saveAdminToServer(requestDataObj).then(function(result){var messageOptions={module:"Admins",provider:"dreamfactory",type:"success",message:"Admin saved successfully."};dfNotify.success(messageOptions),scope._resetUserPasswordForm(),scope.admin=new Admin},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._updateAdmin=function(){scope._prepareAdminData();var requestDataObj={params:{fields:"*",related:"user_lookup_by_user_id"},data:scope.admin.record};scope._updateAdminToServer(requestDataObj).then(function(result){if(result.session_token){$http.defaults.headers.common["X-DreamFactory-Session-Token"]=result.session_token,$cookies.PHPSESSID=result.session_token;var existingUser=UserDataService.getCurrentUser();existingUser.session_token=result.session_token,existingUser.session_id=result.session_token,$cookieStore.put("CurrentUserObj",existingUser)}var messageOptions={module:"Admins",provider:"dreamfactory",type:"success",message:"Admin updated successfully."};dfNotify.success(messageOptions),scope._resetUserPasswordForm(),scope.admin=new Admin(result),dfApplicationPrefs.getPrefs().sections.admin.autoClose&&scope.closeAdmin(),scope.lookupKeys=scope.lookupKeys.filter(function(key){return null!==key.record.user_id})},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._closeAdmin=function(){return scope._prepareAdminData(),dfObjectService.compareObjectsAsJson(scope.admin.record,scope.admin.recordCopy)||dfNotify.confirmNoSave()?void scope._resetAdminDetails():!1};var watchAdminData=scope.$watch("adminData",function(newValue,oldValue){return newValue?void(scope.admin=new Admin(newValue)):!1});scope.$on("$destroy",function(e){watchAdminData()}),scope.dfHelp={adminConfirmation:{title:"Admin Confirmation Info",text:"Is the admin confirmed? You can send an invite to unconfirmed admins."},adminLookupKeys:{title:"Admin Lookup Keys Info",text:'The DreamFactory administrator can create any number of "key value" pairs attached to a admin. The key values are automatically substituted on the server. For example, key names can be used in the username and password fields required to hook up a SQL or NoSQL database. They can also be used in Email Templates or as parameters for external REST services. Any Lookup Key can be marked as private, and in this case the key value is securely encrypted on the server and is no longer accessible through the platform interface. Lookup keys for service configuration and credentials must be made private.'}}}}}]).directive("dfConfirmAdmin",["INSTANCE_URL","MOD_ADMIN_ASSET_PATH","$http","SystemConfigDataService","dfNotify",function(INSTANCE_URL,MOD_ADMIN_ASSET_PATH,$http,SystemConfigDataService,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-input-confirm-admin.html",link:function(scope,elem,attrs){scope.inviteAdminOnCreate=!1,scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.invite=function(){scope._invite(scope.admin.record.id)},scope._sendInvite=function(adminId){return $http({url:INSTANCE_URL+"/api/v2/system/admin",method:"PATCH",params:{send_invite:!0},data:{id:adminId}})},scope._invite=function(adminId){scope._sendInvite(adminId).then(function(result){var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admin invite has been sent."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Admins",type:"error",provider:"dreamfactory",exception:reject.data};dfNotify.error(messageOptions)})},scope._callSendInvite=function(admin){scope.inviteAdminOnCreate&&scope._invite(admin.id)}}}}]).directive("dfAdminLookupKeys",["MOD_ADMIN_ASSET_PATH","dfStringService",function(MOD_ADMIN_ASSET_PATH,dfStringService){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-input-lookup-keys.html",link:function(scope,elem,attrs){var LookupKey=function(lookupKeyData){var _new={name:"",value:"","private":!1,allow_admin_update:!1};return{__dfUI:{unique:!0},record:angular.copy(lookupKeyData||_new),recordCopy:angular.copy(lookupKeyData||_new)}};scope.lookupKeys=[],scope.sameKeys=[],scope.newKey=function(){scope._newKey()},scope.removeKey=function(index){scope._removeKey(index)},scope._isUniqueKey=function(){scope.sameKeys=[],angular.forEach(scope.lookupKeys,function(value,index){angular.forEach(scope.lookupKeys,function(_value,_index){index!==_index&&value.record.name===_value.record.name&&scope.sameKeys.push(value)})})},scope._prepareLookupKeyData=function(){var tempArr=[];angular.forEach(scope.lookupKeys,function(lk){tempArr.push(lk.record)}),scope.admin.record.user_lookup_by_user_id=tempArr},scope._newKey=function(){scope.lookupKeys.push(new LookupKey)},scope._removeKey=function(index){void 0!==scope.lookupKeys[index].record.user_id?scope.lookupKeys[index].record.user_id=null:scope.lookupKeys.splice(index,1)};var watchAdmin=scope.$watch("admin",function(newValue,oldValue){newValue&&newValue.record.hasOwnProperty("user_lookup_by_user_id")&&newValue.record.user_lookup_by_user_id.length>0&&(scope.lookupKeys=[],angular.forEach(newValue.record.user_lookup_by_user_id,function(lookupKeyData){scope.lookupKeys.push(new LookupKey(lookupKeyData))}))}),watchSameKeys=scope.$watch("sameKeys",function(newValue,oldValue){return 0===newValue.length?void angular.forEach(scope.lookupKeys,function(lk){lk.__dfUI.unique=!0}):void angular.forEach(scope.lookupKeys,function(lk){angular.forEach(newValue,function(_lk){lk.record.name===_lk.record.name?lk.__dfUI.unique=!1:lk.__dfUI.unique=!0})})});scope.$watchCollection("lookupKeys",function(newValue,oldValue){newValue&&scope._isUniqueKey()});scope.$on("$destroy",function(e){watchAdmin(),watchSameKeys()})}}}]).directive("dfManageAdmins",["$rootScope","MOD_ADMIN_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify","$location",function($rootScope,MOD_ADMIN_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify,$location){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-manage-admins.html",link:function(scope,elem,attrs){var ManagedAdmin=function(adminData){return adminData&&(adminData.confirm_msg="N/A",adminData.confirmed===!0?adminData.confirm_msg="Confirmed":adminData.confirmed===!1&&(adminData.confirm_msg="Pending"),adminData.expired===!0&&(adminData.confirm_msg="Expired")),{__dfUI:{selected:!1},record:adminData}};scope.uploadFile=null,scope.currentViewMode=dfApplicationPrefs.getPrefs().sections.admin.manageViewMode,scope.admins=null,scope.currentEditAdmin=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"email",label:"Email",active:!0},{name:"name",label:"Display Name",active:!0},{name:"first_name",label:"First Name",active:!0},{name:"last_name",label:"Last Name",active:!0},{name:"is_active",label:"Active",active:!0},{name:"confirmed",label:"Registration",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedAdmins=[],scope.editAdmin=function(admin){scope._editAdmin(admin)},scope.deleteAdmin=function(admin){dfNotify.confirm("Delete "+admin.record.name+"?")&&scope._deleteAdmin(admin)},scope.deleteSelectedAdmins=function(){dfNotify.confirm("Delete selected admins?")&&scope._deleteSelectedAdmins()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(admin){scope._setSelected(admin)},scope._deleteFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("admin",requestDataObj).$promise},scope._editAdmin=function(admin){scope.currentEditAdmin=admin},scope._deleteAdmin=function(admin){var requestDataObj={params:{id:admin.record.id}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admin successfully deleted."};dfNotify.success(messageOptions),admin.__dfUI.selected&&scope.setSelected(admin),scope.$broadcast("toolbar:paginate:admin:delete")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._orderOnSelect=function(fieldObj){var orderedBy=scope.order.orderBy;orderedBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(admin){for(var i=0;i<scope.selectedAdmins.length;){if(admin.record.id===scope.selectedAdmins[i])return admin.__dfUI.selected=!1,void scope.selectedAdmins.splice(i,1);i++}admin.__dfUI.selected=!0,scope.selectedAdmins.push(admin.record.id)},scope._deleteSelectedAdmins=function(){var requestDataObj={params:{ids:scope.selectedAdmins.join(","),rollback:!0}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admins deleted successfully."};dfNotify.success(messageOptions),scope.selectedAdmins=[],scope.$broadcast("toolbar:paginate:admin:reset")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})};var watchAdmins=scope.$watch("admins",function(newValue,oldValue){if(null==newValue){var _admins=[],filterText=$location.search()&&$location.search().filter?$location.search().filter:void 0,req=null,filters=null;if(filterText){var arr=["first_name","last_name","name","email"];filters=arr.map(function(item){return"("+item+' like "%'+filterText+'%")'}).join(" or ")}return req=dfApplicationData.getApiData("admin",{filter:filters},!0),angular.forEach(req,function(admin){_admins.push(new ManagedAdmin(admin))}),void(scope.admins=_admins)}null!==newValue&&null!==oldValue&&0===newValue.length&&0===oldValue.length&&(scope.emptySectionOptions.active=!0)});scope.$watchCollection(function(){return dfApplicationData.getApiData("admin")},function(newValue,oldValue){var _admins=[];angular.forEach(dfApplicationData.getApiData("admin"),function(admin){_admins.push(new ManagedAdmin(admin))}),scope.admins=_admins});scope.$on("toolbar:paginate:admin:update",function(e){var _admins=[];angular.forEach(dfApplicationData.getApiData("admin"),function(admin){for(var _admin=new ManagedAdmin(admin),i=0;i<scope.selectedAdmins.length;){if(scope.selectedAdmins[i]===_admin.record.id){_admin.__dfUI.selected=!0;break}i++}_admins.push(_admin)}),scope.admins=_admins}),scope.$on("$destroy",function(e){watchAdmins(),scope.$broadcast("toolbar:paginate:admin:reset")}),scope.$watch("$viewContentLoaded",function(event){$rootScope.isRouteLoading=!1})}}}]).directive("dfAdminLoading",["$rootScope",function($rootScope){return{restrict:"E",template:"<div class='col-lg-12' ng-if='isRouteLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfImportAdmins",["MOD_ADMIN_ASSET_PATH","INSTANCE_URL","$http","dfTableEventService","dfNotify",function(MOD_ADMIN_ASSET_PATH,INSTANCE_URL,$http,dfTableEventService,dfNotify){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.importType=null,scope.field=angular.element("#upload"),scope.importAdmins=function(){scope._importAdmins()},scope._importAdmins=function(){scope.field.trigger("click")},scope._uploadFile=function(fileObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/system/admin",headers:{"Content-Type":"csv"===scope.importType?"text/csv":"application/"+scope.importType},params:{},data:fileObj})},scope._checkFileType=function(fileObj){var extension=fileObj.name.split(".");extension=extension[extension.length-1];var value=!1;switch(extension){case"csv":case"json":case"xml":scope.importType=extension,value=!0;break;default:value=!1}return value},scope.$watch("uploadFile",function(newValue,oldValue){if(!newValue)return!1;if(newValue=scope.uploadFile,!scope._checkFileType(newValue)){scope.uploadFile=null;var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:"Acceptable file formats are csv, json, and xml."};return dfNotify.error(messageOptions),!1}scope._uploadFile(newValue).then(function(result){scope.importType=null,scope.uploadFile=null,$("#upload").val("");var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admins imported successfully."};dfNotify.success(messageOptions),scope.$broadcast("toolbar:paginate:admin:reset")},function(reject){scope.importType=null,scope.uploadFile=null,$("#upload").val("");var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions),scope.$broadcast("toolbar:paginate:admin:reset")})["finally"](function(){},function(){})})}}}]).directive("dfExportAdmins",["MOD_ADMIN_ASSET_PATH","INSTANCE_URL","$cookies","$http","$window",function(MOD_ADMIN_ASSET_PATH,INSTANCE_URL,$cookies,$http,$window){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.fileFormatStr=null,scope.exportAdmins=function(fileFormatStr){scope._exportAdmins(fileFormatStr)},scope._getFile=function(urlStr){return $http({method:"GET",url:urlStr})},scope._exportAdmins=function(fileFormatStr){if("csv"===fileFormatStr||"json"===fileFormatStr||"xml"===fileFormatStr){scope.fileFormatStr=fileFormatStr;var params="file=admin."+scope.fileFormatStr+"&session_token="+$cookies.PHPSESSID;$window.location.href=INSTANCE_URL+"/api/v2/system/admin?"+params}}}}}]).directive("dfSetAdminPassword",["MOD_ADMIN_ASSET_PATH","$compile","dfStringService",function(MOD_ADMIN_ASSET_PATH,$compile,dfStringService){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-input-manual-password.html",link:function(scope,elem,attrs){scope.verifyPassword="",scope.updatePassword=!1,scope.setPassword=!1,scope.identical=!0,scope._verifyPassword=function(password){password=password||scope.admin.record.password,scope.identical=dfStringService.areIdentical(password,scope.verifyPassword)},scope._resetUserPasswordForm=function(){scope.verifyPassword="",scope.setPassword=!1};var watchSetPassword=scope.$watch("setPassword",function(newValue,oldValue){if(!newValue)return!1;var html="";scope.updatePassword?(html+='<div class="form-group"><input type="password" id="old-password" class="form-control" data-ng-model="password.old_password" placeholder="Enter Old Password" /></div>',html+='<div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="password" name="password" placeholder="Enter Password" data-ng-model="password.new_password" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword(password.new_password)" ></div><div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="verify-password" name="verify-password" placeholder="Verify Password" data-ng-model="verifyPassword" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword(password.new_password)" ></div>'):html+='<div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="password" name="password" placeholder="Enter Password" data-ng-model="admin.record.password" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword()" ></div><div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="verify-password" name="verify-password" placeholder="Verify Password" data-ng-model="verifyPassword" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword()" ></div>';var el=$compile(html)(scope);angular.element("#set-password").append(el)});scope.$on("reset:user:form",function(e){scope._resetUserPasswordForm();
}),scope.$on("$destroy",function(e){watchSetPassword()})}}}]),angular.module("dfUsers",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_USER_ROUTER_PATH","/users").constant("MOD_USER_ASSET_PATH","admin_components/adf-users/").config(["$routeProvider","MOD_USER_ROUTER_PATH","MOD_USER_ASSET_PATH",function($routeProvider,MOD_USER_ROUTER_PATH,MOD_USER_ASSET_PATH){$routeProvider.when(MOD_USER_ROUTER_PATH,{templateUrl:MOD_USER_ASSET_PATH+"views/main.html",controller:"UsersCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("UsersCtrl",["$rootScope","$scope","dfApplicationData","dfNotify",function($rootScope,$scope,dfApplicationData,dfNotify){$scope.$parent.title="Users",$rootScope.isRouteLoading=!0,dfApplicationData.loadApi(["user","role","app"]),$scope.links=[{name:"manage-users",label:"Manage",path:"manage-users"},{name:"create-user",label:"Create",path:"create-user"}],$scope.emptySectionOptions={title:"You have no Users!",text:"Click the button below to get started adding users.  You can always create new users by clicking the tab located in the section menu to the left.",buttonText:"Create A User!",viewLink:$scope.links[1],active:!1},$scope.emptySearchResult={title:"You have no Users that match your search criteria!",text:""}}]).directive("dfUserDetails",["MOD_USER_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify","dfObjectService","INSTANCE_URL","$http","$cookies","UserDataService","$cookieStore","$rootScope",function(MOD_USER_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify,dfObjectService,INSTANCE_URL,$http,$cookies,UserDataService,$cookieStore,$rootScope){return{restrict:"E",scope:{userData:"=?",newUser:"=?"},templateUrl:MOD_USER_ASSET_PATH+"views/df-user-details.html",link:function(scope,elem,attrs){var User=function(userData){var _user={name:null,first_name:null,last_name:null,email:null,phone:null,confirmed:!1,is_active:!0,default_app_id:null,user_source:0,user_data:[],password:null,user_lookup_by_user_id:[],user_to_app_to_role_by_user_id:[]};return userData=userData||_user,{__dfUI:{selected:!1},record:angular.copy(userData),recordCopy:angular.copy(userData)}};scope.user=null,scope.roles=dfApplicationData.getApiData("role"),scope.apps=dfApplicationData.getApiData("app"),scope.newUser&&(scope.user=new User),scope.sendEmailOnCreate=!1,scope.saveUser=function(){scope._validateData()&&(scope.newUser?scope._saveUser():scope._updateUser())},scope.closeUser=function(){scope._closeUser()},scope._saveUserToServer=function(requestDataObj){return dfApplicationData.saveApiData("user",requestDataObj).$promise},scope._updateUserToServer=function(requestDataObj){return dfApplicationData.updateApiData("user",requestDataObj).$promise},scope._resetUserDetails=function(){scope.newUser?scope.user=new User:scope.userData=null},scope._prepareUserData=function(){scope._prepareLookupKeyData()},scope._validateData=function(){return scope.setPassword&&scope.verifyPassword!==scope.user.record.password?(dfNotify.error({module:"Users",type:"error",message:"Passwords not same."}),!1):!0},scope._saveUser=function(){scope._prepareUserData();var requestDataObj={params:{fields:"*",related:"user_to_app_to_role_by_user_id,user_lookup_by_user_id",send_invite:scope.sendEmailOnCreate},data:scope.user.record};scope._saveUserToServer(requestDataObj).then(function(result){var messageOptions={module:"Users",provider:"dreamfactory",type:"success",message:"User saved successfully."};dfNotify.success(messageOptions),scope._resetUserPasswordForm(),scope.user=new User},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._updateUser=function(){scope._prepareUserData();var requestDataObj={params:{fields:"*",related:"user_to_app_to_role_by_user_id,user_lookup_by_user_id"},data:scope.user.record};UserDataService.getCurrentUser().id===requestDataObj.data.id&&(requestDataObj.url=INSTANCE_URL+"/api/v2/system/:api/profile",requestDataObj.queryParams={api:"@api"}),scope._updateUserToServer(requestDataObj).then(function(result){if(result.session_token){$http.defaults.headers.common["X-DreamFactory-Session-Token"]=result.session_token,$cookies.PHPSESSID=result.session_token;var existingUser=UserDataService.getCurrentUser();existingUser.session_token=result.session_token,existingUser.session_id=result.session_token,$cookieStore.put("CurrentUserObj",existingUser)}var messageOptions={module:"Users",provider:"dreamfactory",type:"success",message:"User updated successfully."};dfNotify.success(messageOptions),scope._resetUserPasswordForm(),scope.user=new User(result),dfApplicationPrefs.getPrefs().sections.user.autoClose&&scope.closeUser(),scope.lookupKeys=scope.lookupKeys.filter(function(key){return null!==key.record.user_id})},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._closeUser=function(){return scope._prepareUserData(),dfObjectService.compareObjectsAsJson(scope.user.record,scope.user.recordCopy)||dfNotify.confirmNoSave()?void scope._resetUserDetails():!1};var watchUserData=scope.$watch("userData",function(newValue,oldValue){return newValue?void(scope.user=new User(newValue)):!1});scope.$on("$destroy",function(e){watchUserData()}),$rootScope.$on("app",function(){scope.apps=dfApplicationData.getApiData("app")}),$rootScope.$on("role",function(){scope.roles=dfApplicationData.getApiData("role")}),scope.dfHelp={userRole:{title:"User Role Info",text:"Roles provide a way to grant or deny access to specific applications and services on a per-user basis. Each user who is not a system admin must be assigned a role. Go to the Roles tab to create and manage roles."},userConfirmation:{title:"User Confirmation Info",text:"Is the user confirmed? You can send an invite to unconfirmed users."},userLookupKeys:{title:"User Lookup Keys Info",text:'The DreamFactory administrator can create any number of "key value" pairs attached to a user. The key values are automatically substituted on the server. For example, key names can be used in the username and password fields required to hook up a SQL or NoSQL database. They can also be used in Email Templates or as parameters for external REST services. Any Lookup Key can be marked as private, and in this case the key value is securely encrypted on the server and is no longer accessible through the platform interface. Lookup keys for service configuration and credentials must be made private.'}}}}}]).directive("dfConfirmUser",["INSTANCE_URL","MOD_USER_ASSET_PATH","$http","SystemConfigDataService","dfNotify",function(INSTANCE_URL,MOD_USER_ASSET_PATH,$http,SystemConfigDataService,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-input-confirm-user.html",link:function(scope,elem,attrs){scope.inviteUserOnCreate=!1,scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.invite=function(){scope._invite(scope.user.record.id)},scope._sendInvite=function(userId){return $http({url:INSTANCE_URL+"/api/v2/system/user/"+userId,method:"PATCH",params:{send_invite:!0}})},scope._invite=function(userId){scope._sendInvite(userId).then(function(result){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"User invite has been sent."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Users",type:"error",provider:"dreamfactory",message:reject.data.error.message};dfNotify.error(messageOptions)})},scope._callSendInvite=function(user){scope.inviteUserOnCreate&&scope._invite(user.id)}}}}]).directive("dfUserRoles",["MOD_USER_ASSET_PATH","dfApplicationData",function(MOD_USER_ASSET_PATH,dfApplicationData){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-user-roles.html",link:function(scope,elem,attrs){scope.roleToAppMap={},scope.roles=dfApplicationData.getApiData("role"),scope.apps=dfApplicationData.getApiData("app"),scope.$watch("user",function(){scope.user&&scope.user.record.user_to_app_to_role_by_user_id.forEach(function(item){scope.roleToAppMap[item.app_id]=item.role_id})}),scope.selectRole=function(){Object.keys(scope.roleToAppMap).forEach(function(item){scope.roleToAppMap[item]?scope._updateRoleApp(item,scope.roleToAppMap[item]):scope._removeRoleApp(item,scope.roleToAppMap[item])})},scope._removeRoleApp=function(appId){var existing=scope.user.record.user_to_app_to_role_by_user_id.filter(function(item){return item.app_id==appId})[0];existing&&(existing.user_id=null)},scope._updateRoleApp=function(appId,roleId){var existing=scope.user.record.user_to_app_to_role_by_user_id.filter(function(item){return item.app_id==appId})[0];existing?(existing.app_id=appId,existing.role_id=roleId):scope.user.record.user_to_app_to_role_by_user_id.push({app_id:appId,role_id:roleId,user_id:scope.user.record.id})};var watchAppData=scope.$watch("apps",function(newValue,oldValue){return newValue?void(scope.apps=newValue):!1}),watchRoleData=scope.$watchCollection("roles",function(newValue,oldValue){return newValue?void(scope.roles=newValue):!1});scope.$on("$destroy",function(e){watchAppData(),watchRoleData()})}}}]).directive("dfUserLookupKeys",["MOD_USER_ASSET_PATH","dfStringService",function(MOD_USER_ASSET_PATH,dfStringService){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-input-lookup-keys.html",link:function(scope,elem,attrs){var LookupKey=function(lookupKeyData){var _new={name:"",value:"","private":!1,allow_user_update:!1};return{__dfUI:{unique:!0},record:angular.copy(lookupKeyData||_new),recordCopy:angular.copy(lookupKeyData||_new)}};scope.lookupKeys=[],scope.sameKeys=[],scope.newKey=function(){scope._newKey()},scope.removeKey=function(index){scope._removeKey(index)},scope._isUniqueKey=function(){scope.sameKeys=[],angular.forEach(scope.lookupKeys,function(value,index){angular.forEach(scope.lookupKeys,function(_value,_index){index!==_index&&value.record.name===_value.record.name&&scope.sameKeys.push(value)})})},scope._prepareLookupKeyData=function(){var tempArr=[];angular.forEach(scope.lookupKeys,function(lk){tempArr.push(lk.record)}),scope.user.record.user_lookup_by_user_id=tempArr},scope._newKey=function(){scope.lookupKeys.push(new LookupKey)},scope._removeKey=function(index){void 0!==scope.lookupKeys[index].record.user_id?scope.lookupKeys[index].record.user_id=null:scope.lookupKeys.splice(index,1)};var watchUser=scope.$watch("user",function(newValue,oldValue){newValue&&newValue.record.hasOwnProperty("user_lookup_by_user_id")&&newValue.record.user_lookup_by_user_id.length>0&&(scope.lookupKeys=[],angular.forEach(newValue.record.user_lookup_by_user_id,function(lookupKeyData){scope.lookupKeys.push(new LookupKey(lookupKeyData))}))}),watchSameKeys=scope.$watch("sameKeys",function(newValue,oldValue){return 0===newValue.length?void angular.forEach(scope.lookupKeys,function(lk){lk.__dfUI.unique=!0}):void angular.forEach(scope.lookupKeys,function(lk){angular.forEach(newValue,function(_lk){lk.record.name===_lk.record.name?lk.__dfUI.unique=!1:lk.__dfUI.unique=!0})})});scope.$watchCollection("lookupKeys",function(newValue,oldValue){newValue&&scope._isUniqueKey()});scope.$on("$destroy",function(e){watchUser(),watchSameKeys()})}}}]).directive("dfManageUsers",["$rootScope","MOD_USER_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify",function($rootScope,MOD_USER_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-manage-users.html",link:function(scope,elem,attrs){var ManagedUser=function(userData){return userData&&(userData.confirm_msg="N/A",userData.confirmed===!0?userData.confirm_msg="Confirmed":userData.confirmed===!1&&(userData.confirm_msg="Pending"),userData.expired===!0&&(userData.confirm_msg="Expired")),{__dfUI:{selected:!1},record:userData}};scope.uploadFile={path:""},scope.currentViewMode=dfApplicationPrefs.getPrefs().sections.user.manageViewMode,scope.users=null,scope.currentEditUser=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"email",label:"Email",active:!0},{name:"name",label:"Display Name",active:!0},{name:"first_name",label:"First Name",active:!0},{name:"last_name",label:"Last Name",active:!0},{name:"is_active",label:"Active",active:!0},{name:"confirmed",label:"Registration",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedUsers=[],scope.roles=dfApplicationData.getApiData("role"),scope.editUser=function(user){scope._editUser(user)},scope.deleteUser=function(user){dfNotify.confirm("Delete "+user.record.name+"?")&&scope._deleteUser(user)},scope.deleteSelectedUsers=function(){dfNotify.confirm("Delete selected users?")&&scope._deleteSelectedUsers()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(user){scope._setSelected(user)},scope._deleteFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("user",requestDataObj).$promise},scope._getUserRoleName=function(roleId){for(var i=0;i<scope.roles.length;i++)if(roleId===scope.roles[i].id)return scope.roles[i].name},scope._editUser=function(user){scope.currentEditUser=user},scope._deleteUser=function(user){var requestDataObj={params:{id:user.record.id}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"User successfully deleted."};dfNotify.success(messageOptions),user.__dfUI.selected&&scope.setSelected(user),scope.$broadcast("toolbar:paginate:user:delete")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._orderOnSelect=function(fieldObj){var orderedBy=scope.order.orderBy;orderedBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(user){for(var i=0;i<scope.selectedUsers.length;){if(user.record.id===scope.selectedUsers[i])return user.__dfUI.selected=!1,void scope.selectedUsers.splice(i,1);i++}user.__dfUI.selected=!0,scope.selectedUsers.push(user.record.id)},scope._deleteSelectedUsers=function(){var requestDataObj={params:{ids:scope.selectedUsers.join(","),rollback:!0}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Users deleted successfully."};dfNotify.success(messageOptions),scope.selectedUsers=[],scope.$broadcast("toolbar:paginate:user:reset")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})};var watchUsers=scope.$watch("users",function(newValue,oldValue){if(null===newValue){var _users=[];return angular.forEach(dfApplicationData.getApiData("user"),function(user){_users.push(new ManagedUser(user))}),void(scope.users=_users)}null!==newValue&&null!==oldValue&&0===newValue.length&&0===oldValue.length&&(scope.emptySectionOptions.active=!0)});scope.$watchCollection(function(){return dfApplicationData.getApiData("user")},function(newValue,oldValue){var _users=[];angular.forEach(dfApplicationData.getApiData("user"),function(user){_users.push(new ManagedUser(user))}),scope.users=_users});scope.$on("toolbar:paginate:user:update",function(e){var _users=[];angular.forEach(dfApplicationData.getApiData("user"),function(user){for(var _user=new ManagedUser(user),i=0;i<scope.selectedUsers.length;){if(scope.selectedUsers[i]===_user.record.id){_user.__dfUI.selected=!0;break}i++}_users.push(_user)}),scope.users=_users}),scope.$on("$destroy",function(e){watchUsers(),scope.$broadcast("toolbar:paginate:user:reset")}),scope.$watch("$viewContentLoaded",function(event){$rootScope.isRouteLoading=!1})}}}]).directive("dfUserLoading",["$rootScope",function($rootScope){return{restrict:"E",template:"<div class='col-lg-12' ng-if='isRouteLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfImportUsers",["MOD_USER_ASSET_PATH","INSTANCE_URL","$http","dfTableEventService","dfNotify",function(MOD_USER_ASSET_PATH,INSTANCE_URL,$http,dfTableEventService,dfNotify){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.importType=null,scope.field=angular.element("#upload"),scope.importUsers=function(){scope._importUsers()},scope._importUsers=function(){scope.field.trigger("click")},scope._uploadFile=function(fileObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/system/user",headers:{"Content-Type":"csv"===scope.importType?"text/csv":"application/"+scope.importType},params:{},data:fileObj})},scope._checkFileType=function(fileObj){var extension=fileObj.name.split(".");extension=extension[extension.length-1];var value=!1;switch(extension){case"csv":case"json":case"xml":scope.importType=extension,value=!0;break;default:value=!1}return value},scope.$watch("uploadFile.path",function(newValue,oldValue){if(!newValue)return!1;if(newValue=scope.uploadFile.path,!scope._checkFileType(newValue)){scope.uploadFile.path="";var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:"Acceptable file formats are csv, json, and xml."};return dfNotify.error(messageOptions),!1}scope._uploadFile(newValue).then(function(result){scope.importType=null,scope.uploadFile.path="",$("#upload").val("");var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Users imported successfully."};dfNotify.success(messageOptions),scope.$broadcast("toolbar:paginate:user:reset")},function(reject){var detailError="";if(reject.data&&reject.data.error&&reject.data.error.context){var errorNum=reject.data.error.context.errors[0];detailError=reject.data.error.message+" Detail: "+reject.data.error.context.resource[errorNum]}scope.importType=null,scope.uploadFile.path="",$("#upload").val("");var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:""!=detailError?detailError:reject};dfNotify.error(messageOptions),scope.$broadcast("toolbar:paginate:user:reset")})["finally"](function(){},function(){})})}}}]).directive("dfExportUsers",["MOD_USER_ASSET_PATH","INSTANCE_URL","$cookies","$http","$window",function(MOD_USER_ASSET_PATH,INSTANCE_URL,$cookies,$http,$window){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.fileFormatStr=null,scope.exportUsers=function(fileFormatStr){scope._exportUsers(fileFormatStr)},scope._getFile=function(urlStr){return $http({method:"GET",url:urlStr})},scope._exportUsers=function(fileFormatStr){if("csv"===fileFormatStr||"json"===fileFormatStr||"xml"===fileFormatStr){scope.fileFormatStr=fileFormatStr;var params="file=user."+scope.fileFormatStr+"&session_token="+$cookies.PHPSESSID;$window.location.href=INSTANCE_URL+"/api/v2/system/user?"+params}}}}}]),angular.module("dfApps",["ngRoute","dfUtility","dfApplication","dfHelp","dfTable"]).constant("MOD_APPS_ROUTER_PATH","/apps").constant("MOD_APPS_ASSET_PATH","admin_components/adf-apps/").config(["$routeProvider","MOD_APPS_ROUTER_PATH","MOD_APPS_ASSET_PATH",function($routeProvider,MOD_APPS_ROUTER_PATH,MOD_APPS_ASSET_PATH){$routeProvider.when(MOD_APPS_ROUTER_PATH,{templateUrl:MOD_APPS_ASSET_PATH+"views/main.html",controller:"AppsCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("AppsCtrl",["$rootScope","$scope","dfApplicationData",function($rootScope,$scope,dfApplicationData){$scope.$parent.title="Apps",$rootScope.isRouteLoading=!0,dfApplicationData.loadApi(["role","service","app"]),$scope.links=[{name:"manage-apps",label:"Manage",path:"manage-apps"},{name:"create-app",label:"Create",path:"create-app"},{name:"import-app",label:"Import",path:"import-app"}],$scope.emptySectionOptions={title:"You have no Apps!",text:"Click the button below to get started building your first application.  You can always create new applications by clicking the tab located in the section menu to the left.",buttonText:"Create An App!",viewLink:$scope.links[1],active:!1},$scope.$on("$destroy",function(e){})}]).directive("dfAppDetails",["MOD_APPS_ASSET_PATH","INSTANCE_URL","UserDataService","$location","dfServerInfoService","dfApplicationData","dfApplicationPrefs","dfNotify","$http","dfObjectService","$rootScope",function(MOD_APPS_ASSET_PATH,INSTANCE_URL,UserDataService,$location,dfServerInfoService,dfApplicationData,dfApplicationPrefs,dfNotify,$http,dfObjectService,$rootScope){return{restrict:"E",scope:{appData:"=?",newApp:"=?"},templateUrl:MOD_APPS_ASSET_PATH+"views/df-app-details.html",link:function(scope,elem,attrs){var getLocalFileStorageServiceId=function(){var a=dfApplicationData.getApiData("service",{type:"local_file"});return a&&a.length?a[0].id:null},App=function(appData){var _app={name:"",description:"",type:0,storage_service_id:getLocalFileStorageServiceId(),storage_container:"applications",path:"",url:"",role_id:null};return appData=appData||_app,{__dfUI:{selected:!1},record:angular.copy(appData),recordCopy:angular.copy(appData)}};scope.currentServer=dfServerInfoService.currentServer(),scope.app=null,scope.locations=[{label:"No Storage Required - remote device, client, or desktop.",value:"0"},{label:"On a provisioned file storage service.",value:"1"},{label:"On this web server.",value:"3"},{label:"On a remote URL.",value:"2"}],scope.roles=dfApplicationData.getApiData("role"),scope.selectedRoleId=null,scope.storageServices=dfApplicationData.getApiData("service",{type:"local_file,aws_s3,azure_blob,rackspace_cloud_files,openstack_object_storage"}),scope.storageContainers=[],scope.newApp&&(scope.app=new App),scope.saveApp=function(){scope.newApp?scope._saveApp():scope._updateApp()},scope.closeApp=function(){scope._closeApp()},scope._prepareAppData=function(record){scope._assignRoleToApp();var _app=angular.copy(record);switch(parseInt(_app.record.type)){case 0:delete _app.record.storage_service_id,delete _app.record.storage_container,delete _app.record.path,delete _app.record.url;break;case 1:delete _app.record.url;break;case 2:delete _app.record.storage_service_id,delete _app.record.storage_container,delete _app.record.path;break;case 3:delete _app.record.storage_service_id,delete _app.record.storage_container,delete _app.record.url}return _app.record},scope._saveAppToServer=function(requestDataObj){return dfApplicationData.saveApiData("app",requestDataObj).$promise},scope._updateAppToServer=function(requestDataObj){return dfApplicationData.updateApiData("app",requestDataObj).$promise},scope._assignRoleToApp=function(){scope.app.record.role_id=null,angular.forEach(scope.roles,function(role){scope.selectedRoleId&&role.id===scope.selectedRoleId&&(scope.app.record.role_id=role.id)})},scope._resetAppDetails=function(){scope.newApp?scope.app=new App:scope.appData=null,scope.selectedRoleId=null},scope._saveApp=function(){var requestDataObj={params:{fields:"*",related:"role_by_role_id"},data:scope._prepareAppData(scope.app)};scope._saveAppToServer(requestDataObj).then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:scope.app.record.name+" saved successfully."};dfNotify.success(messageOptions),scope._resetAppDetails()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._updateApp=function(){var requestDataObj={params:{fields:"*",related:"role_by_role_id"},data:scope._prepareAppData(scope.app)};scope._updateAppToServer(requestDataObj).then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:scope.app.record.name+" updated successfully."};dfNotify.success(messageOptions),scope.app=new App(result.resource),dfApplicationPrefs.getPrefs().sections.app.autoClose&&scope._resetAppDetails()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._closeApp=function(){return dfObjectService.compareObjectsAsJson(scope.app.record,scope.app.recordCopy)||dfNotify.confirmNoSave()?void scope._resetAppDetails():!1},scope.changeStorageService=function(){scope.app&&scope.app.record&&scope.storageServices&&(scope.selectedStorageService=scope.storageServices.filter(function(item){return item.id==scope.app.record.storage_service_id})[0])};var watchAppStorageService=scope.$watch("app.record.storage_service_id",function(newValue,oldValue){if(scope.changeStorageService(),!newValue)return!1;var i=0;for(scope.storageContainers=[];i<scope.storageServices.length;)scope.storageServices[i].id===newValue&&dfApplicationData.getServiceComponents(scope.storageServices[i].name).then(function(result){angular.forEach(result,function(component){""!==component&&"*"!==component&&scope.storageContainers.push(component)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}),i++}),watchAppData=scope.$watch("appData",function(newValue,oldValue){return newValue?(scope.app=new App(newValue),void angular.forEach(scope.roles,function(roleObj){roleObj.id===scope.app.record.role_id&&(scope.selectedRoleId=roleObj.id)})):!1});scope.$on("$destroy",function(e){watchAppStorageService(),watchAppData()}),$rootScope.$on("role",function(){scope.roles=dfApplicationData.getApiData("role")}),$rootScope.$on("service",function(){scope.storageServices=dfApplicationData.getApiData("service",{type:"local_file,aws_s3,azure_blob,rackspace_cloud_files,openstack_object_storage"})}),scope.dfHelp={applicationName:{title:"Application API Key",text:"This API KEY is unique per application and must be included with each API request as a query param (api_key=yourapikey) or a header (X-DreamFactory-API-Key: yourapikey)."},name:{title:"Display Name",text:"The display name or label for your app, seen by users of the app in the LaunchPad UI."},description:{title:"Description",text:"The app description, seen by users of the app in the LaunchPad UI."},appLocation:{title:"App Location",text:"Select File Storage if you want to store your app code on your DreamFactory instance or some other remote file storage. Select Native for native apps or running the app from code on your local machine (CORS required). Select URL to specify a URL for your app."},storageService:{title:"Storage Service",text:"Where to store the files for your app."},storageContainer:{title:"Storage Folder",text:"The folder on the selected storage service."},defaultPath:{title:"Default Path",text:"The is the file to load when your app is run. Default is index.html."},remoteUrl:{title:"Remote Url",text:"Applications can consist of only a URL. This could be an app on some other server or a web site URL."},assignRole:{title:"Assign a Default Role",text:"Unauthenticated or guest users of the app will have this role."}}}}}]).directive("dfManageApps",["$rootScope","MOD_APPS_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfReplaceParams","dfNotify","$window",function($rootScope,MOD_APPS_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfReplaceParams,dfNotify,$window){return{restrict:"E",scope:!1,templateUrl:MOD_APPS_ASSET_PATH+"views/df-manage-apps.html",link:function(scope,elem,attrs){var ManagedApp=function(appData){return{__dfUI:{selected:!1},record:appData}};scope.currentViewMode=dfApplicationPrefs.getPrefs().sections.app.manageViewMode,scope.apps=null,scope.currentEditApp=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"name",label:"Name",active:!0},{name:"api_key",label:"API Key",active:!0},{name:"description",label:"Description",active:!0},{name:"is_active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedApps=[],scope.removeFilesOnDelete=!1,scope.launchApp=function(app){scope._launchApp(app)},scope.editApp=function(app){scope._editApp(app)},scope.exportApp=function(app){scope._exportApp(app)},scope.deleteApp=function(app){dfNotify.confirm("Delete "+app.record.name+"?")&&(app.record["native"]||null==app.record.storage_service_id||(scope.removeFilesOnDelete=dfNotify.confirm("Delete application files? Pressing cancel will retain the files in storage.")),scope._deleteApp(app))},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(app){scope._setSelected(app)},scope.deleteSelectedApps=function(){dfNotify.confirm("Delete selected apps?")&&(scope.removeFilesOnDelete=dfNotify.confirm("Delete application files?"),scope._deleteSelectedApps())},scope._deleteFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("app",requestDataObj).$promise},scope._launchApp=function(app){$window.open(dfReplaceParams(app.record.launch_url,app.record.name))},scope._editApp=function(app){scope.currentEditApp=app},scope._exportApp=function(app){},scope._deleteApp=function(app){var requestDataObj={params:{delete_storage:scope.removeFilesOnDelete,related:"role_by_role_id",fields:"*"},data:app.record};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:"App successfully deleted."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.success(messageOptions)})["finally"](function(){})},scope._orderOnSelect=function(fieldObj){var orderedBy=scope.order.orderBy;orderedBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(app){for(var i=0;i<scope.selectedApps.length;){if(app.record.id===scope.selectedApps[i])return app.__dfUI.selected=!1,void scope.selectedApps.splice(i,1);i++}app.__dfUI.selected=!0,scope.selectedApps.push(app.record.id)},scope._deleteSelectedApps=function(){var requestDataObj={params:{ids:scope.selectedApps.join(","),fields:"*",rollback:!0,delete_storage:scope.removeFilesOnDelete}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:"Apps deleted successfully."};dfNotify.success(messageOptions),scope.selectedApps=[],scope.$broadcast("toolbar:paginate:app:reset")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})};var watchApps=scope.$watchCollection("apps",function(newValue,oldValue){if(null==newValue){var _app=[];return angular.forEach(dfApplicationData.getApiData("app"),function(app){!app.hasOwnProperty("roles")&&app.hasOwnProperty("import_url")&&null!=app.import_url&&(app.roles=[]),
_app.push(new ManagedApp(app))}),void(scope.apps=_app)}null!==newValue&&null!==oldValue&&0===newValue.length&&0===oldValue.length&&(scope.emptySectionOptions.active=!0)}),watchApiData=scope.$watchCollection(function(){return dfApplicationData.getApiData("app")},function(newValue,oldValue){var _app=[];angular.forEach(dfApplicationData.getApiData("app"),function(app){_app.push(new ManagedApp(app))}),scope.apps=_app});scope.$on("toolbar:paginate:app:update",function(e){var _apps=[];angular.forEach(dfApplicationData.getApiData("app"),function(app){for(var _app=new ManagedApp(app),i=0;i<scope.selectedApps.length;){if(scope.selectedApps[i]===_app.record.id){_app.__dfUI.selected=!0;break}i++}_apps.push(_app)}),scope.apps=_apps}),scope.$on("$destroy",function(e){watchApps(),watchApiData()}),scope.$watch("$viewContentLoaded",function(event){$rootScope.isRouteLoading=!1})}}}]).directive("dfAppLoading",["$rootScope",function($rootScope){return{restrict:"E",template:"<div class='col-lg-12' ng-if='isRouteLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfImportApp",["MOD_APPS_ASSET_PATH","$http","dfApplicationData","dfNotify",function(MOD_APPS_ASSET_PATH,$http,dfApplicationData,dfNotify){return{restrict:"E",scope:{},templateUrl:MOD_APPS_ASSET_PATH+"views/df-import-app.html",link:function(scope,elem,attrs){scope.services=dfApplicationData.getApiData("service",{type:"local_file,aws_s3,azure_blob"}),scope.containers=[],scope.appPath=null,scope.storageService="",scope.storageContainer="",scope.field=angular.element("#upload"),scope.uploadFile=null,scope.sampleApps=[{name:"Address Book for Android",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/android-sdk/master/package/add_android.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/android-sdk"},{name:"Address Book for iOS Objective-C",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/ios-sdk/master/example-ios/package/add_ios.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/ios-sdk"},{name:"Address Book for iOS Swift",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/ios-swift-sdk/master/SampleAppSwift/package/add_ios_swift.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/ios-swift-sdk"},{name:"Address Book for JavaScript",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/javascript-sdk/master/add_javascript.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/javascript-sdk"},{name:"Address Book for AngularJS",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/angular-sdk/master/add_angular.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/angular-sdk"},{name:"Address Book for Angular 2",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/angular2-sdk/master/add_angular2.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/angular2-sdk"},{name:"Address Book for Ionic",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/ionic-sdk/master/package/add_ionic.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/ionic-sdk"},{name:"Address Book for Titanium",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/titanium-sdk/master/add_titanium.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/titanium-sdk"},{name:"Address Book for ReactJS",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/reactjs-sdk/master/add_reactjs.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/reactjs-sdk"},{name:"Address Book for .NET",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/.net-sdk/master/DreamFactory.AddressBook/App_Package/add_dotnet.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/.net-sdk"}],scope.submitApp=function(){return scope.appPath?void scope._submitApp():!1},scope.browseFileSystem=function(){scope._resetImportApp(),scope.field.trigger("click")},scope.loadSampleApp=function(appObj){scope._loadSampleApp(appObj)},scope._isAppPathUrl=function(appPathStr){return"http://"===appPathStr.substr(0,7)||"https://"===appPathStr.substr(0,8)},scope._importAppToServer=function(requestDataObj){var _options={params:{},data:requestDataObj,dontWrapData:!0};return scope._isAppPathUrl(scope.appPath)?_options.headers={"Content-Type":"application/json"}:(_options.headers={"Content-Type":void 0},$http.defaults.transformRequest=angular.identity),dfApplicationData.saveApiData("app",_options).$promise},scope._isDFPackage=function(appPathStr){return".dfpkg"===appPathStr.substr(appPathStr.lastIndexOf("."))},scope._resetImportApp=function(){scope.appPath=null,scope.storageService="",scope.storageContainer="",scope.uploadFile=null,scope.field.val("")},scope._loadSampleApp=function(appObj){scope.appPath=appObj.package_url},scope._submitApp=function(){var requestDataObj={};if(scope._isAppPathUrl(scope.appPath))requestDataObj={import_url:scope.appPath,storage_service_id:scope.storageService.id,storage_container:scope.storageContainer};else{var fd=new FormData,storageId=scope.storageService&&void 0!==scope.storageService.id?scope.storageService.id:0,storageContainer=scope.storageContainer;fd.append("file",scope.uploadFile),fd.append("storage_service_id",storageId),fd.append("storage_container",storageContainer),requestDataObj=fd}scope._importAppToServer(requestDataObj).then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:"App successfully imported."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(success){scope._resetImportApp(),$http.defaults.transformRequest=function(d,headers){return angular.isObject(d)?angular.toJson(d):void 0}})};var watchStorageService=scope.$watch("storageService",function(newValue,oldValue){return newValue?void dfApplicationData.getServiceComponents(newValue.name).then(function(components){scope.containers=[],angular.forEach(components,function(v,i){"*"!==v&&""!==v&&scope.containers.push(v)})}):!1});scope.$watch("uploadFile",function(n,o){n&&(scope.appPath=n.name)});scope.$on("$destroy",function(e){watchStorageService()}),scope.dfHelp={applicationName:{title:"Application Name",text:"This is some help text that will be displayed in the help window"}}}}}]),angular.module("dfData",["ngRoute","dfUtility","dfTable"]).constant("MOD_DATA_ROUTER_PATH","/data").constant("MOD_DATA_ASSET_PATH","admin_components/adf-data/").config(["$routeProvider","MOD_DATA_ROUTER_PATH","MOD_DATA_ASSET_PATH",function($routeProvider,MOD_DATA_ROUTER_PATH,MOD_DATA_ASSET_PATH){$routeProvider.when(MOD_DATA_ROUTER_PATH,{templateUrl:MOD_DATA_ASSET_PATH+"views/main.html",controller:"DataCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("DataCtrl",["$scope","INSTANCE_URL","dfApplicationData",function($scope,INSTANCE_URL,dfApplicationData){$scope.$parent.title="Data",dfApplicationData.loadApi(["service"]),$scope.links=[{name:"manage-data",label:"Manage",path:"manage-data"}],$scope.__services__=[],$scope.selected={service:null,resource:null},$scope.options={service:$scope.selected.service,table:$scope.selected.resource,url:INSTANCE_URL+"/api/v2/"+$scope.selected.service+"/_table/"+$scope.selected.resource,allowChildTable:!0,childTableAttachPoint:"#child-table-attach"},$scope.init=function(){angular.forEach(dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db"}),function(serviceData){$scope.__services__.push(serviceData)})},$scope.$watchCollection("selected",function(newValue,oldValue){var options={service:newValue.service,table:newValue.resource,url:INSTANCE_URL+"/api/v2/"+newValue.service+"/_table/"+newValue.resource,allowChildTable:!0,childTableAttachPoint:"#child-table-attach"};$scope.options=options}),$scope.$watchCollection(function(){return dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db"})},function(newValue,oldValue){newValue&&0===$scope.__services__.length&&$scope.init()})}]),angular.module("dfServices",["ngRoute","dfUtility","dfServiceTemplates","dfSwaggerEditor","swagger-editor"]).constant("MOD_SERVICES_ROUTER_PATH","/services").constant("MOD_SERVICES_ASSET_PATH","admin_components/adf-services/").config(["$routeProvider","MOD_SERVICES_ROUTER_PATH","MOD_SERVICES_ASSET_PATH",function($routeProvider,MOD_SERVICES_ROUTER_PATH,MOD_SERVICES_ASSET_PATH){$routeProvider.when(MOD_SERVICES_ROUTER_PATH,{templateUrl:MOD_SERVICES_ASSET_PATH+"views/main.html",controller:"ServicesCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).service("dfServiceData",["$http","$q","INSTANCE_URL",function($http,$q,INSTANCE_URL){var dfServiceData={};return dfServiceData.getServiceTypes=function(){var deferred=$q.defer();return dfServiceData.serviceTypes&&dfServiceData.serviceTypes.length?deferred.resolve(dfServiceData.serviceTypes):$http({method:"GET",url:INSTANCE_URL+"/api/v2/system/service_type"}).success(function(data){dfServiceData.serviceTypes=data.resource,deferred.resolve(dfServiceData.serviceTypes)}),deferred.promise},dfServiceData}]).controller("ServicesCtrl",["$scope","dfApplicationData",function($scope,dfApplicationData){$scope.$parent.title="Services",dfApplicationData.loadApi(["service"]),$scope.links=[{name:"manage-services",label:"Manage",path:"manage-services"},{name:"create-service",label:"Create",path:"create-service"}],$scope.emptySectionOptions={title:"You have no Services!",text:'Click the button below to get started building your first Service.  You can always create new services by clicking the "Create" tab located in the section menu to the left.',buttonText:"Create A Service!",viewLink:$scope.links[1]}}]).directive("dfServiceDetails",["MOD_SERVICES_ASSET_PATH","$q","dfApplicationData","dfNotify","dfObjectService","dfApplicationPrefs","dfServiceValues","$http","INSTANCE_URL",function(MOD_SERVICES_ASSET_PATH,$q,dfApplicationData,dfNotify,dfObjectService,dfApplicationPrefs,dfServiceValues,$http,INSTANCE_URL){return{restrict:"E",scope:{serviceData:"=?",newService:"=?"},templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-details.html",link:function(scope,elem,attrs){var Service=function(serviceData){var newService={id:null,name:"",label:"",description:"",is_active:!0,type:"",mutable:!0,deletable:!0,config:{},doc:{content:{paths:{},definitions:{}},format:0}};return serviceData=serviceData||newService,serviceData&&serviceData.config&&Object.keys(serviceData.config).forEach(function(key){if(serviceData.config[key]&&serviceData.config[key].constructor===Object){var arr=[];Object.keys(serviceData.config[key]).forEach(function(objKey){arr.push({key:objKey,value:serviceData.config[key][objKey]})}),serviceData.config[key]=arr}}),{__dfUI:{selected:!1},record:angular.copy(serviceData),recordCopy:angular.copy(serviceData)}};scope.service=null,scope.newService&&(scope.service=new Service),scope.saveService=function(){scope.newService?scope._saveService():scope._updateService()},scope.deleteService=function(){scope._deleteService()},scope.closeService=function(){scope._closeService()},scope.testSetting=function(){scope._testSetting()},scope._saveServiceToServer=function(requestDataObj){return dfApplicationData.saveApiData("service",requestDataObj).$promise},scope._updateServiceToServer=function(requestDataObj){return dfApplicationData.updateApiData("service",requestDataObj).$promise},scope._deleteServiceFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("service",requestDataObj).$promise},scope._prepareServiceData=function(){scope._prepareServiceInfoData(),scope._prepareServiceConfigData(),scope._prepareServiceDefinitionData()},scope._trimRequestDataObj=function(requestObj){return requestObj.data.hasOwnProperty.call(config,"options_ctrl")&&delete requestObj.data.config.options_ctrl,requestObj},scope._restoreRequestDataObj=function(requestObj){return requestObj.resource&&(requestObj=requestObj.resource),requestObj.hasOwnProperty.call(config,"options")?(requestObj.config.options&&requestObj.config.options.hasOwnProperty("ssl")?requestObj.config.options_ctrl=!0:requestObj.config.options_ctrl=!1,scope._storageType=requestObj.config,requestObj):requestObj},scope._resetServiceDetails=function(){scope.newService?scope.service=new Service:scope.serviceData=null,angular.element("#info-tab").trigger("click")};var normalizeKeyValuePairs=function(){var data=angular.copy(scope.service.record),convert=function(item){var arr=data.config[item.name];data.config[item.name]={},arr.forEach(function(arrItem){data.config[item.name][arrItem.key]=arrItem.value})};return scope.selectedSchema.hasOwnProperty("config_schema")&&null!==scope.selectedSchema.config_schema&&scope.selectedSchema.config_schema.forEach(function(item){item.type.indexOf("object")>-1&&data.config[item.name]&&data.config[item.name].length&&convert(item)}),data};scope._saveService=function(){var error=!1;if(scope.serviceInfo.record.config.hasOwnProperty("content")||"nodejs"!==scope.serviceInfo.record.type&&"php"!==scope.serviceInfo.record.type&&"python"!==scope.serviceInfo.record.type&&"v8js"!==scope.serviceInfo.record.type||(error=!0),scope.serviceInfo.record.config.hasOwnProperty("content")&&(scope.serviceInfo.record.config.content.length||(error=!0)),error){var messageOptions={module:"Service Save Error",type:"error",provider:"dreamfactory",message:"Content is required and can't be empty"};return void dfNotify.error(messageOptions)}scope._prepareServiceData();var data=normalizeKeyValuePairs(),requestDataObj={params:{fields:"*"},data:data};requestDataObj=scope._trimRequestDataObj(requestDataObj),scope._saveServiceToServer(requestDataObj).then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service saved successfully."};scope.service=new Service(result),dfNotify.success(messageOptions),scope._resetServiceDetails()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._updateService=function(){scope._prepareServiceData();var data=normalizeKeyValuePairs(),requestDataObj={params:{fields:"*"},data:data};requestDataObj=scope._trimRequestDataObj(requestDataObj),scope._updateServiceToServer(requestDataObj).then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service updated successfully"};result=scope._restoreRequestDataObj(result),dfNotify.success(messageOptions),scope.service=new Service(result)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){}),dfApplicationPrefs.getPrefs().sections.service.autoClose&&scope._resetServiceDetails()},scope._deleteService=function(){var requestDataObj={params:{},data:scope.service.record};scope._deleteServiceFromServer(requestDataObj).then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service successfully deleted."};dfNotify.success(messageOptions),scope.service=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._closeService=function(){return scope._prepareServiceData(),dfObjectService.compareObjectsAsJson(scope.service.record,scope.service.recordCopy)||dfNotify.confirmNoSave()?void scope._resetServiceDetails():!1},scope._testSetting=function(){$http.get(INSTANCE_URL+"/api/v2/"+scope.service.record.name).then(function(response){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Test was successful!"};dfNotify.success(messageOptions)},function(response){var messageOptions={module:"Services",type:"Api Error",provider:"dreamfactory",message:response.data.error.message};dfNotify.error(messageOptions)})},scope.refreshEditor=function(){scope.currentEditor.renderer.updateText();var aceElement=$('div[id^="ide"]'),editor=ace.edit(aceElement[0].id);editor.resize(!0),editor.focus()};var watchData=scope.$watch("serviceData",function(newValue,oldValue){return newValue?scope.newService?!1:void(scope.service=new Service(newValue)):!1});scope.$on("$destroy",function(e){watchData()}),scope.dfHelp={createService:{title:"Create Service Information",text:"Create Service information help text"}},scope.dfLargeHelp={basic:{title:"Services Overview",text:"Services are where you set up REST API connections to databases, file storage, email, remote web services, and more."},config:{title:"Config Overview",text:"Specify any service-specific configuration below."},serviceDef:{title:"Service Definition Overview",text:'For Remote Services and Scripts, you can specify a definition of the service below. Refer to the <a target="_blank" href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md" title="Link to Swagger">OpenAPI docs</a> for details, or build and export your own from <a target="_blank" href="http://editor.swagger.io/#/" title="Link to Swagger Editor">here</a>.'}}}}}]).directive("dfServiceInfo",["MOD_SERVICES_ASSET_PATH","dfServiceValues","dfServiceData","dfApplicationData","dfObjectService","dfStorageTypeFactory","$compile","$templateCache","$rootScope",function(MOD_SERVICES_ASSET_PATH,dfServiceValues,dfServiceData,dfApplicationData,dfObjectService,dfStorageTypeFactory,$compile,$templateCache,$rootScope){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-info.html",link:function(scope,elem,attrs){var ServiceInfo=function(serviceInfoData){var _new={name:null,label:null,description:null,is_active:!0,type:"",mutable:!0,deletable:!0,config:{}},data=angular.copy(serviceInfoData)||_new;return{__dfUI:{},record:data,recordCopy:angular.copy(data)}};scope._sortArray=function(groupsArray,orderArray){var result=[];if(orderArray.forEach(function(group){-1!==groupsArray.indexOf(group)&&result.push(group)}),groupsArray.length>orderArray.length){var unsortedGroups=groupsArray.filter(function(i){return result.indexOf(i)<0});result.push.apply(result,unsortedGroups)}return result};dfApplicationData.getApplicationObj().apis||[];scope.customConfig=[],scope.serviceGroups=[],scope.hcv=new dfServiceValues,dfServiceData.getServiceTypes().then(function(serviceTypes){if(scope.hcv.serviceTypes=serviceTypes,scope.newService&&(scope.hcv.serviceTypes=scope.hcv.serviceTypes.filter(function(el){return!el.singleton})),scope.serviceInfo.record){scope.selectedSchema=scope.hcv.serviceTypes.filter(function(item){return item.name===scope.serviceInfo.record.type})[0];var groups=scope.hcv.serviceTypes.map(function(obj){return obj.group});scope.serviceGroups=groups.filter(function(v,i){return groups.indexOf(v)==i});var sortingArray=["Database","File","Email","Notification","Remote Service","Script","OAuth","LDAP"];scope.serviceGroups=scope._sortArray(scope.serviceGroups,sortingArray)}}),scope._script={},scope.serviceInfo={},scope._storageType={},scope.sql_server_host_identifier=null,scope.sql_server_db_identifier=null,scope._buildFieldSet=function(fieldSetArray,append){var addFields=null;append?(addFields=angular.element("#additionalFields"),addFields.length?addFields.html(""):(elem.append('<div id="additionalFields"></div>'),addFields=angular.element("#additionalFields"))):elem.html(""),fieldSetArray&&angular.forEach(fieldSetArray,function(fieldName){append?addFields.append($compile($templateCache.get("_service-"+fieldName+".html"))(scope)):elem.append($compile($templateCache.get("_service-"+fieldName+".html"))(scope))})},scope._prepareServiceNoSQLData=function(){"mongodb"===scope.service.record.storage_type&&(scope.service.record.config.options_ctrl===!0?scope.service.record.config.options={ssl:!0}:scope.service.record.config.options={})},scope._prepareServiceInfoData=function(){scope.service.record=dfObjectService.mergeObjects(scope.serviceInfo.record,scope.service.record)},scope._prepareRWS=function(){return scope._storageType},scope._prepareEmailData=function(){return scope._storageType.user=scope.serviceInfo.record.config.user,scope._storageType.password=scope.serviceInfo.record.config.password,scope._storageType},scope._prepareRFS=function(){switch(scope.serviceInfo.record.storage_type){case"aws s3":break;case"azure blob":delete scope._storageType.PartitionKey;break;case"rackspace cloudfiles":case"openstack object storage":}return scope._storageType},scope._prepareSF=function(){return scope._storageType},scope._prepareNoSQL=function(){switch(scope.serviceInfo.record.storage_type){case"aws dynamodb":case"aws simpledb":case"azure tables":var temp=angular.copy(scope._storageType);return temp.hasOwnProperty("private_paths")&&delete temp.private_paths,temp;case"couchdb":case"mongodb":return scope._storageType}},scope._prepareSQLDB=function(){return{dsn:scope._storageType.dsn,user:scope._storageType.user,pwd:scope._storageType.pwd}},scope._prepareLFS=function(){return scope._storageType},scope._preparePS=function(){return scope._storageType},scope._dsnToFields=function(dsn){function nth_ocurrence(str,needle,nth){for(var i=0;i<str.length;i++)if(str.charAt(i)==needle&&!--nth)return i;return!1}if(dsn=dsn||scope._storageType.dsn)switch(scope._storageType.prefix=dsn.slice(0,dsn.indexOf(":")),scope._storageType.prefix){case"oci":scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="sid",scope._storageType.host=dsn.slice(dsn.lastIndexOf(scope.sql_server_host_identifier),nth_ocurrence(dsn,")",2)).split("=")[1],scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),nth_ocurrence(dsn,")",6)).split("=")[1];break;case"ibm":scope.sql_server_host_identifier="HOSTNAME",scope.sql_server_db_identifier="DATABASE",scope._storageType.host=dsn.slice(dsn.lastIndexOf(scope.sql_server_host_identifier),nth_ocurrence(dsn,";",3)).split("=")[1],scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),nth_ocurrence(dsn,";",2)).split("=")[1];break;case"sqlsrv":scope.sql_server_host_identifier="Server",scope.sql_server_db_identifier="Database";default:scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="dbname",scope._storageType.host=dsn.slice(dsn.lastIndexOf(scope.sql_server_host_identifier),dsn.indexOf(";")).split("=")[1],dsn.indexOf("port=")>dsn.indexOf(scope.sql_server_db_identifier)?scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),nth_ocurrence(dsn,";",2)).split("=")[1]:dsn.indexOf("port=")>dsn.indexOf(scope.sql_server_db_identifier)&&(scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),dsn.length).split("=")[1])}},scope.updateAffectedFields=function(fieldValue,field){if("driver"==field.name&&field.values){var foundValue=field.values.filter(function(item){return item.name===fieldValue})[0]||{};scope.serviceInfo.record.config.dsn=foundValue.dsn}},scope._updateDsn=function(){var string="";switch(scope._storageType.prefix){case"sqlsrv":scope.sql_server_host_identifier="Server",scope.sql_server_db_identifier="Database",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+=scope.sql_server_host_identifier+"="+scope._storageType.host+";",string+=scope.sql_server_db_identifier+"="+scope._storageType.dbname;break;case"oci":scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="sid",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+="dbname=(DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)("+scope.sql_server_host_identifier+"="+scope._storageType.host+")(PORT = 1521))) (CONNECT_DATA = ("+scope.sql_server_db_identifier+"="+scope._storageType.dbname+")))";break;case"ibm":scope.sql_server_host_identifier="HOSTNAME",scope.sql_server_db_identifier="DATABASE",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+="DRIVER={IBM DB2 ODBC DRIVER};"+scope.sql_server_db_identifier+"="+scope._storageType.dbname+";"+scope.sql_server_host_identifier+"="+scope._storageType.host+";PORT=50000;PROTOCOL=TCPIP;";break;default:scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="dbname",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+=scope.sql_server_host_identifier+"="+scope._storageType.host+";",string+=scope.sql_server_db_identifier+"="+scope._storageType.dbname}scope._storageType.dsn=string},scope._fieldsToDsn=function(){return scope._storageType.prefix+":"+scope.sql_server_host_identifier+"="+scope._storageType.host+";"+scope.sql_server_db_identifier+"="+scope._storageType.dbname},scope._renderAdditionalEmailFields=function(){switch(scope._storageType.transport_type){case"command":scope._buildFieldSet(["email-command"],!0);break;case"smtp":scope._buildFieldSet(["email-host","email-port","email-security","user-name","password"],!0)}},scope._renderAdditionalFields=function(storageType){var creds={};switch(storageType===scope.serviceInfo.recordCopy.storage_type&&(creds=scope.serviceInfo.record.config),storageType){case"aws dynamodb":case"aws simpledb":scope._storageType=new dfStorageTypeFactory("aws",creds),scope._buildFieldSet(["aws-access-key","aws-secret-key","aws-region"],!0);break;case"azure tables":scope._storageType=new dfStorageTypeFactory("azure",creds),scope._buildFieldSet(["azure-acct-name","azure-acct-key","azure-partition-key"],!0);break;case"couchdb":scope._storageType=new dfStorageTypeFactory("couchdb",creds),scope._buildFieldSet(["couch-dsn","couch-user-name","couch-password"],!0);break;case"mongodb":scope._storageType=new dfStorageTypeFactory("mongodb",creds),scope._buildFieldSet(["mongo-dsn","mongo-database","mongo-user-name","mongo-password","mongo-options-ssl"],!0);break;case"aws s3":scope._storageType=new dfStorageTypeFactory("aws",creds),scope._buildFieldSet(["aws-access-key","aws-secret-key","aws-region"],!0);break;case"azure blob":scope._storageType=new dfStorageTypeFactory("azure",creds),scope._buildFieldSet(["azure-acct-name","azure-acct-key"],!0);break;case"rackspace cloudfiles":scope._storageType=new dfStorageTypeFactory("rackspace",creds),scope._buildFieldSet(["rs-user-name","rs-api-key","rs-tenet-name","rs-region","rs-endpoint"],!0);break;case"openstack object storage":scope._storageType=new dfStorageTypeFactory("openstack",creds),scope._buildFieldSet(["os-user-name","os-password","os-tenet-name","os-region","os-endpoint"],!0);break;case"aws sns":scope._storageType=new dfStorageTypeFactory("aws",creds),scope._buildFieldSet(["aws-access-key","aws-secret-key","aws-region"],!0);break;default:scope._buildFieldSet(null,!0)}},scope._renderServiceFields=function(serviceType){},scope._renderRegionUrl=function(region,regions){var regionObj=regions.find(function(element,index,array){return element.value===region?element:void 0});this._storageType.url=regionObj.url};var watchEmailProvider=scope.$watch("_storageType.transport_type",function(newValue,oldValue){return newValue?void scope._renderAdditionalEmailFields():!1}),watchService=scope.$watch("service",function(newValue,oldValue){return newValue?(scope.serviceInfo=new ServiceInfo(newValue.record),scope.selectedSchema=scope.hcv.serviceTypes&&scope.hcv.serviceTypes.filter(function(item){return scope.serviceInfo&&scope.serviceInfo.record&&item.name===scope.serviceInfo.record.type})[0],scope.selectedSchema&&scope.decorateSchema(),scope._storageType=null,void scope._renderServiceFields(scope.serviceInfo.record.type)):!1});scope.$on("$destroy",function(e){watchService(),watchEmailProvider()}),scope.dfSimpleHelp={serviceType:{title:"Service Type ",text:"Select the type of service you're adding."},name:{title:"Name ",text:"Select a name for making API requests, such as 'db' in /api/v2/db."},label:{title:"Label ",text:"The display name or label for the service."},description:{title:"Description ",text:"Write a brief description of the API (optional)."},baseUrl:{title:"Base Url ",text:"Specify the base URL for the remote web service. For example, if you named the API 'mydb' and the base URL is http://api.myservice.com/v1/api/, then a REST call to /api/v2/mydb/mytable would tell DreamFactory to call http://api.myservice.com/v1/api/mydb/mytable."},userName:{title:"Username ",text:"Specify the username for the service you're connecting to."},password:{title:"Password ",text:"Specify the password for the service you're connecting to."},connectionString:{title:"Connection String ",text:"Specify the connection string for the database you're connecting to. "},sqlVendor:{title:"SQL Vendor ",text:"Specify the type of database you're connecting to."},sqlHost:{title:"SQL Host ",text:"Specify the database host for the database you're connecting to."},sqlDatabaseName:{title:"SQL Database Name ",text:"Specify the name of the database you're connecting to."},sfSecurityToken:{title:"SalesForce Security Token ",text:"Specify the security token for the Salesforce Org you're connecting to."},sfApiVersion:{title:"SalesForce APi Version ",text:"Specify the version of the Salesforce API you're using"},noSqlType:{title:"NoSQL Service Type ",text:"Specify the type of database you're connecting to."},databaseName:{title:"Database Name",text:"Specify the name of the database you're connecting to."},awsAccessKey:{title:"AWS Access Key ",text:"Specify the AWS Access Key for the database you're connecting to."},awsSecretKey:{title:"AWS Secret Key ",text:"Specify the AWS Secret Key for the database you're connecting to."},awsRegion:{title:"AWS Region ",text:"Select the AWS Region for the database you're connecting to."},azureAcctName:{title:"Azure Account Name ",text:"Specify the Azure Account Name for the database you're connecting to."},azureAcctKey:{title:"Azure Account Key ",text:"Specify the Azure Account Key for the database you're connecting to."},azureDefaultPartitionKey:{title:"Azure Partition Key ",text:"Specify the Azure Default Partition Key for the database you're connecting to."},storageType:{title:"Storage Type ",text:"Specify the type of storage you're connecting to."},rsApiKey:{title:"RackSpace Api Key ",text:"Specify the API Key for the storage you're connecting to."},rsTenantName:{title:"RackSpace Tenant Name ",text:"Specify the Tenant Name for the storage you're connecting to."},rsTenantRegion:{title:"RackSpace Tenant Region ",text:"Specify the Region for the storage you're connecting to."},rsEndpoint:{title:"RackSpace Endpoint/URL ",text:"Specify the URL Endpoint for the storage you're connecting to."},osApiKey:{title:"OpenStack Api Key ",text:"Specify the API Key for the storage you're connecting to."},osTenantName:{title:"OpenStack Tenant Name ",text:"Specify the Tenant Name for the storage you're connecting to."
},osRegion:{title:"OpenStack Region ",text:"Specify the Region for the storage you're connecting to."},osEndpoint:{title:"OpenStack Endpoint/URL ",text:"Specify the URL Endpoint for the storage you're connecting to."},emailTransportType:{title:"Email Provider",text:"Specify the type of provider."},emailHost:{title:"Email Host ",text:"Specify the email host."},emailPort:{title:"Email Port ",text:"Specify the port number."},emailSecurity:{title:"Email Security ",text:"Specify the type of security (e.g. TLS)."},emailCommand:{title:"Email Command ",text:"Specify the command path for email."},pushServiceVendor:{title:"Push Notification Service Vendor",text:"Select a Push Notfication Service Provider"}}}}}]).directive("dfServiceConfig",["MOD_SERVICES_ASSET_PATH","dfServiceValues","dfServiceData","dfApplicationData","dfObjectService","dfStorageTypeFactory","$compile","$templateCache","$rootScope",function(MOD_SERVICES_ASSET_PATH,dfServiceValues,dfServiceData,dfApplicationData,dfObjectService,dfStorageTypeFactory,$compile,$templateCache,$rootScope){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-config.html",link:function(scope,elem,attrs){var ServiceConfig=function(serviceConfigData){var _new={config:{}},data=angular.copy(serviceConfigData)||_new;return{__dfUI:{},record:data,recordCopy:angular.copy(data)}},dfApplicationObjApis=dfApplicationData.getApplicationObj().apis||[];scope.allowedConfigFormats=".json,.js,.php,.py,.python,.yaml,.yml",scope.allowedConfigGitFormats=["json","js","php","py","python","yaml","yml"],scope.serviceTypeConfig="configmodal",scope.isArray=angular.isArray,scope.customConfig=[],scope.githubModalShowConfig=function(){$rootScope.$broadcast("githubShowModal","configmodal")},scope.addKeyValue=function(field){scope.serviceInfo.record.config[field]||(scope.serviceInfo.record.config[field]=[]),scope.serviceInfo.record.config[field].push({key:"new_key",value:"new_value"})},scope.deleteKeyValue=function(obj,$index){obj.splice($index,1)},scope.appendItemToArray=function(configObj,key){configObj[key]||(configObj[key]=[]);var schema=scope.selectedSchema.config_schema.filter(function(item){return item.name==key})[0]||{};schema.items instanceof Array?scope.serviceInfo.record.config[key].push({}):"string"===schema.items&&scope.serviceInfo.record.config[key].push("")},scope.deleteStringFromArray=function(arr,index){arr.splice(index,1)},scope.addObjectInArray=function(configObj,key,items){configObj[key]||(configObj[key]=[]);var newObj={};items.forEach(function(item){switch(item.type){case"text":case"string":newObj[item.name]="";break;case"boolean":newObj[item.name]=!1;break;case"verb_mask":newObj[item.name]=31}}),configObj[key].push(newObj)},scope.deleteObjectFromArray=function(arr,index){arr=arr.splice(index,1)},scope.decorateSchema=function(){var selectedType=scope.serviceInfo.record.type,customConfigs=scope.customConfig.filter(function(config){return config.applicableTo.some(function(item){return item===selectedType})});customConfigs.forEach(function(item){var obj=scope.selectedSchema.config_schema.filter(function(schema){return schema.name==item.name})[0]||{};angular.extend(obj,item)}),scope.selectedSchema.hasOwnProperty("config_schema")&&null!==scope.selectedSchema.config_schema&&scope.selectedSchema.config_schema.forEach(function(schema){schema["default"]?scope.serviceInfo.record.config[schema.name]=scope.serviceInfo.record.config[schema.name]||schema["default"]:"content"===schema.name&&"Custom"===scope.selectedSchema.group&&(scope.serviceInfo.record.config.content=scope.serviceInfo.record.config.content||"")})},scope.getReferences=function(key,valueField){return dfApplicationObjApis[key].record.map(function(item){return{name:item.name,value:item[valueField]||item.id}})},scope.changeServiceType=function(){(scope.serviceInfo||scope.serviceInfo.record)&&(scope.serviceInfo.record.config={},scope.selectedSchema=scope.hcv.serviceTypes.filter(function(item){return item.name===scope.serviceInfo.record.type})[0],scope.selectedSchema&&scope.decorateSchema(),scope._changeDefinitionView())},scope.hcv=new dfServiceValues,dfServiceData.getServiceTypes().then(function(serviceTypes){scope.hcv.serviceTypes=serviceTypes,scope.handleFiles=function(files){if(files){var file=files&&files[0];if(file){var reader=new FileReader;reader.readAsText(file,"UTF-8"),reader.onload=function(evt){scope.serviceInfo.record.config.content=evt.target.result,scope.$apply()},reader.onerror=function(evt){console.log("error")}}}},scope.newService&&(scope.hcv.serviceTypes=scope.hcv.serviceTypes.filter(function(el){return!el.singleton})),scope.serviceInfo.record&&(scope.selectedSchema=scope.hcv.serviceTypes.filter(function(item){return item.name===scope.serviceInfo.record.type})[0])}),scope._script={},scope.serviceInfo={},scope._storageType={},scope.sql_server_host_identifier=null,scope.sql_server_db_identifier=null,scope._buildFieldSet=function(fieldSetArray,append){var addFields=null;append?(addFields=angular.element("#additionalFields"),addFields.length?addFields.html(""):(elem.append('<div id="additionalFields"></div>'),addFields=angular.element("#additionalFields"))):elem.html(""),fieldSetArray&&angular.forEach(fieldSetArray,function(fieldName){append?addFields.append($compile($templateCache.get("_service-"+fieldName+".html"))(scope)):elem.append($compile($templateCache.get("_service-"+fieldName+".html"))(scope))})},scope._prepareServiceNoSQLData=function(){"mongodb"===scope.service.record.storage_type&&(scope.service.record.config.options_ctrl===!0?scope.service.record.config.options={ssl:!0}:scope.service.record.config.options={})},scope._prepareServiceConfigData=function(){scope.service.record=dfObjectService.mergeObjects(scope.serviceInfo.record,scope.service.record)},scope._prepareRWS=function(){return scope._storageType},scope._prepareEmailData=function(){return scope._storageType.user=scope.serviceInfo.record.config.user,scope._storageType.password=scope.serviceInfo.record.config.password,scope._storageType},scope._prepareRFS=function(){switch(scope.serviceInfo.record.storage_type){case"aws s3":break;case"azure blob":delete scope._storageType.PartitionKey;break;case"rackspace cloudfiles":case"openstack object storage":}return scope._storageType},scope._prepareSF=function(){return scope._storageType},scope._prepareNoSQL=function(){switch(scope.serviceInfo.record.storage_type){case"aws dynamodb":case"aws simpledb":case"azure tables":var temp=angular.copy(scope._storageType);return temp.hasOwnProperty("private_paths")&&delete temp.private_paths,temp;case"couchdb":case"mongodb":return scope._storageType}},scope._prepareSQLDB=function(){return{dsn:scope._storageType.dsn,user:scope._storageType.user,pwd:scope._storageType.pwd}},scope._prepareLFS=function(){return scope._storageType},scope._preparePS=function(){return scope._storageType},scope._dsnToFields=function(dsn){function nth_ocurrence(str,needle,nth){for(var i=0;i<str.length;i++)if(str.charAt(i)==needle&&!--nth)return i;return!1}if(dsn=dsn||scope._storageType.dsn)switch(scope._storageType.prefix=dsn.slice(0,dsn.indexOf(":")),scope._storageType.prefix){case"oci":scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="sid",scope._storageType.host=dsn.slice(dsn.lastIndexOf(scope.sql_server_host_identifier),nth_ocurrence(dsn,")",2)).split("=")[1],scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),nth_ocurrence(dsn,")",6)).split("=")[1];break;case"ibm":scope.sql_server_host_identifier="HOSTNAME",scope.sql_server_db_identifier="DATABASE",scope._storageType.host=dsn.slice(dsn.lastIndexOf(scope.sql_server_host_identifier),nth_ocurrence(dsn,";",3)).split("=")[1],scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),nth_ocurrence(dsn,";",2)).split("=")[1];break;case"sqlsrv":scope.sql_server_host_identifier="Server",scope.sql_server_db_identifier="Database";default:scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="dbname",scope._storageType.host=dsn.slice(dsn.lastIndexOf(scope.sql_server_host_identifier),dsn.indexOf(";")).split("=")[1],dsn.indexOf("port=")>dsn.indexOf(scope.sql_server_db_identifier)?scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),nth_ocurrence(dsn,";",2)).split("=")[1]:dsn.indexOf("port=")>dsn.indexOf(scope.sql_server_db_identifier)&&(scope._storageType.dbname=dsn.slice(dsn.lastIndexOf(scope.sql_server_db_identifier),dsn.length).split("=")[1])}},scope._updateDsn=function(){var string="";switch(scope._storageType.prefix){case"sqlsrv":scope.sql_server_host_identifier="Server",scope.sql_server_db_identifier="Database",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+=scope.sql_server_host_identifier+"="+scope._storageType.host+";",string+=scope.sql_server_db_identifier+"="+scope._storageType.dbname;break;case"oci":scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="sid",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+="dbname=(DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)("+scope.sql_server_host_identifier+"="+scope._storageType.host+")(PORT = 1521))) (CONNECT_DATA = ("+scope.sql_server_db_identifier+"="+scope._storageType.dbname+")))";break;case"ibm":scope.sql_server_host_identifier="HOSTNAME",scope.sql_server_db_identifier="DATABASE",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+="DRIVER={IBM DB2 ODBC DRIVER};"+scope.sql_server_db_identifier+"="+scope._storageType.dbname+";"+scope.sql_server_host_identifier+"="+scope._storageType.host+";PORT=50000;PROTOCOL=TCPIP;";break;default:scope.sql_server_host_identifier="host",scope.sql_server_db_identifier="dbname",scope._storageType.prefix&&(string+=scope._storageType.prefix+":"),string+=scope.sql_server_host_identifier+"="+scope._storageType.host+";",string+=scope.sql_server_db_identifier+"="+scope._storageType.dbname}scope._storageType.dsn=string},scope._fieldsToDsn=function(){return scope._storageType.prefix+":"+scope.sql_server_host_identifier+"="+scope._storageType.host+";"+scope.sql_server_db_identifier+"="+scope._storageType.dbname},scope._renderAdditionalEmailFields=function(){switch(scope._storageType.transport_type){case"command":scope._buildFieldSet(["email-command"],!0);break;case"smtp":scope._buildFieldSet(["email-host","email-port","email-security","user-name","password"],!0)}},scope._renderAdditionalFields=function(storageType){var creds={};switch(storageType===scope.serviceInfo.recordCopy.storage_type&&(creds=scope.serviceInfo.record.config),storageType){case"aws dynamodb":case"aws simpledb":scope._storageType=new dfStorageTypeFactory("aws",creds),scope._buildFieldSet(["aws-access-key","aws-secret-key","aws-region"],!0);break;case"azure tables":scope._storageType=new dfStorageTypeFactory("azure",creds),scope._buildFieldSet(["azure-acct-name","azure-acct-key","azure-partition-key"],!0);break;case"couchdb":scope._storageType=new dfStorageTypeFactory("couchdb",creds),scope._buildFieldSet(["couch-dsn","couch-user-name","couch-password"],!0);break;case"mongodb":scope._storageType=new dfStorageTypeFactory("mongodb",creds),scope._buildFieldSet(["mongo-dsn","mongo-database","mongo-user-name","mongo-password","mongo-options-ssl"],!0);break;case"aws s3":scope._storageType=new dfStorageTypeFactory("aws",creds),scope._buildFieldSet(["aws-access-key","aws-secret-key","aws-region"],!0);break;case"azure blob":scope._storageType=new dfStorageTypeFactory("azure",creds),scope._buildFieldSet(["azure-acct-name","azure-acct-key"],!0);break;case"rackspace cloudfiles":scope._storageType=new dfStorageTypeFactory("rackspace",creds),scope._buildFieldSet(["rs-user-name","rs-api-key","rs-tenet-name","rs-region","rs-endpoint"],!0);break;case"openstack object storage":scope._storageType=new dfStorageTypeFactory("openstack",creds),scope._buildFieldSet(["os-user-name","os-password","os-tenet-name","os-region","os-endpoint"],!0);break;case"aws sns":scope._storageType=new dfStorageTypeFactory("aws",creds),scope._buildFieldSet(["aws-access-key","aws-secret-key","aws-region"],!0);break;default:scope._buildFieldSet(null,!0)}},scope._renderServiceFields=function(serviceType){},scope._renderRegionUrl=function(region,regions){var regionObj=regions.find(function(element,index,array){return element.value===region?element:void 0});this._storageType.url=regionObj.url};var watchEmailProvider=scope.$watch("_storageType.transport_type",function(newValue,oldValue){return newValue?void scope._renderAdditionalEmailFields():!1}),watchService=scope.$watch("service",function(newValue,oldValue){return newValue?(scope.serviceInfo=new ServiceConfig(newValue.record),scope.selectedSchema=scope.hcv.serviceTypes&&scope.hcv.serviceTypes.filter(function(item){return scope.serviceInfo&&scope.serviceInfo.record&&item.name===scope.serviceInfo.record.type})[0],scope.selectedSchema&&scope.decorateSchema(),scope._storageType=null,void scope._renderServiceFields(scope.serviceInfo.record.type)):!1}),watchSelectedSchema=scope.$watch("selectedSchema",function(newValue,oldValue){if(newValue)switch(newValue.name){case"nodejs":scope.allowedConfigFormats=".js",scope.allowedConfigGitFormats=["js"];break;case"php":scope.allowedConfigFormats=".php",scope.allowedConfigGitFormats=["php"];break;case"python":scope.allowedConfigFormats=".py,.python",scope.allowedConfigGitFormats=["py","python"];break;case"v8js":scope.allowedConfigFormats=".js",scope.allowedConfigGitFormats=["js"];break;default:scope.allowedConfigFormats=".json,.js,.php,.yaml,.yml",scope.allowedConfigGitFormats=["json","js","php","yaml","yml"]}});scope.$on("$destroy",function(e){watchService(),watchEmailProvider(),watchSelectedSchema()}),scope.dfSimpleHelp={serviceType:{title:"Service Type ",text:"Select the type of service you're adding."},name:{title:"Name ",text:"Select a name for making API requests, such as 'db' in /api/v2/db."},label:{title:"Label ",text:"The display name or label for the service."},description:{title:"Description ",text:"Write a brief description of the API (optional)."},baseUrl:{title:"Base Url ",text:"Specify the base URL for the remote web service. For example, if you named the API 'mydb' and the base URL is http://api.myservice.com/v1/api/, then a REST call to /api/v2/mydb/mytable would tell DreamFactory to call http://api.myservice.com/v1/api/mydb/mytable."},userName:{title:"Username ",text:"Specify the username for the service you're connecting to."},password:{title:"Password ",text:"Specify the password for the service you're connecting to."},connectionString:{title:"Connection String ",text:"Specify the connection string for the database you're connecting to. "},sqlVendor:{title:"SQL Vendor ",text:"Specify the type of database you're connecting to."},sqlHost:{title:"SQL Host ",text:"Specify the database host for the database you're connecting to."},sqlDatabaseName:{title:"SQL Database Name ",text:"Specify the name of the database you're connecting to."},sfSecurityToken:{title:"SalesForce Security Token ",text:"Specify the security token for the Salesforce Org you're connecting to."},sfApiVersion:{title:"SalesForce APi Version ",text:"Specify the version of the Salesforce API you're using"},noSqlType:{title:"NoSQL Service Type ",text:"Specify the type of database you're connecting to."},databaseName:{title:"Database Name",text:"Specify the name of the database you're connecting to."},awsAccessKey:{title:"AWS Access Key ",text:"Specify the AWS Access Key for the database you're connecting to."},awsSecretKey:{title:"AWS Secret Key ",text:"Specify the AWS Secret Key for the database you're connecting to."},awsRegion:{title:"AWS Region ",text:"Select the AWS Region for the database you're connecting to."},azureAcctName:{title:"Azure Account Name ",text:"Specify the Azure Account Name for the database you're connecting to."},azureAcctKey:{title:"Azure Account Key ",text:"Specify the Azure Account Key for the database you're connecting to."},azureDefaultPartitionKey:{title:"Azure Partition Key ",text:"Specify the Azure Default Partition Key for the database you're connecting to."},storageType:{title:"Storage Type ",text:"Specify the type of storage you're connecting to."},rsApiKey:{title:"RackSpace Api Key ",text:"Specify the API Key for the storage you're connecting to."},rsTenantName:{title:"RackSpace Tenant Name ",text:"Specify the Tenant Name for the storage you're connecting to."},rsTenantRegion:{title:"RackSpace Tenant Region ",text:"Specify the Region for the storage you're connecting to."},rsEndpoint:{title:"RackSpace Endpoint/URL ",text:"Specify the URL Endpoint for the storage you're connecting to."},osApiKey:{title:"OpenStack Api Key ",text:"Specify the API Key for the storage you're connecting to."},osTenantName:{title:"OpenStack Tenant Name ",text:"Specify the Tenant Name for the storage you're connecting to."},osRegion:{title:"OpenStack Region ",text:"Specify the Region for the storage you're connecting to."},osEndpoint:{title:"OpenStack Endpoint/URL ",text:"Specify the URL Endpoint for the storage you're connecting to."},emailTransportType:{title:"Email Provider",text:"Specify the type of provider."},emailHost:{title:"Email Host ",text:"Specify the email host."},emailPort:{title:"Email Port ",text:"Specify the port number."},emailSecurity:{title:"Email Security ",text:"Specify the type of security (e.g. TLS)."},emailCommand:{title:"Email Command ",text:"Specify the command path for email."},pushServiceVendor:{title:"Push Notification Service Vendor",text:"Select a Push Notfication Service Provider"}}}}}]).directive("dfManageServices",["MOD_SERVICES_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify",function(MOD_SERVICES_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-manage-services.html",link:function(scope,elem,attrs){var ManagedService=function(serviceData){return{__dfUI:{selected:!1},record:serviceData}};scope.currentViewMode=dfApplicationPrefs.getPrefs().sections.service.manageViewMode,scope.services=null,scope.currentEditService=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"name",label:"Name",active:!0},{name:"label",label:"Label",active:!0},{name:"description",label:"Description",active:!0},{name:"type",label:"Type",active:!0},{name:"is_active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedServices=[],scope.allSelected=!1,scope.toggleViewMode=function(mode){scope._toggleViewMode(mode)},scope.editService=function(service){scope._editService(service)},scope.deleteService=function(service){dfNotify.confirm("Delete "+service.record.label+"?")&&scope._deleteService(service)},scope.deleteSelectedServices=function(){dfNotify.confirm("Delete selected services?")&&scope._deleteSelectedServices()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(service){scope._setSelected(service)},scope._deleteFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("service",requestDataObj).$promise},scope._filterServices=function(dataArr){var filtered=["All","Schema","Local Portal Service"];return angular.forEach(dataArr,function(data,i){angular.forEach(filtered,function(value,index){data.name===value&&dataArr.splice(i,1)})}),dataArr},scope._editService=function(service){scope.currentEditService=service},scope._deleteService=function(service){var requestDataObj={params:{id:service.record.id}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service successfully deleted."};dfNotify.success(messageOptions),service.__dfUI.selected&&scope.setSelected(service),scope.$broadcast("toolbar:paginate:service:delete")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._orderOnSelect=function(fieldObj){var orderedBy=scope.order.orderBy;orderedBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(service){for(var i=0;i<scope.selectedServices.length;){if(service.record.id===scope.selectedServices[i])return service.__dfUI.selected=!1,void scope.selectedServices.splice(i,1);i++}service.__dfUI.selected=!0,scope.selectedServices.push(service.record.id)},scope._deleteSelectedServices=function(){var requestDataObj={params:{ids:scope.selectedServices.join(","),rollback:!0}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Services deleted successfully."};dfNotify.success(messageOptions),scope.selectedServices=[],scope.$broadcast("toolbar:paginate:service:reset")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})};var watchServices=scope.$watchCollection("services",function(newValue,oldValue){if(null==newValue){var _services=[];return angular.forEach(scope._filterServices(dfApplicationData.getApiData("service")),function(service){_services.push(new ManagedService(service))}),void(scope.services=_services)}});scope.$watchCollection(function(){return dfApplicationData.getApiData("service")},function(newValue,oldValue){var _services=[];angular.forEach(scope._filterServices(dfApplicationData.getApiData("service")),function(service){_services.push(new ManagedService(service))}),scope.services=_services});scope.$on("toolbar:paginate:service:update",function(e){var _services=[];angular.forEach(scope._filterServices(dfApplicationData.getApiData("service")),function(service){for(var _service=new ManagedService(service),i=0;i<scope.selectedServices.length;){if(scope.selectedServices[i]===_service.record.id){_service.__dfUI.selected=!0;break}i++}_services.push(_service)}),scope.services=_services}),scope.$on("$destroy",function(e){watchServices(),scope.$broadcast("toolbar:paginate:service:reset")})}}}]).directive("dfServiceDefinition",["MOD_SERVICES_ASSET_PATH","dfServiceValues","dfServiceData","$timeout","$rootScope",function(MOD_SERVICES_ASSET_PATH,dfServiceValues,dfServiceData,$timeout,$rootScope){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-definition.html",link:function(scope,elem,attrs){scope.isEditorClean=!0,scope.isEditable=!0,scope.currentEditor=null,scope.currentFile=null,scope.hideGutter=!0,scope.serviceDefinitionFormat=0,scope.allowedDefinitionFormats=["json","yml","yaml"],scope.serviceType="definition",scope._changeDefinitionView=function(){switch(scope.serviceInfo.record.type){case"rws":case"nodejs":case"php":case"python":case"v8js":scope.isEditable=!0;break;default:scope.isEditable=!0}},scope._prepareServiceDefinitionData=function(){scope.service.record.doc&&(scope.service.record.doc=scope.service.record.doc||{},scope.service.record.doc.content=scope.currentEditor.session.getValue(),scope.service.record.doc.format=parseInt(scope.serviceDefinitionFormat))},scope.changeDefinitionFormat=function(){var aceElement=$('div[id^="ide_"]');scope.editor=ace.edit(aceElement[0].id),0==scope.serviceDefinitionFormat?scope.editor.session.setMode("ace/mode/json"):1==scope.serviceDefinitionFormat&&scope.editor.session.setMode("ace/mode/yaml")},scope.handleDefinitionFiles=function(files){if(files){var file=files&&files[0];if(file){var reader=new FileReader;reader.readAsText(file,"UTF-8"),reader.onload=function(evt){scope.currentFile=evt.target.result,scope.$apply();var aceElement=$('div[id^="ide_"]');scope.editor=ace.edit(aceElement[0].id),-1!==files[0].name.indexOf("json")?(scope.editor.session.setMode("ace/mode/json"),scope.serviceDefinitionFormat=0):-1!==files[0].name.indexOf("yml")?(scope.editor.session.setMode("ace/mode/yaml"),scope.serviceDefinitionFormat=1):-1!==files[0].name.indexOf("yaml")?(scope.editor.session.setMode("ace/mode/yaml"),scope.serviceDefinitionFormat=1):(scope.editor.session.setMode("ace/mode/json"),scope.serviceDefinitionFormat=0),scope.$apply()},reader.onerror=function(evt){console.log("error")}}}},scope.$watch("service",function(newValue,oldValue){if(newValue)switch(newValue.record.hasOwnProperty("doc")&&newValue.record.doc&&newValue.record.doc.content?0===newValue.record.doc.format?(scope.currentFile=angular.fromJson(newValue.record.doc.content),scope.serviceDefinitionFormat=0):(scope.currentFile=newValue.record.doc.content,scope.serviceDefinitionFormat=1):scope.currentFile={paths:{},definitions:{}},newValue.record.type){case"rws":case"nodejs":case"php":case"python":case"v8js":scope.isEditable=!0;break;default:scope.isEditable=!0}}),scope.githubModalShowDef=function(serviceType){$rootScope.$broadcast("githubShowModal","definition")},$("#json-editor-tab").on("click",function(){scope.currentEditor.renderer.updateText(),scope.currentEditor.focus(),$(window).trigger("resize")}),$(window).on("resize",function(){var h=$(window).height();$('div[id^="ide_"]').css({height:h-400+"px"})});var listener=function(){$timeout(function(){if(scope.currentEditor.session.$annotations){var canDo=scope.currentEditor.session.$annotations.some(function(item){return"error"===item.type?!0:!1});canDo?$(".save-service-btn").addClass("disabled"):$(".save-service-btn").removeClass("disabled")}},500)};scope.$watch("currentEditor",function(newValue){newValue&&(scope.$watch(function(){return scope.currentEditor.session.$annotations},function(){listener()}),scope.currentEditor.on("input",function(){listener()}))})}}}]).factory("dfStorageTypeFactory",["dfObjectService",function(dfObjectService){return function(storageType,data){"[object String]"===Object.prototype.toString.call("data")&&(data=angular.fromJson(data)),(!data||!Object.keys(data).length>0)&&(data=null);var AWS=function(data){var _new={private_paths:[],access_key:null,secret_key:null,region:null};return data?dfObjectService.mergeObjects(data,_new):_new},Azure=function(data){var _new={private_paths:[],account_name:null,account_key:null,PartitionKey:null};return data?dfObjectService.mergeObjects(data,_new):_new},Rackspace=function(data){var _new={private_paths:[],url:null,api_key:null,username:null,tenant_name:null,region:null};return data?dfObjectService.mergeObjects(data,_new):_new},Openstack=function(data){var _new={private_paths:[],url:null,password:null,username:null,tenant_name:null,region:null};return data?dfObjectService.mergeObjects(data,_new):_new},MongoDB=function(data){var _new={dsn:null,user:null,pwd:null,db:null,options:{},options_ctrl:null};return data?(data.options.hasOwnProperty("ssl")?data.options_ctrl=!0:data.options_ctrl=!1,dfObjectService.mergeObjects(data,_new)):_new},CouchDB=function(data){var _new={dsn:null,user:null,pwd:null};return data?dfObjectService.mergeObjects(data,_new):_new},Salesforce=function(data){var _new={username:null,password:null,security_token:null,version:null};return data?dfObjectService.mergeObjects(data,_new):_new},Email=function(data){var _new={transport_type:"default",host:null,port:null,security:"SSL",command:null};return data?dfObjectService.mergeObjects(data,_new):_new},SQLServer=function(data){var _new={dsn:null,user:null,pwd:null};return data?dfObjectService.mergeObjects(data,_new):_new},LocalFileStorage=function(data){var _new={private_paths:[]};return data?dfObjectService.mergeObjects(data,_new):_new},LocalSQLDB=function(data){return[]},RemoteWebService=function(data){var _new={cache_config:{enabled:!1,ttl:null},client_exclusions:{parameters:[]}};return data?dfObjectService.mergeObjects(data,_new):_new};switch(storageType){case"aws":return new AWS(data);case"azure":return new Azure(data);case"rackspace":return new Rackspace(data);case"openstack":return new Openstack(data);case"mongodb":return new MongoDB(data);case"couchdb":return new CouchDB(data);case"salesforce":return new Salesforce(data);case"email":return new Email(data);case"sql":return new SQLServer(data);case"local file storage":return new LocalFileStorage(data);case"local sql db":return new LocalSQLDB(data);case"remote web service":return new RemoteWebService(data)}}}]).factory("dfServiceValues",["SystemConfigDataService",function(SystemConfigDataService){return function(){var microsoft_sql_server_prefix="sqlsrv";microsoft_sql_server_prefix="dblib";var values={emailOptions:[{name:"Server Default",value:"default"},{name:"Server Command",value:"command"},{name:"SMTP",value:"smtp"}],securityOptions:[{name:"SSL",value:"SSL"},{name:"TLS",value:"TLS"}],sqlVendors:[{name:"MySQL",prefix:"mysql"},{name:"Microsoft SQL Server",prefix:microsoft_sql_server_prefix},{name:"PostgreSQL",prefix:"pgsql"},{name:"Oracle",prefix:"oci"},{name:"IBM DB2",prefix:"ibm"}],NoSQLOptions:[{name:"Amazon DynamoDB",value:"aws dynamodb"},{name:"Amazon SimpleDB",value:"aws simpledb"},{name:"Windows Azure Tables",value:"azure tables"},{name:"CouchDB",value:"couchdb"},{name:"MongoDB",value:"mongodb"}],awsRegions:[{name:"US EAST (N Virgina)",value:"us-east-1"},{name:"US WEST (N California)",value:"us-west-1"},{name:"US WEST (Oregon)",value:"us-west-2"},{name:"EU WEST (Ireland)",value:"eu-west-1"},{name:"Asia Pacific (Singapore)",value:"ap-southeast-1"},{name:"Asia Pacific (Sydney)",value:"ap-southeast-2"},{name:"Asia Pacific (Tokyo)",value:"ap-northeast-1"},{name:"South America (Sao Paulo)",value:"sa-east-1"}],rackspaceRegions:[{name:"London",value:"LON",url:"https://lon.identity.api.rackspacecloud.com"},{name:"Chicago",value:"ORD",url:"https://identity.api.rackspacecloud.com"},{name:"Dallas / Fort Worth",value:"DFW",url:"https://identity.api.rackspacecloud.com"}],remoteOptions:[{name:"Amazon S3",value:"aws s3"},{name:"Windows Azure Storage",value:"azure blob"},{name:"RackSpace CloudFiles",value:"rackspace cloudfiles"},{name:"OpenStack Object Storage",value:"openstack object storage"}],pushOptions:[{name:"Amazon SNS",value:"aws sns"}]};return values}}]),angular.module("dfServiceTemplates",[]).run(["$templateCache",function($templateCache){$templateCache.put("_service-is-active.html",'<div class="form-group"><div class="checkbox"><label><input data-ng-model="serviceInfo.record.is_active" type="checkbox" /> Active</label></div></div>'),$templateCache.put("_service-type.html",'<div class="form-group"><label>Service Type</label><df-simple-help data-options="dfSimpleHelp.serviceType"></df-simple-help><select class="form-control" data-ng-disabled="!newService" data-ng-change="_renderServiceFields(serviceInfo.record.type)" data-ng-model="serviceInfo.record.type" data-ng-options="option.value as option.label for option in hcv.serviceTypes"></select></div>'),$templateCache.put("_service-api-name.html",'<div class="form-group"><label>API Name</label><df-simple-help data-options="dfSimpleHelp.apiName"></df-simple-help><input class="form-control" data-ng-disabled="!newService" data-ng-disabled="serviceInfo.record.deletable" data-ng-model="serviceInfo.record.api_name" type="text" required/></div>'),$templateCache.put("_service-name.html",'<div class="form-group"><label>Name</label><df-simple-help data-options="dfSimpleHelp.name"></df-simple-help><input class="form-control" data-ng-model="serviceInfo.record.name" type="text" required/></div>'),$templateCache.put("_service-description.html",'<div class="form-group"><label>Description</label><df-simple-help data-options="dfSimpleHelp.description"></df-simple-help><input class="form-control" data-ng-model="serviceInfo.record.description" type="text"/></div>'),$templateCache.put("_service-base-url.html",'<div class="form-group"><label>Base URL</label><df-simple-help data-ng-if="!_storageType.transport_type" data-options="dfSimpleHelp.baseUrl"></df-simple-help><input class="form-control" data-ng-model="serviceInfo.record.base_url" type="text"/></div>'),$templateCache.put("_service-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" id="serviceInfo-record-user" name="serviceInfo-record-user" data-ng-model="serviceInfo.record.config.user" type="text"/></div>'),
$templateCache.put("_service-password.html",'<div class="form-group"><label>Password</label><df-simple-help data-options="dfSimpleHelp.password"></df-simple-help><input class="form-control" id="serviceInfo-record-password" name="serviceInfo-record-password" data-ng-model="serviceInfo.record.config.password" type="password"/></div>'),$templateCache.put("_service-remote-web-service-cache.html",'<div class="row"><div class="col-xs-12"><hr /></div></div><h3>Caching</h3><div class="form-group"><div class="input-group"><span class="input-group-addon"><input data-ng-model="_storageType.cache_config.enabled" type="checkbox"/></span><input class="form-control" data-ng-model="_storageType.cache_config.ttl" type="text" placeholder="Enter cache time to live (seconds)" data-ng-disabled="!_storageType.cache_config.enabled"/></div></div>'),$templateCache.put("_service-email-transport-type.html",'<div class="form-group"><label>Provider</label><df-simple-help data-options="dfSimpleHelp.emailTransportType"></df-simple-help><select class="form-control" data-ng-model="_storageType.transport_type" data-ng-options="option.value as option.name for option in hcv.emailOptions"></select></div>'),$templateCache.put("_service-email-host.html",'<div class="form-group"><label>Host</label><df-simple-help data-options="dfSimpleHelp.emailHost"></df-simple-help><input class="form-control" data-ng-model="_storageType.host" type="text" placeholder="e.g. SMTP.gmail.com"/></div>'),$templateCache.put("_service-email-port.html",'<div class="form-group"><label>Port</label><df-simple-help data-options="dfSimpleHelp.emailPort"></df-simple-help><input class="form-control" data-ng-model="_storageType.port" type="text" placeholder="e.g. 465"/></div>'),$templateCache.put("_service-email-security.html",'<div class="form-group"><label>Security</label><df-simple-help data-options="dfSimpleHelp.emailSecurity"></df-simple-help><select class="form-control" data-ng-options="option.value as option.name for option in hcv.securityOptions" data-ng-model="_storageType.security"></select></div>'),$templateCache.put("_service-email-command.html",'<div class="form-group"><label>Command</label><df-simple-help data-options="dfSimpleHelp.emailCommand"></df-simple-help><input class="form-control" data-ng-value="" type="text" data-ng-model="_storageType.command" placeholder="e.g. /usr/sbin/sendmail -bs"/></div>'),$templateCache.put("_service-sql-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" data-ng-model="_storageType.user" type="text"/></div>'),$templateCache.put("_service-sql-password.html",'<div class="form-group"><label>Password</label><df-simple-help data-options="dfSimpleHelp.password"></df-simple-help><input class="form-control" data-ng-model="_storageType.pwd" type="password"/></div>'),$templateCache.put("_service-sql-vendor.html",'<div data-ng-hide="!newService" class="form-group"><label>SQL Vendor</label><df-simple-help data-options="dfSimpleHelp.sqlVendor"></df-simple-help><select class="form-control" data-ng-model="_storageType.prefix" data-ng-change="_updateDsn()"  data-ng-options="server.prefix as server.name for server in hcv.sqlVendors"><option value="">-- Select Vendor --</option></select></div>'),$templateCache.put("_service-sql-host.html",'<div data-ng-hide="!newService" class="form-group"><label>Host</label><df-simple-help data-options="dfSimpleHelp.sqlHost"></df-simple-help><input data-ng-disabled="!_storageType.prefix" class="form-control" data-ng-keyup="_updateDsn()" data-ng-model="_storageType.host"/></div>'),$templateCache.put("_service-sql-database-name.html",'<div data-ng-hide="!newService" class="form-group"><label>Database Name</label><df-simple-help data-options="dfSimpleHelp.sqlDatabaseName"></df-simple-help><input data-ng-disabled="!_storageType.host" class="form-control" data-ng-keyup="_updateDsn()" data-ng-model="_storageType.dbname"/></div>'),$templateCache.put("_service-sql-dsn.html",'<div class="form-group"><label>Connection String</label><df-simple-help data-options="dfSimpleHelp.connectionString"></df-simple-help><input class="form-control" data-ng-model="_storageType.dsn" type="text" placeholder="{{sql_placeholder}}"/></div>'),$templateCache.put("_service-sf-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" data-ng-model="_storageType.username" type="text"/></div>'),$templateCache.put("_service-sf-password.html",'<div class="form-group"><label>Password</label><df-simple-help data-options="dfSimpleHelp.password"></df-simple-help><input class="form-control" data-ng-model="_storageType.password" type="password"/></div>'),$templateCache.put("_service-sf-security-token.html",'<div class="form-group"><label>Security Token</label><df-simple-help data-options="dfSimpleHelp.sfSecurityToken"></df-simple-help><input class="form-control" data-ng-model="_storageType.security_token" type="text"/></div>'),$templateCache.put("_service-sf-api-version.html",'<div class="form-group"><label>API Version</label><df-simple-help data-options="dfSimpleHelp.sfApiVersion"></df-simple-help><input class="form-control" data-ng-model="_storageType.version" placeholder="v28.0" type="text"/></div>'),$templateCache.put("_service-nosql-type.html",'<div class="form-group"><label>NoSQL Vendor</label><df-simple-help data-options="dfSimpleHelp.noSqlType"></df-simple-help><select class="form-control" data-ng-change="_renderAdditionalFields(serviceInfo.record.storage_type)" data-ng-options="option.value as option.name for option in hcv.NoSQLOptions" data-ng-model="serviceInfo.record.storage_type" data-ng-required="true"><option value="">-- Select Vendor --</option></select></div>'),$templateCache.put("_service-aws-access-key.html",'<div class="form-group"><label>Access Key</label><df-simple-help data-options="dfSimpleHelp.awsAccessKey"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.access_key"/></div>'),$templateCache.put("_service-aws-secret-key.html",'<div class="form-group"><label>Secret Key</label><df-simple-help data-options="dfSimpleHelp.awsSecretKey"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.secret_key"/></div>'),$templateCache.put("_service-aws-region.html",'<div class="form-group"><label>Region</label><df-simple-help data-options="dfSimpleHelp.awsRegion"></df-simple-help><select class="form-control" data-ng-options="region.value as region.name for region in hcv.awsRegions" data-ng-model="_storageType.region"></select></div>'),$templateCache.put("_service-azure-acct-name.html",'<div class="form-group"><label>Account Name</label><df-simple-help data-options="dfSimpleHelp.azureAcctName"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.account_name"/></div>'),$templateCache.put("_service-azure-acct-key.html",'<div class="form-group"><label>Account Key</label><df-simple-help data-options="dfSimpleHelp.azureAcctKey"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.account_key"/></div>'),$templateCache.put("_service-azure-partition-key.html",'<div class="form-group"><label>Default Partition Key</label><df-simple-help data-options="dfSimpleHelp.azureDefaultPartitionKey"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.PartitionKey"/></div>'),$templateCache.put("_service-couch-dsn.html",'<div class="form-group"><label>Connection String</label><df-simple-help data-options="dfSimpleHelp.connectionString"></df-simple-help><input data-ng-model="_storageType.dsn" type="text" class="form-control"/></div>'),$templateCache.put("_service-couch-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" data-ng-model="_storageType.user" type="text"/></div>'),$templateCache.put("_service-couch-password.html",'<div class="form-group"><label>Password</label><df-simple-help data-options="dfSimpleHelp.password"></df-simple-help><input class="form-control" data-ng-model="_storageType.pwd" type="password"/></div>'),$templateCache.put("_service-mongo-dsn.html",'<div class="form-group"><label>Connection String</label><df-simple-help data-options="dfSimpleHelp.connectionString"></df-simple-help><input class="form-control" data-ng-model="_storageType.dsn" type="text"/></div>'),$templateCache.put("_service-mongo-database.html",'<div class="form-group"><label>Database Name</label><df-simple-help data-options="dfSimpleHelp.databaseName"></df-simple-help><input class="form-control" data-ng-model="_storageType.db" type="text"/></div>'),$templateCache.put("_service-mongo-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" data-ng-model="_storageType.user" type="text"/></div>'),$templateCache.put("_service-mongo-password.html",'<div class="form-group"><label>Password</label><df-simple-help data-options="dfSimpleHelp.password"></df-simple-help><input class="form-control" data-ng-model="_storageType.pwd" type="password"/></div>'),$templateCache.put("_service-mongo-options-ssl.html",'<div class="form-group"><div class="checkbox"><label><input data-ng-model="_storageType.options_ctrl" type="checkbox"/>Connect with SSL (PHP driver and MongoDB server must support SSL)</label></div></div>'),$templateCache.put("_service-storage-type.html",'<div class="form-group"><label>Storage Type</label><df-simple-help data-options="dfSimpleHelp.storageType"></df-simple-help><select class="form-control" data-ng-change="_renderAdditionalFields(serviceInfo.record.storage_type)" data-ng-options="option.value as option.name for option in hcv.remoteOptions" data-ng-model="serviceInfo.record.storage_type" type="text"><option value="">-- Select Storage Type --</option></select></div>'),$templateCache.put("_service-rs-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.username"/></div>'),$templateCache.put("_service-rs-api-key.html",'<div class="form-group"><label>API Key</label><df-simple-help data-options="dfSimpleHelp.rsApiKey"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.api_key"/></div>'),$templateCache.put("_service-rs-tenet-name.html",'<div class="form-group"><label>Tenant Name</label><df-simple-help data-options="dfSimpleHelp.rsTenantName"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.tenant_name"/></div>'),$templateCache.put("_service-rs-region.html",'<div class="form-group"><label>Region</label><df-simple-help data-options="dfSimpleHelp.rsTenantRegion"></df-simple-help><select class="form-control" data-ng-change="_renderRegionUrl(_storageType.region, hcv.rackspaceRegions)" data-ng-options="option.value as option.name for option in hcv.rackspaceRegions" data-ng-model="_storageType.region"></select></div>'),$templateCache.put("_service-rs-endpoint.html",'<div class="form-group"><label>URL/Endpoint</label><df-simple-help data-options="dfSimpleHelp.rsEndpoint"></df-simple-help><input class="form-control" data-ng-disabled="!_storageType.region" type="text" data-ng-model="_storageType.url"/></div>'),$templateCache.put("_service-os-user-name.html",'<div class="form-group"><label>Username</label><df-simple-help data-options="dfSimpleHelp.userName"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.username"/></div>'),$templateCache.put("_service-os-password.html",'<div class="form-group"><label>Password</label><df-simple-help data-options="dfSimpleHelp.osApiKey"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.password"/></div>'),$templateCache.put("_service-os-tenet-name.html",'<div class="form-group"><label>Tenant Name</label><df-simple-help data-options="dfSimpleHelp.osTenantName"></df-simple-help><input class="form-control" type="text" data-ng-model="_storageType.tenant_name"/></div>'),$templateCache.put("_service-os-region.html",'<div class="form-group"><label>Region</label><df-simple-help data-options="dfSimpleHelp.osRegion"></df-simple-help><input class="form-control" type="text" ng-model="_storageType.region"/></div>'),$templateCache.put("_service-os-endpoint.html",'<div class="form-group"><label>URL/Endpoint</label><df-simple-help data-options="dfSimpleHelp.osEndpoint"></df-simple-help><input class="form-control" data-ng-disabled="!_storageType.region" type="text" data-ng-model="_storageType.url"/></div>'),$templateCache.put("_service-push-type.html",'<div class="form-group"><label>Push Notification Service Vendor</label><df-simple-help data-options="dfSimpleHelp.pushServiceVendor"></df-simple-help><select class="form-control" data-ng-change="_renderAdditionalFields(serviceInfo.record.storage_type)" data-ng-options="option.value as option.name for option in hcv.pushOptions" data-ng-model="serviceInfo.record.storage_type" type="text"><option value="">-- Select Storage Type --</option></select></div>')}]),angular.module("dfRoles",["ngRoute","dfUtility","dfTable"]).constant("MOD_ROLES_ROUTER_PATH","/roles").constant("MOD_ROLES_ASSET_PATH","admin_components/adf-roles/").config(["$routeProvider","MOD_ROLES_ROUTER_PATH","MOD_ROLES_ASSET_PATH",function($routeProvider,MOD_ROLES_ROUTER_PATH,MOD_ROLES_ASSET_PATH){$routeProvider.when(MOD_ROLES_ROUTER_PATH,{templateUrl:MOD_ROLES_ASSET_PATH+"views/main.html",controller:"RolesCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("RolesCtrl",["$rootScope","$scope","$q","dfApplicationData","SystemConfigDataService",function($rootScope,$scope,$q,dfApplicationData,SystemConfigDataService){$scope.$parent.title="Roles",$rootScope.isRouteLoading=!0,$scope.links=[{name:"manage-roles",label:"Manage",path:"manage-roles"},{name:"create-role",label:"Create",path:"create-role"}],$scope.loading=dfApplicationData.loadApi(["role","service"]),$scope.adldap=SystemConfigDataService.getSystemConfig().authentication.adldap.length,$scope.emptySectionOptions={title:"You have no Roles!",text:"Click the button below to get started creating your first role.  You can always create new roles by clicking the tab located in the section menu to the left.",buttonText:"Create A Role!",viewLink:$scope.links[1],active:!1}}]).directive("dfRoleDetails",["MOD_ROLES_ASSET_PATH","dfApplicationData","dfNotify","dfObjectService","dfApplicationPrefs","$q","SystemConfigDataService","dfSystemData",function(MOD_ROLES_ASSET_PATH,dfApplicationData,dfNotify,dfObjectService,dfApplicationPrefs,$q,SystemConfigDataService,dfSystemData){return{restrict:"E",scope:{roleData:"=?",newRole:"=?"},templateUrl:MOD_ROLES_ASSET_PATH+"views/df-role-details.html",link:function(scope,elem,attrs){var Role=function(roleData){var newRole={name:null,description:null,is_active:!1,default_app_id:null,role_service_access_by_role_id:[],id:null,role_lookup_by_role_id:[]};return roleData=roleData||newRole,{__dfUI:{selected:!1},record:angular.copy(roleData),recordCopy:angular.copy(roleData)}};scope.basicInfoError=!1,scope.role=null,scope.newRole&&(scope.role=new Role),scope.saveRole=function(){scope.newRole?scope._saveRole():scope._updateRole()},scope.deleteRole=function(){scope._deleteRole()},scope.closeRole=function(){scope._closeRole()},scope._saveRoleToServer=function(requestDataObj){return dfApplicationData.saveApiData("role",requestDataObj).$promise},scope._updateRoleToServer=function(requestDataObj){return dfApplicationData.updateApiData("role",requestDataObj).$promise},scope._deleteRoleFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("role",requestDataObj).$promise},scope._prepareRoleData=function(){return scope.role.record.name?(scope.basicInfoError=!1,scope.adldap&&scope.role.record.dn&&(scope.role.record.role_adldap_by_role_id=scope.role.record.id?[{role_id:scope.role.record.id,dn:scope.role.record.dn}]:[{dn:scope.role.record.dn}],delete scope.role.record.dn),scope._prepareServiceAccessData(),void scope._prepareRoleLookUpKeysData()):void(scope.basicInfoError=!0)},scope._resetRoleDetails=function(){scope.newRole?scope.role=new Role:scope.roleData=null,angular.element("#basic-tab").trigger("click"),scope.$broadcast("dfPaginate:reset:user"),scope.$broadcast("dfPaginate:reset:app"),scope.lookupKeysError=!1,scope.basicInfoError=!1},scope._saveRole=function(){scope._prepareRoleData();var requestDataObj={params:{fields:"*",related:"role_service_access_by_role_id,role_lookup_by_role_id"},data:scope.role.record};scope._saveRoleToServer(requestDataObj).then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role saved successfully."};scope.role=new Role(result),dfNotify.success(messageOptions),scope._resetRoleDetails()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._updateRole=function(){scope._prepareRoleData();var requestDataObj={params:{fields:"*",related:"role_service_access_by_role_id,role_lookup_by_role_id"},data:scope.role.record};scope._updateRoleToServer(requestDataObj).then(function(result){scope.adldap?dfSystemData.resource({params:{fields:"*",related:"role_adldap_by_role_id"}}).get({api:"role",id:result.id,related:"role_adldap_by_role_id"}).$promise.then(function(adResult){adResult.role_adldap_by_role_id&&adResult.role_adldap_by_role_id.length>0&&(result.dn=adResult.role_adldap_by_role_id[0].dn),scope.role=new Role(result)},function(reject){scope.role=new Role(result)}):scope.role=new Role(result);var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role updated successfully."};dfNotify.success(messageOptions)},function(reject){scope.role.record.role_adldap_by_role_id&&scope.role.record.role_adldap_by_role_id.length>0&&(scope.role.record.dn=scope.role.record.role_adldap_by_role_id[0].dn);var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){}),dfApplicationPrefs.getPrefs().sections.role.autoClose&&scope._resetRoleDetails()},scope._deleteRole=function(){var requestDataObj={params:{},data:scope.role.record};scope._deleteRoleFromServer(requestDataObj).then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role successfully deleted."};dfNotify.success(messageOptions),scope.role=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._closeRole=function(){return scope._prepareRoleData(),dfObjectService.compareObjectsAsJson(scope.role.record,scope.role.recordCopy)||dfNotify.confirmNoSave()?void scope._resetRoleDetails():!1};var watchData=scope.$watch("roleData",function(newValue,oldValue){return newValue?scope.newRole?!1:void(scope.role=new Role(newValue)):!1});scope.$on("$destroy",function(e){watchData(),scope.$broadcast("dfPaginate:reset:records")});var watchService=scope.$watch("services",function(newValue,oldValue){null===newValue&&(scope.services=dfApplicationData.getApiData("service"),"All"!==scope.services[0].name&&scope.services.unshift({id:null,name:"All",components:["","*"]}))}),watchServiceData=scope.$watchCollection(function(){return dfApplicationData.getApiData("service")},function(newValue,oldValue){newValue&&(scope.services=dfApplicationData.getApiData("service"),"All"!==scope.services[0].name&&scope.services.unshift({id:null,name:"All",components:["","*"]}))});scope.$on("$destroy",function(e){watchService(),watchServiceData()}),scope.dfSimpleHelp={serviceAccess:{title:"Role Service Access Information",text:"Access rules for DreamFactory services. Use caution when allowing system access."}},scope.dfLargeHelp={basic:{title:"Roles Overview",text:"Roles provide a way to grant or deny API access to specific services or apps."},access:{title:"Access Overview",text:"This section allows you set set up rules for a role restricting what services and components users assigned to the role will have access to. Advanced Filters are for implementing additional server side filter logic on database transactions."},lookupkeys:{title:"Lookup Keys Overview",text:'The DreamFactory administrator can create any number of "key value" pairs attached to a role. The key values are automatically substituted on the server. For example, key names can be used in the username and password fields required to hook up a SQL or NoSQL database. They can also be used in Email Templates or as parameters for external REST services. Any Lookup Key can be marked as private, and in this case the key value is securely encrypted on the server and is no longer accessible through the platform interface.<span style="color: red;">  Lookup keys for service configuration and credentials must be made private.</span>'}}}}}]).directive("assignServiceAccess",["MOD_ROLES_ASSET_PATH","dfNotify",function(MOD_ROLES_ASSET_PATH,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_ROLES_ASSET_PATH+"views/df-assign-service-access.html",link:function(scope,elem,attrs){var ServiceAccess=function(){return{__dfUI:{allowFilters:!1,showFilters:!1,hasError:!1},record:{verb_mask:0,requestor_mask:1,component:"*",service:scope.services[0]||null,service_id:scope.services[0].id||null,filters:[],filter_op:"AND"}}};scope.roleServiceAccesses=[],scope.addServiceAccess=function(){scope._addServiceAccess()},scope.removeServiceAccess=function(serviceAccessObjIndex){scope._removeServiceAccess(serviceAccessObjIndex)},scope._prepareServiceAccessData=function(){var preppedArr=[];angular.forEach(scope.roleServiceAccesses,function(obj){var _obj=angular.copy(obj.record);delete _obj.service,preppedArr.push(_obj)}),scope.role.record.role_service_access_by_role_id=preppedArr},scope._addServiceAccess=function(){scope.roleServiceAccesses.push(new ServiceAccess)},scope._removeServiceAccess=function(serviceAccessObjIndex){scope.roleServiceAccesses[serviceAccessObjIndex].record.id?scope.roleServiceAccesses[serviceAccessObjIndex].record.role_id=null:scope.roleServiceAccesses.splice(serviceAccessObjIndex,1)},scope._getService=function(serviceId){for(var i=0;i<scope.services.length;){if(scope.services[i].id===serviceId)return scope.services[i];i++}var messageOptions={module:"DreamFactory Roles Module",type:"error",provider:"dreamfactory",message:'Service with id "'+serviceId+'" not found.'};dfNotify.error(messageOptions)};var watchRole=scope.$watch("role",function(newValue,oldValue){return newValue?(scope.roleServiceAccesses=[],void(scope.newRole?scope.roleServiceAccesses=[]:angular.forEach(newValue.record.role_service_access_by_role_id,function(obj){var _newSA=new ServiceAccess;if(_newSA.record=obj,_newSA.record.service=scope._getService(obj.service_id),_newSA.record.service.hasOwnProperty("components")&&"string"==typeof _newSA.record.service.components){_newSA.__dfUI.hasError=!0,_newSA.record.component=null;var messageOptions={module:"Roles",type:"error",provider:"dreamfactory",message:_newSA.record.service.components};dfNotify.error(messageOptions)}scope.roleServiceAccesses.push(_newSA)}))):!1});scope.$on("$destroy",function(newValue,oldValue){watchRole()})}}}]).directive("dfServiceAccess",["MOD_ROLES_ASSET_PATH","dfNotify","$http","INSTANCE_URL",function(MOD_ROLES_ASSET_PATH,dfNotify,$http,INSTANCE_URL){return{restrict:"E",replace:!0,scope:{serviceAccess:"=",index:"="},templateUrl:MOD_ROLES_ASSET_PATH+"views/df-service-access.html",link:function(scope,elem,attrs){var ServiceAccessFilter=function(){return{name:"",operator:"=",value:""}};scope.filterOperators=["=","!=",">","<",">=","<=","in","not in","starts with","ends with","contains","is null","is not null"],scope.toggleServiceAccessFilters=function(){scope._toggleServiceAccessFilters()},scope.addServiceAccessFilter=function(){scope._addServiceAccessFilter()},scope.removeServiceAccessFilter=function(serviceAccessFilterIndex){scope._removeServiceAccessFilter(serviceAccessFilterIndex)},scope.toggleServiceFilterOp=function(){scope._toggleServiceFilterOp()},scope.allowFilters=function(){switch(scope.serviceAccess.record.service.type){case"sqlite":case"mysql":case"pgsql":case"sqlsrv":case"sqlanywhere":case"oracle":case"ibmdb2":case"mongo_db":case"aws_dynamodb":case"aws_simpledb":case"azure_table":case"couch_db":case"salesforce_db":scope.serviceAccess.__dfUI.allowFilters=!0;break;default:scope.serviceAccess.__dfUI.allowFilters=!1}},scope._toggleServiceAccessFilters=function(){scope.serviceAccess.__dfUI.show_filters=!scope.serviceAccess.__dfUI.show_filters},scope._addServiceAccessFilter=function(){scope.serviceAccess.record.filters.push(new ServiceAccessFilter)},scope._removeServiceAccessFilter=function(serviceAccessFilterIndex){scope.serviceAccess.record.filters.splice(serviceAccessFilterIndex,1)},scope._toggleServiceFilterOp=function(){scope.serviceAccess.record.filter_op="AND"===scope.serviceAccess.record.filter_op?"OR":"AND"},scope._getComponents=function(){return $http.get(INSTANCE_URL+"/api/v2/"+scope.serviceAccess.record.service.name+"/?as_access_list=true")},scope._checkForFailure=function(){if("string"==typeof scope.serviceAccess.record.components){scope.serviceAccess.__dfUI.hasError=!0,scope.serviceAccess.record.component=null;var messageOptions={module:"Roles",type:"error",provider:"dreamfactory",message:scope.serviceAccess.record.components};dfNotify.error(messageOptions)}else scope.serviceAccess.__dfUI.hasError=!1};var watchServiceAccess=scope.$watch("serviceAccess",function(oldValue,newValue){return newValue&&newValue.record.service?void scope.allowFilters():!1}),watchServiceAccessRecordService=scope.$watch("serviceAccess.record.service",function(newValue,oldValue){if(!newValue)return!1;if(scope.allowFilters(),scope.serviceAccess.record.service_id=newValue.id,scope.serviceAccess.record.service.components=["","*"],"All"!==scope.serviceAccess.record.service.name)switch(scope.serviceAccess.record.type){case"rws":case"nodejs":case"php":case"python":case"v8js":break;default:scope._getComponents().then(function(result){scope.serviceAccess.record.service.components=result.data.resource},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})}scope._checkForFailure(),scope._checkForFailure()});scope.$on("$destroy",function(e){watchServiceAccessRecordService(),watchServiceAccess()})}}}]).directive("dfManageRoles",["$rootScope","MOD_ROLES_ASSET_PATH","dfApplicationData","dfApplicationPrefs","dfNotify","dfSystemData","SystemConfigDataService",function($rootScope,MOD_ROLES_ASSET_PATH,dfApplicationData,dfApplicationPrefs,dfNotify,dfSystemData,SystemConfigDataService){return{restrict:"E",scope:!1,templateUrl:MOD_ROLES_ASSET_PATH+"views/df-manage-roles.html",link:function(scope,elem,attrs){var ManagedRole=function(roleData){return{__dfUI:{selected:!1},record:roleData}};scope.adldap=SystemConfigDataService.getSystemConfig().authentication.adldap.length,scope.currentViewMode=dfApplicationPrefs.getPrefs().sections.role.manageViewMode,scope.roles=null,scope.currentEditRole=null,scope.fields=[{name:"id",label:"Id",active:!0},{name:"name",label:"Name",active:!0},{name:"description",label:"Description",active:!0},{name:"is_active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedRoles=[],scope.editRole=function(role){scope.adldap?dfSystemData.resource({params:{fields:"*",related:"role_adldap_by_role_id"}}).get({api:"role",id:role.id,related:"role_adldap_by_role_id"}).$promise.then(function(result){result.role_adldap_by_role_id&&result.role_adldap_by_role_id.length>0&&(role.dn=result.role_adldap_by_role_id[0].dn),scope._editRole(role)},function(reject){scope._editRole(role)}):scope._editRole(role)},scope.deleteRole=function(role){dfNotify.confirm("Delete "+role.record.name+"?")&&scope._deleteRole(role)},scope.deleteSelectedRoles=function(){dfNotify.confirm("Delete selected roles?")&&scope._deleteSelectedRoles()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(role){scope._setSelected(role)},scope._deleteFromServer=function(requestDataObj){return dfApplicationData.deleteApiData("role",requestDataObj).$promise},scope._editRole=function(role){scope.currentEditRole=role},scope._deleteRole=function(role){var requestDataObj={params:{},data:role.record};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role successfully deleted."};dfNotify.success(messageOptions),role.__dfUI.selected&&scope.setSelected(role),scope.$broadcast("toolbar:paginate:role:delete")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})},scope._orderOnSelect=function(fieldObj){var orderedBy=scope.order.orderBy;orderedBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(role){for(var i=0;i<scope.selectedRoles.length;){if(role.record.id===scope.selectedRoles[i])return role.__dfUI.selected=!1,void scope.selectedRoles.splice(i,1);i++}role.__dfUI.selected=!0,scope.selectedRoles.push(role.record.id)},scope._deleteSelectedRoles=function(){var requestDataObj={params:{ids:scope.selectedRoles.join(","),rollback:!0}};scope._deleteFromServer(requestDataObj).then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Roles deleted successfully."};dfNotify.success(messageOptions),scope.selectedRoles=[],scope.$broadcast("toolbar:paginate:role:reset")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){})};var watchRoles=scope.$watchCollection("roles",function(newValue,oldValue){if(null===newValue){var _roles=[];return angular.forEach(dfApplicationData.getApiData("role"),function(role){_roles.push(new ManagedRole(role))}),void(scope.roles=_roles)}0===newValue.length&&(scope.emptySectionOptions.active=!0)});scope.$watchCollection(function(){return dfApplicationData.getApiData("role")},function(newValue,oldValue){var _roles=[];angular.forEach(dfApplicationData.getApiData("role"),function(role){_roles.push(new ManagedRole(role))}),scope.roles=_roles});scope.$on("toolbar:paginate:role:update",function(e){var _roles=[];angular.forEach(dfApplicationData.getApiData("role"),function(role){for(var _role=new ManagedRole(role),i=0;i<scope.selectedRoles.length;){if(scope.selectedRoles[i]===_role.record.id){_role.__dfUI.selected=!0;break}i++}_roles.push(_role)}),scope.roles=_roles}),scope.$on("$destroy",function(e){watchRoles()}),scope.$watch("$viewContentLoaded",function(event){$rootScope.isRouteLoading=!1})}}}]).directive("dfRoleLoading",["$rootScope",function($rootScope){return{restrict:"E",template:"<div class='col-lg-12' ng-if='isRouteLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"
}}]).directive("dfAssignLookUpKeys",["MOD_ROLES_ASSET_PATH",function(MOD_ROLES_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_ROLES_ASSET_PATH+"views/df-assign-lookup-keys.html",link:function(scope,elem,attrs){var LookUpKey=function(lookupKeyData){var _new={name:"",value:"","private":!1,allow_user_update:!1};return{__dfUI:{unique:!0},record:angular.copy(lookupKeyData||_new),recordCopy:angular.copy(lookupKeyData||_new)}};scope.roleLookUpKeys=[],scope.sameKeys=[],scope.lookupKeysError=!1,scope.addLookUpKey=function(){scope._addLookUpKey()},scope.deleteLookUpKey=function(keyObjIndex){scope._deleteLookUpKey(keyObjIndex)},scope._prepareRoleLookUpKeysData=function(){var tempArr=[];angular.forEach(scope.roleLookUpKeys,function(lk){tempArr.push(lk.record)}),scope.role.record.role_lookup_by_role_id=tempArr},scope._isUniqueKey=function(){scope.sameKeys=[],angular.forEach(scope.roleLookUpKeys,function(value,index){angular.forEach(scope.roleLookUpKeys,function(_value,_index){index!==_index&&value.record.name===_value.record.name&&scope.sameKeys.push(value)})})},scope._addLookUpKey=function(){scope.roleLookUpKeys.push(new LookUpKey)},scope._deleteLookUpKey=function(keyObjIndex){void 0!==scope.roleLookUpKeys[keyObjIndex].record.role_id?scope.roleLookUpKeys[keyObjIndex].record.role_id=null:scope.roleLookUpKeys.splice(keyObjIndex,1)};var watchRole=scope.$watch("role",function(newValue,oldValue){return newValue?(scope.roleLookUpKeys=null,void(scope.newRole?scope.roleLookUpKeys=[]:(scope.roleLookUpKeys=[],angular.forEach(newValue.record.role_lookup_by_role_id,function(lkObj){scope.roleLookUpKeys.push(new LookUpKey(lkObj))})))):!1}),watchSameKeys=scope.$watch("sameKeys",function(newValue,oldValue){return 0===newValue.length&&0===scope.roleLookUpKeys.length?void(scope.lookupKeysError=!1):0===newValue.length&&scope.roleLookUpKeys.length>0?void angular.forEach(scope.roleLookUpKeys,function(lk){lk.__dfUI.unique=!0,scope.lookupKeysError=!1}):(angular.forEach(scope.roleLookUpKeys,function(lk){angular.forEach(newValue,function(_lk){lk.record.name===_lk.record.name?lk.__dfUI.unique=!1:lk.__dfUI.unique=!0})}),void(scope.lookupKeysError=!0))}),watchLookupKeys=scope.$watchCollection("roleLookUpKeys",function(newValue,oldValue){newValue&&scope._isUniqueKey()});scope.$on("$destroy",function(e){watchRole(),watchSameKeys(),watchLookupKeys()})}}}]),angular.module("dfSchema",["ngRoute","dfUtility"]).constant("MOD_SCHEMA_ROUTER_PATH","/schema").constant("MOD_SCHEMA_ASSET_PATH","admin_components/adf-schema/").config(["$routeProvider","MOD_SCHEMA_ROUTER_PATH","MOD_SCHEMA_ASSET_PATH",function($routeProvider,MOD_SCHEMA_ROUTER_PATH,MOD_SCHEMA_ASSET_PATH){$routeProvider.when(MOD_SCHEMA_ROUTER_PATH,{templateUrl:MOD_SCHEMA_ASSET_PATH+"views/main.html",controller:"SchemaCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("SchemaCtrl",["INSTANCE_URL","$scope","$http","dfApplicationData","dfNotify","dfObjectService",function(INSTANCE_URL,$scope,$http,dfApplicationData,dfNotify,dfObjectService){var Service=function(schemaData){function getSchemaComponents(array){var service=[];return angular.forEach(array,function(component){var componentObj={__dfUI:{newTable:!1},name:component.name,label:component.label};service.push(componentObj)}),service}return{__dfUI:{unfolded:!1},name:schemaData.name,label:schemaData.label,components:getSchemaComponents(schemaData.components),updateComponents:function(array){this.components=getSchemaComponents(array)}}},ManagedTableData=function(tableData){return{__dfUI:{newTable:!tableData},record:tableData,currentService:$scope.currentService}};$scope.$parent.title="Schema",dfApplicationData.loadApi(["service"]),$scope.links=[{name:"manage-schema",label:"Manage",path:"manage-schema"}],$scope.bindTable=null;var tempObj={};angular.forEach(dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db,mongodb"}),function(serviceData){tempObj[serviceData.name]=new Service(serviceData)}),$scope.schemaManagerData=tempObj,$scope.currentService=null,$scope.currentTable=null,$scope.lastTable="",$scope.activeComponent=null,$scope.currentEditTable=null,$scope.currentUploadSchema=null,$scope.addTable=function(){if($scope.currentUploadSchema&&!$scope.uploadIsEditorClean){if(!dfNotify.confirm("You have unsaved changes.  Continue without saving?"))return;$scope.currentUploadSchema=null}else if(null!==$scope.bindTable&&!dfObjectService.compareObjectsAsJson($scope.bindTable.record,$scope.bindTable.recordCopy)){if(!dfNotify.confirm("You have unsaved changes.  Continue without saving?"))return;$scope.currentEditTable=null}$scope._addTable()},$scope.getTable=function(){return!$scope.currentUploadSchema||$scope.uploadIsEditorClean||dfNotify.confirm("You have unsaved changes.  Continue without saving?")?void(null===$scope.bindTable||dfObjectService.compareObjectsAsJson($scope.bindTable.record,$scope.bindTable.recordCopy)?($scope.lastTable=angular.copy($scope.currentTable),$scope._getTable($scope.currentTable)):dfNotify.confirm("You have unsaved changes.  Continue without saving?")?($scope.lastTable=angular.copy($scope.currentTable),$scope._getTable($scope.currentTable)):$scope.currentTable=angular.copy($scope.lastTable)):void($scope.currentTable=angular.copy($scope.lastTable))},$scope.deleteTable=function(){dfNotify.confirm("Are you sure you want to drop table "+$scope.currentEditTable.record.name+"?")&&$scope._deleteTable()},$scope.addByJson=function(){if(null!==$scope.bindTable&&!dfObjectService.compareObjectsAsJson($scope.bindTable.record,$scope.bindTable.recordCopy)){if(!dfNotify.confirm("You have unsaved changes.  Continue without saving?"))return;$scope.lastTable="",$scope.currentEditTable=null}$scope.currentEditTable=null,$scope._addByJson()},$scope.refreshService=function(forceRefresh){$scope._refreshService(forceRefresh)},$scope._getTableFromServer=function(requestDataObj){return $http({method:"GET",url:INSTANCE_URL+"/api/v2/"+$scope.currentService.name+"/_schema/"+requestDataObj.name,params:{refresh:!0}})},$scope._deleteTableFromServer=function(requestDataObj){return $http({method:"DELETE",url:INSTANCE_URL+"/api/v2/"+$scope.currentService.name+"/_schema/"+requestDataObj.name})},$scope._saveSchemaToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/"+$scope.currentService.name+"/_schema",data:requestDataObj.data})},$scope._refreshServiceFromServer=function(){return dfApplicationData.getServiceComponents($scope.currentService.name,INSTANCE_URL+"/api/v2/"+$scope.currentService.name+"/_schema",{params:{refresh:!0,fields:"name,label"}})},$scope._addTable=function(){$scope.currentEditTable=new ManagedTableData(null),$scope.currentTable=""},$scope._getTable=function(table){if(!table)return $scope.currentTable=null,void($scope.currentEditTable=null);var requestDataObj={name:table};$scope._getTableFromServer(requestDataObj).then(function(result){$scope.currentUploadSchema=null,$scope.currentEditTable=new ManagedTableData(result.data)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},$scope._deleteTable=function(){var requestDataObj={name:$scope.currentTable};$scope._deleteTableFromServer(requestDataObj).then(function(result){for(var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Table deleted successfully."},i=0;i<$scope.currentService.components.length;){if($scope.currentService.components[i].name===$scope.currentTable){$scope.currentService.components.splice(i,1),$scope.currentTable="",$scope.currentEditTable=null;break}i++}dfApplicationData.updateServiceComponentsLocal($scope.currentService),dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},$scope._addByJson=function(){$scope.currentUploadSchema=!0},$scope._refreshService=function(forceRefresh){for(var tableObj=null,i=0;i<$scope.currentService.components.length;i++)$scope.currentService.components[i].name===$scope.currentTable&&(tableObj=$scope.currentService.components[i]);dfApplicationData.getServiceComponents($scope.currentService.name,INSTANCE_URL+"/api/v2/"+$scope.currentService.name+"/_schema",{params:{refresh:!0,fields:"name,label"}},forceRefresh).then(function(result){$scope.currentService.updateComponents(result);var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:$scope.currentService.name+" refreshed."};forceRefresh&&dfNotify.success(messageOptions),tableObj&&($scope.currentTable=tableObj.name,$scope.getTable())},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})};var watchSchemaManagerData=$scope.$watch("schemaManagerData",function(newValue,oldValue){if(null===newValue){var tempObj={};angular.forEach(dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db,mongodb"}),function(serviceData){tempObj[serviceData.name]=new Service(serviceData)})}}),watchServiceComponents=$scope.$watchCollection(function(){return dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db,mongodb"})},function(newValue,oldValue){if(newValue){var tempObj={};angular.forEach(dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db,mongodb"}),function(serviceData){tempObj[serviceData.name]=new Service(serviceData)}),$scope.schemaManagerData=tempObj}}),watchCurrentEditTable=$scope.$watch("currentEditTable",function(newValue,oldValue){null===newValue&&($scope.currentTable="")});$scope.$on("$destroy",function(e){watchSchemaManagerData(),watchServiceComponents(),watchCurrentEditTable()}),$scope.$on("update:components",function(e,resource){$scope.currentService.components.push({__dfUI:{newTable:!1},name:resource.name,label:resource.label}),$scope.currentTable=$scope.currentService.components[$scope.currentService.components.length-1].name}),$scope.dfLargeHelp={manageSchema:{title:"Schema Manager Overview",text:"Choose a database service from the list to view or edit the schema. You can create a new database service in the Services section of this Admin Console."}}}]).directive("dfTableDetails",["MOD_SCHEMA_ASSET_PATH","INSTANCE_URL","dfNotify","$http","dfObjectService","dfApplicationData","$timeout",function(MOD_SCHEMA_ASSET_PATH,INSTANCE_URL,dfNotify,$http,dfObjectService,dfApplicationData,$timeout){return{restrict:"E",scope:{tableData:"=",table:"=?bindTable"},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-table-details.html",controller:function($scope){this.removeField=function(){$scope.table.record.field.pop()}},link:function(scope,elem,attrs){var Table=function(tableData){var _new={name:null,label:null,plural:null,primary_key:null,name_field:null,related:[],access:[],field:[{name:"example_field",label:"Example Field",type:"string"}]};return tableData=tableData||_new,{__dfUI:{newTable:null===tableData.name},record:angular.copy(tableData),recordCopy:angular.copy(tableData),currentService:tableData.currentService}},ManagedFieldData=function(fieldData){return{__dfUI:{newField:!fieldData},record:fieldData||null,currentService:scope.table.currentService}},ManagedRelationData=function(relationData){return{__dfUI:{newRelation:!relationData},record:relationData||null,currentService:scope.table.currentService}};scope.table=null,scope.currentEditField=null,scope.currentEditRelation=null,scope.viewMode="table",scope.editor=null,scope.isEditorClean=!0,scope.isEditable=!0,scope.editField=function(fieldData){scope._editField(fieldData)},scope.addField=function(){scope._addField()},scope.deleteField=function(field){dfNotify.confirm("Are you sure you want to delete field "+field.name+"?")&&scope._deleteField(field)},scope.editRelation=function(relationData){scope._editRelation(relationData)},scope.addRelation=function(relationData){scope._addRelation(relationData)},scope.deleteRelation=function(relationData){dfNotify.confirm("Are you sure you want to delete relationship "+relationData.name+"?")&&scope._deleteRelation(relationData)},scope.closeTable=function(){scope._closeTable()},scope.saveTable=function(){scope._saveTable()},scope.updateTable=function(){scope._updateTable()},scope.clearTable=function(){scope._clearTable()},scope.setPrimaryKey=function(field){scope._setPrimaryKey(field)},scope.toggleViewMode=function(){if(scope._validateJSON())scope._toggleViewMode();else{var messageOptions={module:"JSON Error",type:"error",provider:"dreamfactory",message:"Invalid JSON.  Please correct any errors and validate to switch back to table view."};dfNotify.error(messageOptions)}},scope.checkJSON=function(){scope._checkJSON()},scope._saveTableToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/"+requestDataObj.path+"?fields=*",data:{resource:[requestDataObj.data]}})},scope._updateTableToServer=function(requestDataObj){return $http({method:"PUT",url:INSTANCE_URL+"/api/v2/"+requestDataObj.path+"?fields=*",data:{resource:[requestDataObj.data]}})},scope._deleteFieldFromTableOnServer=function(requestDataObj){return $http({method:"DELETE",url:INSTANCE_URL+"/api/v2/"+requestDataObj.path})},scope._deleteRelationFromTableOnServer=function(requestDataObj){return $http({method:"DELETE",url:INSTANCE_URL+"/api/v2/"+requestDataObj.path})},scope._clearTable=function(){var confirmRes=dfNotify.confirmNoSave();confirmRes&&(scope.table.record={})},scope._validateJSON=function(){try{var result=JSON.parse(scope.editor.getValue());if(result)return scope.editor.setValue(angular.toJson(result,!0),-1),!0}catch(e){return!1}},scope._insertNewTableToAppObj=function(resource){var appObj=dfApplicationData.getApplicationObj();if(appObj.apis.hasOwnProperty("service")&&appObj.apis.service.hasOwnProperty("resource"))for(var i=0;i<appObj.apis.service.resource.length;i++)if(appObj.apis.service.resource[i].name===scope.tableData.currentService.name){appObj.apis.service.resource[i].components.push({name:resource.name,label:resource.label});break}dfApplicationData.setApplicationObj(appObj)},scope._editField=function(fieldData){scope.currentEditField=new ManagedFieldData(fieldData)},scope._addField=function(){scope.table.record.field.push({}),scope.currentEditField=new ManagedFieldData(scope.table.record.field[scope.table.record.field.length-1])},scope._deleteField=function(field){if(scope.table.__dfUI.newTable){for(var i=0;i<scope.table.record.field.length;){if(scope.table.record.field[i].name===field.name){scope.table.record.field.splice(i,1);break}i++}return void(scope.table.recordCopy=angular.copy(scope.table.record))}var requestDataObj={path:scope.tableData.currentService.name+"/_schema/"+scope.table.record.name+"/_field/"+field.name};scope._deleteFieldFromTableOnServer(requestDataObj).then(function(result){for(var i=0;i<scope.table.record.field.length;){if(scope.table.record.field[i].name===field.name){scope.table.record.field.splice(i,1);break}i++}scope.table.recordCopy=angular.copy(scope.table.record);var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Field deleted."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._editRelation=function(relationData){scope.currentEditRelation=new ManagedRelationData(relationData)},scope._addRelation=function(){scope.table.record.related.push({is_virtual:!0}),scope.currentEditRelation=new ManagedRelationData(scope.table.record.related[scope.table.record.related.length-1])},scope._deleteRelation=function(relation){if(scope.table.__dfUI.newTable){for(var i=0;i<scope.table.record.related.length;){if(scope.table.record.related[i].name===relation.name){scope.table.record.related.splice(i,1);break}i++}return void(scope.table.recordCopy=angular.copy(scope.table.record))}var requestDataObj={path:scope.tableData.currentService.name+"/_schema/"+scope.table.record.name+"/_related/"+relation.name};scope._deleteRelationFromTableOnServer(requestDataObj).then(function(result){for(var i=0;i<scope.table.record.related.length;){if(scope.table.record.related[i].name===relation.name){scope.table.record.related.splice(i,1);break}i++}scope.table.recordCopy=angular.copy(scope.table.record);var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Relationship deleted."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._closeTable=function(){return dfObjectService.compareObjectsAsJson(scope.table.record,scope.table.recordCopy)||dfNotify.confirmNoSave()?(scope.table=null,scope.tableData=null,scope.currentEditField=null,void(scope.currentEditRelation=null)):!1},scope._saveTable=function(){var requestDataObj={params:{include_schema:!0},data:scope.table.record,path:scope.tableData.currentService.name+"/_schema"};scope._saveTableToServer(requestDataObj).then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Table saved successfully."},newTable=result.data.resource[0];scope.$emit("update:components",newTable),scope._insertNewTableToAppObj(newTable);var service=scope.table.currentService;scope.table=new Table(newTable),scope.table.currentService=service,dfApplicationData.updateServiceComponentsLocal(service),dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateTable=function(){var requestDataObj={params:{include_schema:!0},data:scope.table.record,path:scope.tableData.currentService.name+"/_schema"};scope._updateTableToServer(requestDataObj).then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Table updated successfully."},newTable=result.data.resource[0],service=scope.table.currentService;scope.table=new Table(newTable),scope.table.currentService=service,dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._setPrimaryKey=function(field){for(var i=0;i<scope.table.record.field.length;){if(scope.table.record.field[i].is_primary_key){scope.table.record.field[i].is_primary_key=!1;break}i++}field.is_primary_key=!0,scope.table.record.primary_key=field.name},scope._toggleViewMode=function(){scope.viewMode="json"===scope.viewMode?"table":"json","table"===scope.viewMode&&(scope.table.record=angular.fromJson(scope.editor.getValue()))},scope._checkJSON=function(){if(scope._validateJSON()){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Valid JSON."};dfNotify.success(messageOptions)}else{var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:"JSON Invalid."};dfNotify.error(messageOptions)}};var watchTableData=scope.$watch("tableData",function(newValue,oldValue){null!==newValue&&(scope.table=newValue.__dfUI.newTable?new Table:new Table(newValue.record),scope.table.currentService=newValue.currentService)}),listener=function(){$timeout(function(){if(scope.editor.session.$annotations){var canDo=scope.editor.session.$annotations.some(function(item){return"error"===item.type?!0:!1});canDo?$(".save-schema-btn").addClass("disabled"):$(".save-schema-btn").removeClass("disabled")}},500)},editorWatch=scope.$watch("editor",function(newValue){newValue&&(scope.$watch(function(){return scope.editor.session.$annotations},function(){listener()}),scope.editor.on("input",function(){return scope.editor.getValue()?void listener():void $(".save-schema-btn").addClass("disabled")}))});scope.$on("$destroy",function(e){editorWatch(),watchTableData()}),scope.$on("update:managedtable",function(e){})}}}]).directive("dfFieldDetails",["MOD_SCHEMA_ASSET_PATH","INSTANCE_URL","$http","dfNotify","dfObjectService","dfApplicationData",function(MOD_SCHEMA_ASSET_PATH,INSTANCE_URL,$http,dfNotify,dfObjectService,dfApplicationData){return{restrict:"E",scope:{fieldData:"=",currentTable:"="},require:"^dfTableDetails",templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-field-details.html",link:function(scope,elem,attrs,dfTableDetailsCtrl){var Field=function(fieldData){var _new={allow_null:!1,auto_increment:!1,db_function:null,db_type:null,"default":null,fixed_length:!1,is_foreign_key:!1,is_primary_key:!1,is_unique:!1,label:null,length:null,name:null,precision:null,ref_field:"",ref_table:"",required:!1,scale:0,supports_multibyte:!1,type:null,validation:null,value:[]};return fieldData=fieldData||_new,{__dfUI:{newField:null==fieldData.type},record:fieldData,recordCopy:angular.copy(fieldData)}};scope.typeOptions=[{name:"I will manually enter a type",value:""},{name:"id",value:"id"},{name:"string",value:"string"},{name:"integer",value:"integer"},{name:"text",value:"text"},{name:"boolean",value:"boolean"},{name:"binary",value:"binary"},{name:"float",value:"float"},{name:"double",value:"double"},{name:"decimal",value:"decimal"},{name:"datetime",value:"datetime"},{name:"date",value:"date"},{name:"time",value:"time"},{name:"reference",value:"reference"},{name:"user_id",value:"user_id"},{name:"user_id_on_create",value:"user_id_on_create"},{name:"user_id_on_update",value:"user_id_on_update"},{name:"timestamp",value:"timestamp"},{name:"timestamp_on_create",value:"timestamp_on_create"},{name:"timestamp_on_update",value:"timestamp_on_update"},{name:"virtual",value:"virtual"}],scope.returnTypeOptions=[{name:"string",value:"string"},{name:"integer",value:"integer"},{name:"boolean",value:"boolean"},{name:"binary",value:"binary"},{name:"float",value:"float"},{name:"double",value:"double"},{name:"decimal",value:"decimal"}],scope.refTables=null,scope.refFields=null,scope.closeField=function(noConfirm){if(dfObjectService.compareObjectsAsJson(scope.field.record,scope.field.recordCopy))dfTableDetailsCtrl.removeField(),scope._closeField();else{var confirmRes=dfNotify.confirmNoSave();!noConfirm&&confirmRes&&(dfObjectService.mergeObjects(scope.field.recordCopy,scope.field.record),dfTableDetailsCtrl.removeField(),scope._closeField())}},scope.saveField=function(){scope._saveField()},scope.changeForeignKey=function(){scope.field.record.is_foreign_key?(scope._loadReferenceTables(),scope._loadReferenceFields()):(scope.field.record.ref_table=null,scope.field.record.ref_field=null,scope.refTables=null,scope.refFields=null)},scope._loadReferenceTables=function(){$http.get(INSTANCE_URL+"/api/v2/"+scope.fieldData.currentService.name+"/_schema/").then(function(result){scope.refTables=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._loadReferenceFields=function(){return scope.field.record.ref_table?void $http.get(INSTANCE_URL+"/api/v2/"+scope.fieldData.currentService.name+"/_schema/"+scope.field.record.ref_table).then(function(result){scope.refFields=result.data.field},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}):void(scope.refFields=null)},scope._saveFieldToServer=function(){var recordObj=angular.copy(scope.field.record);return $http({url:INSTANCE_URL+"/api/v2/"+scope.fieldData.currentService.name+"/_schema/"+scope.currentTable+"/_field/"+recordObj.name,method:"PATCH",data:recordObj})},scope._closeField=function(){scope.field=null,scope.fieldData=null},scope._saveField=function(){scope._saveFieldToServer().then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Field saved."};dfNotify.success(messageOptions),scope.field=new Field(scope.field.record),scope.$emit("update:managedtable")},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})};var watchFieldData=scope.$watch("fieldData",function(newValue,oldValue){newValue&&(scope.field=newValue.__dfUI.newField?new Field:new Field(newValue.record),newValue.record.ref_table||(scope.refFields=null))});scope.helpText={name:{title:"Name",text:"The field name used by the API."},alias:{title:"Alias",text:"If set, the alias is used in table access instead of the name."},label:{title:"Label",text:"A displayable name used by clients."},type:{title:"Type",text:"This is a simplified DreamFactory type."},database_type:{title:"Database Type",text:"If necessary, enter a type acceptable to the underlying database."},db_function:{title:"DB Function",text:"Enter a db function like max(fieldname) or concat(field1, '.', field2)"},validation:{title:"Validation",text:'A JSON object detailing required validations, if any. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Validations" target="_blank">here</a> for more info.'},aggregate_db_unction:{title:"Aggregate DB Function",text:'Supported DB functions to apply to this field. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Database_Functions" target="_blank">here</a> for more info.'}},scope.$on("$destroy",function(e){watchFieldData()})}}}]).directive("dfRelationDetails",["MOD_SCHEMA_ASSET_PATH","INSTANCE_URL","$http","dfNotify","dfObjectService","dfApplicationData",function(MOD_SCHEMA_ASSET_PATH,INSTANCE_URL,$http,dfNotify,dfObjectService,dfApplicationData){return{restrict:"E",scope:{relationData:"=",currentTable:"="},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-relation-details.html",link:function(scope,elem,attrs){var Relation=function(relationData){var _new={alias:null,always_fetch:!1,description:null,field:null,is_virtual:!0,junction_field:null,junction_ref_field:null,junction_service_id:null,junction_table:null,label:null,name:null,ref_field:null,ref_service_id:null,ref_table:null,type:null};return relationData=relationData||_new,{__dfUI:{newRelation:null==relationData.type},record:relationData,recordCopy:angular.copy(relationData)}};scope.typeOptions=[{name:"Belongs To",value:"belongs_to"},{name:"Has Many",value:"has_many"},{name:"Many To Many",value:"many_many"}],scope.fields=null,scope.refServices=dfApplicationData.getApiData("service",{type:"mysql,pgsql,sqlite,sqlsrv,sqlanywhere,oracle,ibmdb2,aws_redshift_db,mongodb"}),scope.refTables=null,scope.refFields=null,scope.junctionTables=null,scope.junctionFields=null,scope.closeRelation=function(noConfirm){if(!dfObjectService.compareObjectsAsJson(scope.relation.record,scope.relation.recordCopy)){if(!noConfirm&&!dfNotify.confirmNoSave())return!1;dfObjectService.mergeObjects(scope.relation.recordCopy,scope.relation.record)}scope._closeRelation()},scope.saveRelation=function(){scope._saveRelation()},scope.changeReferenceService=function(){scope.relation.record.ref_table=null,scope.relation.record.ref_field=null,scope._loadReferenceTables(),scope._loadReferenceFields()},scope._loadFields=function(){$http.get(INSTANCE_URL+"/api/v2/"+scope.relationData.currentService.name+"/_schema/"+scope.currentTable+"/_field/").then(function(result){scope.fields=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._getServiceNameFromId=function(id){if(id)for(var i=0;i<scope.refServices.length;i++)if(scope.refServices[i].id===id)return scope.refServices[i].name;return scope.relationData.currentService.name},scope._loadReferenceTables=function(){var ref_service_name=scope._getServiceNameFromId(scope.relation.record.ref_service_id);$http.get(INSTANCE_URL+"/api/v2/"+ref_service_name+"/_schema/").then(function(result){scope.refTables=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._loadReferenceFields=function(){if(!scope.relation.record.ref_table)return void(scope.refFields=null);var ref_service_name=scope._getServiceNameFromId(scope.relation.record.ref_service_id);$http.get(INSTANCE_URL+"/api/v2/"+ref_service_name+"/_schema/"+scope.relation.record.ref_table).then(function(result){scope.refFields=result.data.field},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope.changeJunctionService=function(){scope.relation.record.junction_table=null,scope.relation.record.junction_field=null,scope.relation.record.junction_ref_field=null,scope._loadJunctionTables(),scope._loadJunctionFields()},scope._loadJunctionTables=function(){var ref_service_name=scope._getServiceNameFromId(scope.relation.record.junction_service_id);$http.get(INSTANCE_URL+"/api/v2/"+ref_service_name+"/_schema/").then(function(result){scope.junctionTables=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._loadJunctionFields=function(){if(!scope.relation.record.ref_table)return void(scope.junctionFields=null);var ref_service_name=scope._getServiceNameFromId(scope.relation.record.junction_service_id);$http.get(INSTANCE_URL+"/api/v2/"+ref_service_name+"/_schema/"+scope.relation.record.junction_table).then(function(result){scope.junctionFields=result.data.field},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveRelationToServer=function(){var recordObj={related:[angular.copy(scope.relation.record)]};return $http({url:INSTANCE_URL+"/api/v2/"+scope.relationData.currentService.name+"/_schema/"+scope.currentTable,method:"PATCH",data:recordObj})},scope._closeRelation=function(){scope.relation=null,scope.relationData=null},scope._saveRelation=function(){scope._saveRelationToServer().then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Relation saved."};dfNotify.success(messageOptions),scope.relation=new Relation(scope.relation.record),scope.$emit("update:managedtable")},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})};var watchRelationData=scope.$watch("relationData",function(newValue,oldValue){newValue&&(scope.relation=newValue.__dfUI.newRelation?new Relation:new Relation(newValue.record),scope.fields||scope._loadFields(),newValue.record.ref_table?(scope._loadReferenceTables(),scope._loadReferenceFields()):scope.refFields=null,newValue.record.junction_table?(scope._loadJunctionTables(),scope._loadJunctionFields()):scope.junctionFields=null)});scope.helpText={is_virtual:{title:"Is Virtual Relationship",text:'Is this a virtual relationship. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Database_Functions" target="_blank">here</a> for more info.'}},scope.$on("$destroy",function(e){watchRelationData()})}}}]).directive("dfSchemaNavigator",["MOD_SCHEMA_ASSET_PATH","dfApplicationData",function(MOD_SCHEMA_ASSET_PATH,dfApplicationData){return{restrict:"E",scope:!1,templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-schema-navigator.html",
link:function(scope,elem,attrs){}}}]).directive("dfSchemaEditor",["MOD_SCHEMA_ASSET_PATH",function(MOD_SCHEMA_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-schema-editor.html",link:function(scope,elem,attrs){}}}]).directive("dfSchemaResizable",[function(){return{restrict:"A",scope:{},link:function(scope,elem,attrs){$(function(){$("#schema-navigator-resizable").resizable({alsoResize:"#schema-navigator-resizable-also"}),$("#schema-navigator-resizable-also").resizable()})}}}]).directive("dfUploadSchema",["MOD_SCHEMA_ASSET_PATH","dfNotify","$timeout",function(MOD_SCHEMA_ASSET_PATH,dfNotify,$timeout){return{restrict:"E",scope:!1,templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-upload-schema.html",link:function(scope,elem,attrs){scope.uploadEditor=null,scope.uploadIsEditorClean=!0,scope.uploadIsEditable=!0,scope.uploadSchemaData={resource:[{name:"todo",label:"Todo",plural:"Todos",alias:null,field:[{name:"id",label:"Id",type:"id"},{name:"name",label:"Name",type:"string",size:80,allow_null:!1},{name:"complete",label:"Complete",type:"boolean"}]}]};var listener=function(){$timeout(function(){if(scope.uploadEditor.session.$annotations){var canDo=scope.uploadEditor.session.$annotations.some(function(item){return"error"===item.type?!0:!1});canDo?$(".btn-upload-schema").addClass("disabled"):$(".btn-upload-schema").removeClass("disabled")}},500)};scope.$watch("uploadEditor",function(newValue){newValue&&(scope.$watch(function(){return scope.uploadEditor.session.$annotations},function(){listener()}),scope.uploadEditor.on("input",function(value){return scope.uploadEditor&&!scope.uploadEditor.getValue()?void $(".btn-upload-schema").addClass("disabled"):void listener()}))});scope.uploadSchema=function(){scope._uploadSchema()},scope.closeUploadSchema=function(){scope._closeUploadSchema()},scope._uploadSchema=function(){var requestDataObj={params:{include_schema:!0},data:angular.fromJson(scope.uploadEditor.getValue())};scope._saveSchemaToServer(requestDataObj).then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Tables created successfully."};angular.forEach(result.data.table,function(dataObj){scope.currentService.components.push({__dfUI:{newTable:!1},name:dataObj.name,path:"_schema/"+dataObj.name})}),scope.uploadEditor.session.getUndoManager().reset(),scope.uploadEditor.session.getUndoManager().markClean(),scope.uploadIsEditorClean=!0,scope.refreshService(!0),dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._closeUploadSchema=function(){if(!scope.uploadIsEditorClean){if(!dfNotify.confirm("You have unsaved changes.  Continue without saving?"))return;scope.$parent.currentUploadSchema=null}scope.$parent.currentUploadSchema=null}}}}]).directive("jsonEdit",function(){return{restrict:"A",require:"ngModel",template:'<textarea ng-model="jsonEditing"></textarea>',replace:!0,scope:{model:"=jsonEdit"},link:function(scope,element,attrs,ngModelCtrl){function setEditing(value){scope.jsonEditing=angular.copy(JSON2String(value))}function updateModel(value){scope.model=string2JSON(value)}function setValid(){ngModelCtrl.$setValidity("json",!0)}function setInvalid(){ngModelCtrl.$setValidity("json",!1)}function string2JSON(text){try{return angular.fromJson(text)}catch(err){return setInvalid(),text}}function JSON2String(object){return angular.toJson(object,!0)}function isValidJson(model){var flag=!0;try{angular.fromJson(model)}catch(err){flag=!1}return flag}setEditing(scope.model),scope.$watch("jsonEditing",function(newval,oldval){newval!=oldval&&(isValidJson(newval)?(setValid(),updateModel(newval)):setInvalid())},!0),scope.$watch("model",function(newval,oldval){newval!=oldval&&setEditing(newval)},!0)}}}),angular.module("dfScripts",["ngRoute","dfUtility"]).constant("MODSCRIPTING_ROUTER_PATH","/scripts").constant("MODSCRIPTING_ASSET_PATH","admin_components/adf-scripts/").constant("MODSCRIPTING_EXAMPLES_PATH","admin_components/adf-scripts/examples/").config(["$routeProvider","MODSCRIPTING_ROUTER_PATH","MODSCRIPTING_ASSET_PATH",function($routeProvider,MODSCRIPTING_ROUTER_PATH,MODSCRIPTING_ASSET_PATH){$routeProvider.when(MODSCRIPTING_ROUTER_PATH,{templateUrl:MODSCRIPTING_ASSET_PATH+"views/main.html",controller:"ScriptsCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$http",function(INSTANCE_URL,$http){}]).controller("ScriptsCtrl",["INSTANCE_URL","SystemConfigDataService","$scope","$rootScope","$http","dfApplicationData","dfNotify","MODSCRIPTING_EXAMPLES_PATH",function(INSTANCE_URL,SystemConfigDataService,$scope,$rootScope,$http,dfApplicationData,dfNotify,MODSCRIPTING_EXAMPLES_PATH){$scope.$parent.title="Scripts",$scope.sampleSelect=null,dfApplicationData.loadApi(["event","script_type"]),$scope.serviceTypeConfig="scripts";var ScriptObj=function(scriptId,scriptLanguage,scriptData){return{name:scriptId,type:scriptLanguage||"v8js",content:scriptData||"",is_active:!1,allow_event_modification:!1,__newScript:!0}};$scope.scriptSamplesSelect=function(type){$scope.sampleSelect=type,$scope._loadSampleScript(type)},$scope.highlightScript=function(){$http({method:"GET",url:INSTANCE_URL+"/api/v2/system/event_script",params:{as_list:!0}}).then(function(result){$scope.highlightedEvents=result.data.resource,$scope.events.$$isHighlighted=$scope.highlightEvent($scope.events)})},$scope.handleFiles=function(files){if(files){var file=files&&files[0];if(file){var reader=new FileReader;reader.readAsText(file,"UTF-8"),reader.onload=function(evt){$scope.currentScriptObj.content=evt.target.result,$scope.$apply()},reader.onerror=function(evt){console.log("error")}}}},$scope.handleGitFiles=function(data){data&&($scope.currentScriptObj.content=data,$scope.$apply())},$scope.githubModalShow=function(){$rootScope.$broadcast("githubShowModal",$scope.serviceTypeConfig)},$scope.__getDataFromHttpResponse=function(httpResponseObj){return httpResponseObj?httpResponseObj.hasOwnProperty("data")?httpResponseObj.data.hasOwnProperty("record")?httpResponseObj.data.record:httpResponseObj.data.hasOwnProperty("resource")?httpResponseObj.data.resource:httpResponseObj.data:void 0:[]},$scope.isHostedSystem=SystemConfigDataService.getSystemConfig().is_hosted,$scope.samplesScripts=null,void 0===dfApplicationData.getApiData("event")?dfApplicationData.getApiData("event",null,!0).then(function(result){$scope.events=dfApplicationData.getApiData("event"),$scope.highlightScript()}):($scope.events=dfApplicationData.getApiData("event"),$scope.highlightScript()),void 0===dfApplicationData.getApiData("script_type")?dfApplicationData.getApiData("script_type",null,!0).then(function(result){$scope.scriptTypes=dfApplicationData.getApiData("script_type")}):$scope.scriptTypes=dfApplicationData.getApiData("script_type"),$scope.uppercaseVerbLabels=!0,$scope.allowedVerbs=["get","post","put","patch","delete"],$scope.allowedScriptFormats=["js","php","py","txt"],$scope.currentServiceObj=null,$scope.currentPathObj=null,$scope.currentScriptObj=null,$scope.editor=null,$scope.isEditorClean=!0,$scope.menuPathArr=[],$scope.setService=function(name,eventObj){$scope._setService(name,eventObj)},$scope.setPath=function(name,pathObj){$scope._setPath(name,pathObj)},$scope.setScript=function(scriptIdStr){$scope._setScript(scriptIdStr)},$scope.setEventList=function(name,verb,verbs,events){$scope.cachePath={verbs:$scope.currentPathObj.verbs,name:$scope.currentPathObj.name},$scope._setEventList(name,verb,verbs,events)},$scope.clearEventList=function(){$scope.currentPathObj.events&&($scope.cachePath.name=$scope.currentPathObj.name,$scope.cachePath.verb=$scope.currentPathObj.verb,$scope.cachePath.verbs=$scope.currentPathObj.verbs,$scope.cachePath.events=$scope.currentPathObj.events,$scope.currentPathObj.events=null,$scope.currentPathObj.verb=null,$scope.currentPathObj.verbs=null)},$scope.saveScript=function(){$scope._saveScript()},$scope.deleteScript=function(){dfNotify.confirm("Delete "+$scope.currentScriptObj.name+"?")&&$scope._deleteScript()},$scope._getEventFromServer=function(requestDataObj){return $http({method:"GET",url:INSTANCE_URL+"/api/v2/"+requestDataObj.eventName,params:requestDataObj.params})},$scope._getScriptFromServer=function(requestDataObj){return $http({method:"GET",url:INSTANCE_URL+"/api/v2/system/event_script/"+requestDataObj.name,params:requestDataObj.params})},$scope._saveScriptToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/system/event_script/"+requestDataObj.name,params:requestDataObj.params,data:requestDataObj.data}).then($scope.highlightScript)},$scope._deleteScriptFromServer=function(requestDataObj){return $http({method:"DELETE",url:INSTANCE_URL+"/api/v2/system/event_script/"+requestDataObj.name,params:requestDataObj.params}).then($scope.highlightScript)},$scope._isVariablePath=function(path){return"-1"!=path.path.indexOf("}")},$scope._resetAll=function(){if(0===$scope.menuPathArr.length||!$scope.menuBack())return!1;for(;0!==$scope.menuPathArr.length;)$scope._menuBack();return!0},$scope.highlightEvent=function(evt){var flag=!1;for(var item in evt)"boolean"!=typeof evt[item]&&(evt[item].$$isHighlighted=$scope.highlightCurrentServiceObj({paths:evt[item]}),evt[item].$$isHighlighted&&(flag=!0));return flag},$scope._setService=function(name,eventObj){return $scope.menuPathArr=angular.copy([name]),$scope.currentServiceObj={name:name,paths:eventObj},$scope.highlightCurrentServiceObj($scope.currentServiceObj),!1},$scope.highlightCurrentServiceObj=function(currentServiceObj){var flag=!1;for(var item in currentServiceObj.paths)"boolean"!=typeof currentServiceObj.paths[item]&&(currentServiceObj.paths[item].$$isHighlighted=$scope.highlightCurrentPathObj({verbs:constructPaths(item,currentServiceObj.paths[item].verb,currentServiceObj.paths[item].parameter)}),currentServiceObj.paths[item].$$isHighlighted&&(flag=!0));return flag},$scope._loadSampleScript=function(type){var fileExt="",mode="";switch(type){case"node":fileExt="node.js",mode="javascript";break;case"php":fileExt="php",mode="php";break;case"python":fileExt="py",mode="python";break;case"v8js":fileExt="v8.js",mode="javascript"}var editor=ace.edit("ide_samples");editor.session.setMode({path:"ace/mode/"+mode,inline:!0}),editor.setOptions({readOnly:!0}),$http.get(MODSCRIPTING_EXAMPLES_PATH+"example.scripts."+fileExt).then(function(result){editor.session.setValue(result.data)},function(reject){dfNotify.error(reject)})};var constructPaths=function(name,verbList,parameter){var newEventName,newVerbList=angular.copy(verbList);return name.indexOf("{")>=0&&name.indexOf("}")>=0&&parameter&&angular.forEach(verbList,function(eventArray,verbName){angular.forEach(parameter,function(paramArray,paramName){angular.forEach(paramArray,function(itemName,itemIndex){angular.forEach(eventArray,function(eventName,eventIndex){newEventName=eventName.replace("{"+paramName+"}",itemName),newVerbList[verbName].push(newEventName)})})})}),newVerbList};$scope._setPath=function(name,pathObj){$scope.menuPathArr.push(name);var newVerbList=constructPaths(name,pathObj.verb,pathObj.parameter);$scope.currentPathObj={name:name,verbs:newVerbList},$scope.highlightCurrentPathObj($scope.currentPathObj)},$scope.highlightCurrentPathObj=function(currentPathObj){var flag=!1;for(var verb in currentPathObj.verbs)if("boolean"!=typeof currentPathObj.verbs[verb]){var exists=currentPathObj.verbs[verb].filter(function(item){return $scope.highlightedEvents.some(function(evt){return evt===item})}).length;exists&&(flag=!0,currentPathObj.verbs[verb].$$isHighlighted=!0)}return flag},$scope._setEventList=function(name,verb,verbs,events){$scope.currentPathObj.name=name,$scope.currentPathObj.events=events,$scope.currentPathObj.verb=verb,$scope.currentPathObj.verbs=verbs,name&&$scope.menuPathArr.push("["+verb.toUpperCase()+"] "+name)},$scope.isHighlightedItem=function(evt){return $scope.highlightedEvents&&$scope.highlightedEvents.filter(function(item){return item===evt}).length},$scope._setScript=function(scriptIdStr){var requestDataObj={name:scriptIdStr,params:{}};$scope._getScriptFromServer(requestDataObj).then(function(result){$scope.currentScriptObj=$scope.__getDataFromHttpResponse(result),$scope.editor.session.setValue($scope.currentScriptObj.content),$scope.menuPathArr.push(scriptIdStr)},function(reject){$scope.currentScriptObj=new ScriptObj(scriptIdStr,null,null),$scope.menuPathArr.push(scriptIdStr)})["finally"](function(){})},$scope._saveScript=function(){if(!$scope.currentScriptObj.name)return alert("Please enter a script name."),!1;$scope.currentScriptObj.content=$scope.editor.getValue()||" ";var requestDataObj={name:$scope.currentScriptObj.name,params:{},data:$scope.currentScriptObj};$scope._saveScriptToServer(requestDataObj).then(function(result){$scope.editor.session.getUndoManager().reset(),$scope.editor.session.getUndoManager().markClean(),$scope.isEditorClean=!0,$(function(){new PNotify({title:"Scripts",type:"success",text:'Script "'+$scope.currentScriptObj.name+'" saved successfully.'})})},function(reject){throw{module:"Scripts",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){})},$scope._deleteScript=function(){var requestDataObj={name:$scope.currentScriptObj.name,params:{}};$scope._deleteScriptFromServer(requestDataObj).then(function(result){$(function(){new PNotify({title:"Scripts",type:"success",text:"Script deleted successfully."})}),$scope.menuPathArr=$scope.menuPathArr.slice(0,2),$scope._setEventList($scope.cachePath.name,$scope.cachePath.verb,$scope.cachePath.verbs,$scope.cachePath.events),$scope.currentScriptObj=null,$scope.editor.session.getUndoManager().reset(),$scope.editor.session.getUndoManager().markClean()},function(reject){throw{module:"Scripts",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){})},$scope.menuOpen=!0,$scope.toggleMenu=function(){$scope._toggleMenu()},$scope.menuBack=function(){if(!$scope.isEditorClean){if(!$scope._confirmCloseScript())return!1;$scope.editor.session.getUndoManager().reset(),$scope.editor.session.getUndoManager().markClean(),$scope.isEditorClean=!0}return $scope._menuBack(),!0},$scope.updateEditor=function(scriptType){var mode="text";-1!==["nodejs","v8js"].indexOf(scriptType)?mode="javascript":scriptType&&(mode=scriptType),ace.edit("ide").session.setMode("ace/mode/"+mode)},$scope.jumpTo=function(index){$scope._jumpTo(index)},$scope._clearScriptEditor=function(){$scope.currentScriptObj=null,ace.edit("ide").session.setValue("")},$scope._confirmCloseScript=function(){return confirm("You have unsaved changes.  Close anyway?")},$scope._menuBack=function(){switch($scope.menuPathArr.length){case 0:break;case 1:$scope.menuPathArr=[],$scope.highlightEvent($scope.events);break;case 2:$scope.menuPathArr=$scope.menuPathArr.slice(0,1),$scope.highlightCurrentServiceObj($scope.currentServiceObj);break;case 3:$scope.currentPathObj.events?($scope.menuPathArr=$scope.menuPathArr.slice(0,1),$scope.setPath($scope.cachePath.name,{verb:$scope.cachePath.verbs}),$scope._clearScriptEditor()):$scope.menuPathArr=$scope.menuPathArr.slice(0,1);break;case 4:$scope._clearScriptEditor(),$scope.menuPathArr=$scope.menuPathArr.slice(0,2),$scope._setEventList($scope.cachePath.name,$scope.cachePath.verb,$scope.cachePath.verbs,$scope.cachePath.events)}},$scope._jumpTo=function(index){for(;$scope.menuPathArr.length-1!==index;)$scope.menuBack()},$scope._toggleMenu=function(){$scope.menuOpen=!scope.menuOpen},$scope.$broadcast("script:loaded:success");var watchGithubCredUser=$scope.$watch("githubModal.username",function(newValue,oldValue){return newValue?void($scope.modalError={visible:!1,message:""}):!1}),watchGithubCredPass=$scope.$watch("githubModal.password",function(newValue,oldValue){return newValue?void($scope.modalError={visible:!1,message:""}):!1}),watchGithubURL=$scope.$watch("githubModal.url",function(newValue,oldValue){if(!newValue)return!1;if($scope.modalError={visible:!1,message:""},newValue.indexOf(".js")>0||newValue.indexOf(".py")>0||newValue.indexOf(".php")>0||newValue.indexOf(".txt")>0){var url=angular.copy($scope.githubModal.url),url_params=url.substr(url.indexOf(".com/")+5),url_array=url_params.split("/"),owner=url_array[0],repo=url_array[1],github_api_url="https://api.github.com/repos/"+owner+"/"+repo;$http.get(github_api_url,{headers:{"X-DreamFactory-API-Key":void 0,"X-DreamFactory-Session-Token":void 0}}).then(function(response){$scope.githubModal["private"]=response.data["private"],$scope.modalError={visible:!1,message:""}},function(response){404===response.status&&($scope.modalError={visible:!0,message:"Error: The repository could not be found."})})}});$scope.$on("$destroy",function(e){watchGithubURL(),watchGithubCredUser(),watchGithubCredPass()})}]).directive("scriptSidebarMenu",["MODSCRIPTING_ASSET_PATH",function(MODSCRIPTING_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MODSCRIPTING_ASSET_PATH+"views/script-sidebar-menu.html",link:function(scope,elem,attrs){}}}]).directive("dfAceSamplesSelect",["INSTANCE_URL","MODSCRIPTING_ASSET_PATH","$http","$timeout",function(INSTANCE_URL,MODSCRIPTING_ASSET_PATH,$http,$timeout){return{restrict:"E",scope:{currentScript:"=?",isClean:"=?",viewer:"=?",scriptType:"=?"},templateUrl:MODSCRIPTING_ASSET_PATH+"views/df-ace-samples.html",link:function(scope,elem,attrs){scope.viewer=ace.edit("ide_samples")}}}]).directive("dfAceEditorScripting",["INSTANCE_URL","MODSCRIPTING_ASSET_PATH","$http","$timeout",function(INSTANCE_URL,MODSCRIPTING_ASSET_PATH,$http,$timeout){return{restrict:"E",scope:{currentEditObj:"=?",isClean:"=?",editor:"=?",scriptType:"=?"},templateUrl:MODSCRIPTING_ASSET_PATH+"views/df-ace-editor.html",link:function(scope,elem,attrs){scope.backupDoc="",scope._setEditorInactive=function(stateBool){stateBool?(scope.editor.setOptions({readOnly:!0,highlightActiveLine:!1,highlightGutterLine:!1}),scope.editor.renderer.$cursorLayer.element.style.opacity=0):(scope.editor.setOptions({readOnly:!1,highlightActiveLine:!0,highlightGutterLine:!0}),scope.editor.renderer.$cursorLayer.element.style.opacity=100)},scope._loadEditor=function(contents,mode,inactive){inactive=inactive||!1,scope.editor=ace.edit("ide"),mode=mode===!0?"json":scope.scriptType&&-1!==["nodejs","v8js"].indexOf(scope.scriptType)?"javascript":scope.scriptType?scope.scriptType:"text",scope.editor.session.setMode("ace/mode/"+mode),scope.backupDoc=angular.copy(contents),scope._setEditorInactive(inactive),scope.editor.session.setValue(contents),scope.editor.focus(),scope.editor.on("input",function(){scope.$apply(function(){scope.isClean=scope.editor.session.getUndoManager().isClean()})}),scope.editor.on("blur",function(){scope.$apply(function(){try{scope.currentEditObj=scope.editor.getValue()}catch(e){}})})};var watchCurrentEditObj=scope.$watch("currentEditObj",function(newValue,oldValue){return"samples"===newValue?!1:null===!newValue||void 0===newValue?(scope._loadEditor("",!1,!1),!1):void scope._loadEditor(newValue,!1,!1)});scope.$on("$destroy",function(e){watchCurrentEditObj(),scope.editor.destroy()})}}}]),angular.module("dfProfile",["ngRoute","dfUtility","dfUserManagement","dfApplication"]).constant("MOD_PROFILE_ROUTER_PATH","/profile").constant("MOD_PROFILE_ASSET_PATH","admin_components/adf-profile/").config(["$routeProvider","MOD_PROFILE_ROUTER_PATH","MOD_PROFILE_ASSET_PATH",function($routeProvider,MOD_PROFILE_ROUTER_PATH,MOD_PROFILE_ASSET_PATH){$routeProvider.when(MOD_PROFILE_ROUTER_PATH,{templateUrl:MOD_PROFILE_ASSET_PATH+"views/main.html",controller:"ProfileCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkProfileRoute:["dfApplicationData","SystemConfigDataService","$location","dfNotify",function(dfApplicationData,SystemConfigDataService,$location,dfNotify){var currentUser=dfApplicationData.getCurrentUser(),sysConfig=SystemConfigDataService.getSystemConfig(),messageOptions={};return!currentUser&&sysConfig.allow_guest_user?(messageOptions={module:"DreamFactory Profile Module",type:"warn",provider:"dreamfactory",message:"Profile not available for guest users."},dfNotify.warn(messageOptions),void $location.url("/launchpad")):void(currentUser||sysConfig.allow_guest_user||$location.url("/login"))}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("ProfileCtrl",["$scope","UserDataService","dfApplicationData",function($scope,UserDataService,dfApplicationData){$scope.currentUser=UserDataService.getCurrentUser(),dfApplicationData.loadApi(["admin"]),$scope.$parent.title="",$scope.links=[{name:"edit-profile",label:"Profile",path:"edit-profile"}]}]).directive("dfEditProfile",["MOD_PROFILE_ASSET_PATH","INSTANCE_URL","dfNotify","dfApplicationData","UserDataService","dfObjectService","$http","$cookies","$cookieStore","SystemConfigDataService",function(MOD_APPS_ASSET_PATH,INSTANCE_URL,dfNotify,dfApplicationData,UserDataService,dfObjectService,$http,$cookies,$cookieStore,SystemConfigDataService){return{restrict:"E",scope:{},templateUrl:MOD_APPS_ASSET_PATH+"views/df-edit-profile.html",link:function(scope,elem,attrs){var User=function(userData){return(userData.adldap||userData.oauth_provider)&&(angular.element("#set-password-section").hide(),angular.element("#set-security-question-section").hide()),{__dfUI:{},record:angular.copy(userData),recordCopy:angular.copy(userData)}},Password=function(){return{reset:!0,login:!1,old_password:null,new_password:null}};scope.user=null,scope.password=null,scope.bitnami_demo=SystemConfigDataService.getSystemConfig().platform.bitnami_demo,scope.apps=dfApplicationData.getApiData("app"),scope.updateUser=function(){scope._updateUser()},scope._getUserProfileFromServer=function(){return $http({method:"GET",url:INSTANCE_URL+"/api/v2/user/profile"})},scope._updateUserToServer=function(requestDataObj){return $http({method:"PUT",url:INSTANCE_URL+"/api/v2/user/profile",data:requestDataObj.data})},scope._updateUsers=function(update){return update.url=INSTANCE_URL+"/api/v2/system/admin/profile",dfApplicationData.updateApiData("admin",update).$promise},scope._updateUserPasswordToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/user/password",params:requestDataObj.params,data:requestDataObj.data})},scope._updateAdminPasswordToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL+"/api/v2/system/admin/password",params:requestDataObj.params,data:requestDataObj.data})},scope._updateUser=function(){if(UserDataService.getCurrentUser().is_sys_admin){var admindata=scope.user.record;admindata.id=UserDataService.getCurrentUser().id;var update={params:{fields:"*"},data:admindata};if(scope._updateUsers(update).then(function(result){var session_token=result.session_token||result.data&&result.data.session_token;if(session_token){$http.defaults.headers.common["X-DreamFactory-Session-Token"]=session_token,$cookies.PHPSESSID=session_token;var existingUser=UserDataService.getCurrentUser();existingUser.session_token=session_token,existingUser.session_id=session_token,$cookieStore.put("CurrentUserObj",existingUser)}var messageOptions={module:"Profile",type:"success",provider:"dreamfactory",message:"Profile updated successfully."};scope.setQuestion=!1,dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Profile",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}),scope.user.record.hasOwnProperty("security_question")&&delete scope.user.record.security_question,scope.user.record.hasOwnProperty("security_answer")&&delete scope.user.record.security_answer,UserDataService.setCurrentUser(dfObjectService.mergeObjects(scope.user.record,UserDataService.getCurrentUser())),scope.setPassword){var requestDataObj2={params:{reset:scope.password.reset,login:scope.password.login},data:{old_password:scope.password.old_password,new_password:scope.password.new_password}};scope._updateAdminPasswordToServer(requestDataObj2).then(function(result){var messageOptions={module:"Profile",type:"success",provider:"dreamfactory",message:"Password updated successfully."};dfNotify.success(messageOptions),scope.setPassword=!1},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}}else{var requestDataObj1={data:scope.user.record};if(scope._updateUserToServer(requestDataObj1).then(function(result){var session_token=result.session_token||result.data.session_token;if(session_token){$http.defaults.headers.common["X-DreamFactory-Session-Token"]=session_token,$cookies.PHPSESSID=session_token;var existingUser=UserDataService.getCurrentUser();existingUser.session_token=session_token,existingUser.session_id=session_token,$cookieStore.put("CurrentUserObj",existingUser)}var messageOptions={module:"Profile",type:"success",provider:"dreamfactory",message:"Profile updated successfully."};scope.setQuestion=!1,dfNotify.success(messageOptions),scope.user.record.hasOwnProperty("security_question")&&delete scope.user.record.security_question,scope.user.record.hasOwnProperty("security_answer")&&delete scope.user.record.security_answer,UserDataService.setCurrentUser(dfObjectService.mergeObjects(scope.user.record,UserDataService.getCurrentUser()))},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}),scope.setPassword){var requestDataObj2={params:{reset:scope.password.reset,login:scope.password.login},data:{old_password:scope.password.old_password,new_password:scope.password.new_password}};scope._updateUserPasswordToServer(requestDataObj2).then(function(result){var messageOptions={module:"Profile",type:"success",provider:"dreamfactory",message:"Password updated successfully."};dfNotify.success(messageOptions),scope.setPassword=!1},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}}};var watchCurrentUser=scope.$watch("user",function(newValue,oldValue){null===newValue&&scope._getUserProfileFromServer().then(function(result){scope.user=new User(result.data)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions),scope.user="error"})}),watchSetPassword=scope.$watch("setPassword",function(n,o){n?(scope.updatePassword=!0,scope.password=new Password):scope.password=null});scope.$on("$destroy",function(e){watchCurrentUser(),watchSetPassword()})}}}]),angular.module("dfApplication",["dfUtility","dfUserManagement","ngResource"]).run(["$q","dfApplicationData","dfApplicationPrefs","dfAvailableApis","dfSessionStorage","UserDataService","SystemConfigDataService","$location","$rootScope",function($q,dfApplicationData,dfApplicationPrefs,dfAvailableApis,dfSessionStorage,UserDataService,SystemConfigDataService,$location,$rootScope){var SystemConfig=SystemConfigDataService.getSystemConfigFromServerSync();SystemConfigDataService.setSystemConfig(SystemConfig),!dfSessionStorage.getItem("dfApplicationObj")&&UserDataService.getCurrentUser()?(dfApplicationData.initInProgress=!0,$rootScope.initInProgress=!0,dfApplicationData.initDeferred=$q.defer(),SystemConfig.is_hosted?dfApplicationData.init(dfAvailableApis.getApis().addEventApi().apis).then(function(){dfApplicationData.initDeferred.resolve(),dfApplicationData.initInProgress=!1},function(){dfApplicationData.initInProgress=!1,$location.url("/logout")}):dfApplicationData.init(dfAvailableApis.getApis().apis).then(function(){dfApplicationData.initDeferred.resolve(),dfApplicationData.initInProgress=!1},function(){dfApplicationData.initInProgress=!1,$location.url("/logout")})):dfSessionStorage.getItem("dfApplicationObj")&&UserDataService.getCurrentUser()?(dfApplicationData.initInProgress=!0,$rootScope.initInProgress=!0,dfApplicationData.initDeferred=$q.defer(),SystemConfig.is_hosted?dfApplicationData.init(dfAvailableApis.getApis().addEventApi().apis).then(function(){dfApplicationData.initDeferred.resolve(),dfApplicationData.initInProgress=!1},function(){dfApplicationData.initInProgress=!1,$location.url("/logout")}):dfApplicationData.init(dfAvailableApis.getApis().apis).then(function(){dfApplicationData.initDeferred.resolve(),dfApplicationData.initInProgress=!1},function(){dfApplicationData.initInProgress=!1,$location.url("/logout")})):dfSessionStorage.getItem("dfApplicationObj")||UserDataService.getCurrentUser()?dfSessionStorage.getItem("dfApplicationObj")&&!UserDataService.getCurrentUser()?(dfSessionStorage.removeItem("dfApplicationObj"),dfApplicationData.destroyApplicationObj(),$location.url("/login")):alert("dfAplicationData: INIT: This should not be reached"):dfApplicationData.destroyApplicationObj()}]).service("dfApplicationData",["$q","$http","INSTANCE_URL","dfObjectService","UserDataService","dfSystemData","dfSessionStorage","dfApplicationPrefs","$rootScope","$location","dfMainLoading",function($q,$http,INSTANCE_URL,dfObjectService,UserDataService,dfSystemData,dfSessionStorage,dfApplicationPrefs,$rootScope,$location,dfMainLoading){function _checkParams(options){return options.params?void angular.forEach(options.params,function(value,key){null==value&&delete options.params[key]}):void(options.params={})}function _fetchFromApi(apiName){var api={api_name:apiName,params:{}};return api.params=dfApplicationPrefs.getPrefs().data[apiName],_checkParams(api),"system"===api.api_name&&(api.api_name=""),"package"!==apiName?dfSystemData.getSystemApisFromServer(api).then(function(result){switch(apiName){case"system":dfApplicationObj.apis.system={},dfApplicationObj.apis.system.resource=result.data.resource;break;case"config":dfApplicationObj.apis.config={},dfApplicationObj.apis.config.resource=new Array(result.data);break;default:dfApplicationObj.apis[apiName]=result.data}$rootScope.$broadcast(apiName)},$q.reject):void 0}function _fetchPackageFromApi(){var api={api_name:"package",params:{}};return api.params=dfApplicationPrefs.getPrefs().data["package"],_checkParams(api),dfSystemData.getSystemApisFromServer(api).then(function(result){dfApplicationObj.apis["package"]=result.data},$q.reject)}function _asyncInit(options){var result,defer=$q.defer();if(dfApplicationObj.currentUser=UserDataService.getCurrentUser(),dfApplicationObj.currentUser.is_sys_admin){var result=_getAdminPrefs();result=angular.fromJson(result.response),null!==result&&result.hasOwnProperty("application")&&null!==result.application&&dfApplicationPrefs.setPrefs(result)}if(dfApplicationObj.currentUser.is_sys_admin){var promises=[];options.length;promises=options.map(_fetchFromApi),$q.all(promises).then(function(){dfSessionStorage.setItem("dfApplicationObj",angular.toJson(dfApplicationObj,!0)),defer.resolve(),$rootScope.initInProgress=!1},defer.reject)}else defer.resolve();return defer.promise}function _resetApplicationObj(){dfApplicationObj={currentUser:null,apis:{}}}function _saveApiData(api,options){_checkParams(options);var params=options.params;return params.api=api,options.dontWrapData||(options.data={resource:[options.data]}),dfSystemData.resource(options).post(params,options.data,function(result){result&&result.resource&&"[object Array]"===Object.prototype.toString.call(result.resource)&&result.resource.length>0&&(result=result.resource[0]),__insertApiData(api,result)})}function _updateApiData(api,options){_checkParams(options);var params=options.params;
return params.api=api,"config"===api&&(params.id=null),dfSystemData.resource({url:options.url})[options.method||"put"](params,options.data,function(result){__updateApiData(api,result)})}function _deleteApiData(api,options){_checkParams(options);var params=options.params;return params.api=api,params.rollback=dfApplicationPrefs.getPrefs().data[api].rollback,dfSystemData.resource()["delete"](params,options.data,function(result){__deleteApiData(api,result)})}function _getDataSetFromServer(api,options){options=options||{params:{}};var defaults=dfApplicationPrefs.getPrefs().data[api];options.params=dfObjectService.mergeObjects(defaults,options.params);var params=options.params;return params.api=api,dfSystemData.resource(options).get(params,function(result){__replaceApiData(api,result)})}function _saveAdminPrefs(adminPrefs){var adminPreferences={resource:[{name:"adminPreferences",value:adminPrefs}]};return UserDataService.saveUserSetting(adminPreferences)}function _getAdminPrefs(){return UserDataService.getUserSetting("adminPreferences",!0)}function __insertApiData(api,dataObj){return dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource)&&dfApplicationObj.apis[api].resource.push(dataObj),dfApplicationObj.apis.hasOwnProperty(api)&&dfApplicationObj.apis[api].hasOwnProperty("meta")&&"[object Object]"===Object.prototype.toString.call(dfApplicationObj.apis[api].meta)&&(dfApplicationObj.apis[api].meta.hasOwnProperty("count")?dfApplicationObj.apis[api].meta.count++:dfApplicationObj.apis[api].meta.count=1),dfSessionStorage.setItem("dfApplicationObj",angular.toJson(dfApplicationObj,!0))?!0:void 0}function __updateApiData(api,dataObj){if(dataObj.resource&&(dataObj=dataObj.resource),dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource))for(var found=!1,i=0;!found&&i<=dfApplicationObj.apis[api].resource.length-1;)dataObj.id===dfApplicationObj.apis[api].resource[i].id&&(found=!0,dfApplicationObj.apis[api].resource.splice(i,1,dataObj)),i++;return dfSessionStorage.setItem("dfApplicationObj",angular.toJson(dfApplicationObj,!0))?!0:void 0}function __deleteApiData(api,result){function removeRecord(record){for(var found=!1,i=0;!found&&i<dfApplicationObj.apis[api].resource.length;)record.id===dfApplicationObj.apis[api].resource[i].id&&(found=!0,dfApplicationObj.apis[api].resource.splice(i,1)),i++}function updateCount(){dfApplicationObj.apis.hasOwnProperty(api)&&dfApplicationObj.apis[api].hasOwnProperty("meta")&&"[object Object]"===Object.prototype.toString.call(dfApplicationObj.apis[api].meta)&&dfApplicationObj.apis[api].meta.hasOwnProperty("count")&&dfApplicationObj.apis[api].meta.count--}return dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource)&&(result.hasOwnProperty("resource")?angular.forEach(result.resource,function(_record){removeRecord(_record),updateCount()}):(removeRecord(result),updateCount()),dfSessionStorage.setItem("dfApplicationObj",angular.toJson(dfApplicationObj,!0)))?!0:void 0}function __replaceApiData(api,result){return dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource)&&(dfApplicationObj.apis[api].resource=result.resource),dfSessionStorage.setItem("dfApplicationObj",angular.toJson(dfApplicationObj,!0))?!0:void 0}function _getLocation(){return $location.path()}function _systemDataExists(apiName){var appObj=dfApplicationObj;return appObj.hasOwnProperty("apis")&&appObj.apis.hasOwnProperty(apiName)?appObj.apis[apiName]:!1}function _loadApi(apis){var newApis=[];angular.forEach(apis,function(value,key){_systemDataExists(value)===!1&&this.push(value)},newApis),_asyncInit(newApis).then(function(){return!0})}var dfApplicationObj={currentUser:null,apis:{}},dfMainLoadData={numElemsToLoad:0,percentLoaded:0,loadData:{op:"Loading",module:null,percent:0}};return{initInProgress:!1,initDeferred:null,init:function(options){return options=options||[],_asyncInit(options)},getApplicationObj:function(){return dfApplicationObj},setApplicationObj:function(appObj){dfApplicationObj=appObj},setApplicationObjOverride:function(appObj){dfApplicationObj=appObj,this.updateApplicationStore()},updateApplicationStore:function(){dfSessionStorage.setItem("dfApplicationObj",angular.toJson(dfApplicationObj,!0))},destroyApplicationObj:function(){return _resetApplicationObj(),dfSessionStorage.removeItem("dfApplicationObj")?!0:void 0},getApiData:function(api,options,forceRefresh){if(options=options||null,"meta"===options&&dfApplicationObj.apis.hasOwnProperty(api)&&dfApplicationObj.apis[api].meta)return dfApplicationObj.apis[api].meta;if(forceRefresh){if(options&&options.filter){var temp=dfApplicationPrefs.getPrefs();angular.extend(temp.data.admin,options),dfApplicationPrefs.setPrefs(temp)}else{var temp=dfApplicationPrefs.getPrefs();temp.data.admin&&temp.data.admin.filter&&delete temp.data.admin.filter,dfApplicationPrefs.setPrefs(temp)}return _fetchFromApi(api)}if(dfApplicationObj.apis.hasOwnProperty(api)){if(options){var result=[];for(var key in options){switch(Object.prototype.toString.call(options[key])){case"[object String]":options[key]=options[key].split(",");break;case"[object Array]":}angular.forEach(dfApplicationObj.apis[api].resource,function(obj){angular.forEach(options[key],function(value){obj.hasOwnProperty(key)&&obj[key]===value&&result.push(obj)})})}return result}return dfApplicationObj.apis[api].resource?dfApplicationObj.apis[api].resource:dfApplicationObj.apis[api]}},saveApiData:function(api,options){return dfApplicationObj.apis.hasOwnProperty(api)?_saveApiData(api,options):void 0},updateApiData:function(api,options){return dfApplicationObj.apis.hasOwnProperty(api)?_updateApiData(api,options):void 0},deleteApiData:function(api,options){return dfApplicationObj.apis.hasOwnProperty(api)?_deleteApiData(api,options):void 0},getDataSetFromServer:function(api,options){return dfApplicationObj.apis.hasOwnProperty(api)?_getDataSetFromServer(api,options):void 0},getCurrentUser:function(){return dfApplicationObj.hasOwnProperty("currentUser")?dfApplicationObj.currentUser:void 0},saveAdminPrefs:function(adminPrefs){return _saveAdminPrefs(adminPrefs)},getAdminPrefs:function(){return _getAdminPrefs()},getMainLoadData:function(){return dfMainLoadData},getLocation:function(){return _getLocation()},getServiceComponents:function(serviceName,url,params,forceRefresh){var deferred=$q.defer(),service=this.getApiData("service",{name:serviceName})[0];if(service.components&&!forceRefresh)deferred.resolve(service.components);else{var apiUrl=url||INSTANCE_URL+"/api/v2/"+service.name+"/?as_access_list=true";$http.get(apiUrl,params||{}).success(function(result){service.components=result.resource||result,deferred.resolve(service.components),__updateApiData("service",service)})}return deferred.promise},updateServiceComponentsLocal:function(service){var dfServiceData=this.getApiData("service",{name:service.name})[0];dfServiceData.components=service.components},fetchFromApi:function(apiName){return _fetchFromApi(apiName)},fetchPackageFromApi:function(){return _fetchPackageFromApi()},systemDataExists:function(apiName){return _systemDataExists(apiName)},loadApi:function(apis){return _loadApi(apis)}}}]).service("dfSystemData",["$http","XHRHelper","INSTANCE_URL","$resource","dfObjectService",function($http,XHRHelper,INSTANCE_URL,$resource,dfObjectService){function _getServiceDataFromServerSync(requestDataObj){var xhr=XHRHelper.ajax(requestDataObj),xhr=$.ajax(requestDataObj);return 4==xhr.readyState&&200==xhr.status?angular.fromJson(xhr.responseText):4==xhr.readyState&&401===xhr.status?"Unauthorized":void 0}return{getSystemApisFromServerSync:function(api){var requestDataObj={url:"system/"+api.api_name,params:api.params};return _getServiceDataFromServerSync(requestDataObj)},getSystemApisFromServer:function(api){return $http({url:INSTANCE_URL+"/api/v2/system/"+api.api_name,method:"GET",params:api.params})},http:function(api,options){return{"delete":function(){return $http({url:INSTANCE_URL+"/api/v2/system/"+api,method:"DELETE",data:options.data})}}},resource:function(options){options=options||{};var defaults={headers:""};options=dfObjectService.mergeObjects(options,defaults);var url=options.url||INSTANCE_URL+"/api/v2/system/:api/:id",queryParams=options.queryParams||{api:"@api",id:"@id"};return $resource(url,queryParams,{get:{method:"GET",headers:options.headers},post:{method:"POST",headers:options.headers},put:{method:"PUT",headers:options.headers},patch:{method:"PATCH",headers:options.headers},"delete":{method:"DELETE",headers:options.headers}})}}}]).service("dfApplicationPrefs",[function(){var prefs={application:{notificationSystem:{success:"pnotify",error:"pnotify",warn:"pnotify"}},data:{app:{include_count:!0,limit:100,related:"role_by_role_id"},app_group:{include_count:!0,limit:100,related:"app_to_app_group_by_group_id"},role:{include_count:!0,related:"role_service_access_by_role_id,role_lookup_by_role_id",limit:100},admin:{include_count:!0,limit:20,related:"user_lookup_by_user_id"},user:{include_count:!0,limit:20,related:"user_lookup_by_user_id,user_to_app_to_role_by_user_id"},service:{include_count:!0,include_components:!0,limit:100},config:{},email_template:{},lookup:{},cors:{},event:{scriptable:!0}},sections:{app:{autoClose:!1,manageViewMode:"table"},role:{autoClose:!1,manageViewMode:"table"},admin:{autoClose:!1,manageViewMode:"table"},user:{autoClose:!1,manageViewMode:"table"},service:{autoClose:!1,manageViewMode:"table"}}};return{getPrefs:function(){return prefs},setPrefs:function(data){prefs=data}}}]).service("dfAvailableApis",[function(){return{apis:[],getApis:function(){return this},addEventApi:function(){return this}}}]).factory("httpVerbInterceptor",["$q","SystemConfigDataService",function($q,SystemConfigDataService){return{request:function(config){if(SystemConfigDataService.getSystemConfig().restricted_verbs.length<=0)return config;for(var restricted_verbs=SystemConfigDataService.getSystemConfig().restricted_verbs,i=0,currMethod=config.method;i<restricted_verbs.length;){if(currMethod===restricted_verbs[i]){config.method="POST",config.headers["X-HTTP-METHOD"]=currMethod;break}i++}return config}}}]).factory("httpWrapperInterceptor",["SystemConfigDataService",function(SystemConfigDataService){return{request:function(config){var environment=SystemConfigDataService.getSystemConfig()||{};if(!environment.config)return config;if(config.data instanceof Array&&environment.config.alway_wrap_resources){var data={};data[environment.config.resource_wrapper]=angular.copy(config.data),config.data=data}return config},response:function(response){var environment=SystemConfigDataService.getSystemConfig()||{};if("object"!=typeof response.data||!environment.config)return response;var keys=Object.keys(response.data);return environment.config.always_wrap_resources&&1===keys.length&&response.data[keys[0]]instanceof Array&&keys[0]===environment.config.resource_wrapper&&(response.data=response.data[environment.config.resource_wrapper]),response}}}]).factory("httpValidSession",["$q","$rootScope","$location","INSTANCE_URL","$injector","$cookies",function($q,$rootScope,$location,INSTANCE_URL,$injector,$cookies){var putSession=function(reject){var $http=$injector.get("$http"),UserDataService=$injector.get("UserDataService"),user=UserDataService.getCurrentUser(),deferred=$injector.get("$q").defer(),url=user.is_sys_admin?"/api/v2/system/admin/session":"/api/v2/user/session";return $http({method:"PUT",url:INSTANCE_URL+url}).then(function(result){$http.defaults.headers.common["X-DreamFactory-Session-Token"]=result.data.session_token,$cookies.PHPSESSID=$cookies.PHPSESSID===result.data.session_token?$cookies.PHPSESSID:result.data.session_token,UserDataService.setCurrentUser(result.data),retry(reject.config,deferred)},function(){refreshSession(reject,deferred)}),deferred.promise},retry=function(config,deferred){var $http=$injector.get("$http");return $http({method:config.method,url:config.url}).then(deferred.resolve,deferred.reject),deferred.promise},refreshSession=function(reject,deferred){$cookies.PHPSESSID="";var $http=$injector.get("$http");$http.defaults.headers.common["X-DreamFactory-Session-Token"]="";var UserDataService=$injector.get("UserDataService");UserDataService.unsetCurrentUser();var deferred=($injector.get("UserEventsService"),deferred||$injector.get("$q").defer());return $rootScope.$$childHead.openLoginWindow(reject),$rootScope.$on("user:login:success",function(){retry(reject.config,deferred)}),deferred.promise};return{request:function(config){return config},requestError:function(reject){return $q.reject(reject)},response:function(response){return response},responseError:function(reject){switch($location.path()){case"/login":case"/user-invite":case"/register-confirm":case"/register":case"/register-complete":break;default:if(401!==reject.status)break;if(reject.config.ignore401)break;if((401===reject.status||401===reject.data.error.code)&&-1===reject.config.url.indexOf("/session")&&$rootScope.initInProgress===!1){if("Token has expired"===reject.data.error.message||-1!==reject.config.url.indexOf("/profile"))return putSession(reject);if(-1!==reject.config.url.indexOf("/package"))break;return refreshSession(reject)}}return $q.reject(reject)}}}]).directive("dfPaginateTable",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http","dfApplicationData","dfApplicationPrefs","dfNotify",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http,dfApplicationData,dfApplicationPrefs,dfNotify){return{restrict:"E",scope:{api:"=",linkedData:"=",prepFunc:"&"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-paginate-table.html",link:function(scope,elem,attrs){scope.totalCount=dfApplicationData.getApiData(scope.api,"meta").count,scope.pagesArr=[],scope.currentPage={},scope.isInProgress=!1,scope.getPrevious=function(){return scope._isFirstPage()||scope.isInProgress?!1:void scope._getPrevious()},scope.getNext=function(){return scope._isLastPage()||scope.isInProgress?!1:void scope._getNext()},scope.getPage=function(pageObj){scope._getPage(pageObj)},scope._getDataFromServer=function(offset){return dfApplicationData.getDataSetFromServer(scope.api,{params:{offset:offset}}).$promise},scope._calcTotalPages=function(totalCount,numPerPage){return Math.ceil(totalCount/numPerPage)},scope._createPageObj=function(_pageNum){return{number:_pageNum+1,value:_pageNum,offset:_pageNum*dfApplicationPrefs.getPrefs().data[scope.api].limit,stopPropagation:!1}},scope._createPagesArr=function(_totalCount){scope.pagesArr=[];for(var i=0;_totalCount>i;i++)scope.pagesArr.push(scope._createPageObj(i))},scope._setCurrentPage=function(pageDataObj){scope.currentPage=pageDataObj},scope._getCurrentPage=function(){return!scope.currentPage&&scope.pagesArr.length>0?scope.currentPage=scope.pagesArr[0]:scope.currentPage||scope.pagesArr.length||(scope.pagesArr.push(scope._createPageObj(0)),scope.currentPage=scope.pagesArr[0]),scope.currentPage},scope._isFirstPage=function(){return 0===scope._getCurrentPage().value},scope._isLastPage=function(){return scope.currentPage.value===scope.pagesArr.length-1},scope._previousPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value-1]},scope._nextPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value+1]},scope._calcPagination=function(newValue){return scope.pagesArr=[],0==scope.totalCount?(scope.pagesArr.push(scope._createPageObj(0)),!1):void scope._createPagesArr(scope._calcTotalPages(scope.totalCount,dfApplicationPrefs.getPrefs().data[newValue].limit))},scope._getPrevious=function(){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=scope.pagesArr[scope.currentPage.value-1].offset;scope._getDataFromServer(offset).then(function(result){scope.linkedData=scope.prepFunc({dataArr:result.resource}),scope._previousPage()},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})},scope._getNext=function(){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=scope.pagesArr[scope.currentPage.value+1].offset;scope._getDataFromServer(offset).then(function(result){scope.linkedData=scope.prepFunc({dataArr:result.resource}),scope._nextPage()},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})},scope._getPage=function(pageObj){return scope.isInProgress?!1:(scope.isInProgress=!0,void scope._getDataFromServer(pageObj.offset).then(function(result){scope.linkedData=scope.prepFunc({dataArr:result.resource}),scope._setCurrentPage(pageObj)},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1}))};scope.$watch("api",function(newValue,oldValue){return newValue?(scope._calcPagination(newValue),void scope._setCurrentPage(scope.pagesArr[0])):!1});scope.$on("dfPaginate:reset:"+scope.api,function(e){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=0;scope._getDataFromServer(offset).then(function(result){scope.linkedData=scope.prepFunc({dataArr:result.resource}),scope._setCurrentPage(scope.pagesArr[0])},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})["finally"](function(){scope.isInProgress=!1})})}}}]),angular.module("dfHelp",[]).constant("MOD_HELP_ASSET_PATH","admin_components/adf-help/").directive("dfSimpleHelp",["MOD_HELP_ASSET_PATH",function(MOD_HELP_ASSET_PATH){return{restrict:"E",replace:!0,scope:{options:"=?"},templateUrl:MOD_HELP_ASSET_PATH+"views/simple-help.html",link:function(scope,elem,attrs){var helpDiv=$(elem).children(".help-box");scope.showHelp=function(){scope._showHelp()},scope.closeHelp=function(){scope._closeHelp()},scope._setVisible=function(){helpDiv.is(":hidden")&&helpDiv.show()},scope._setHidden=function(){helpDiv.is(":visible")&&helpDiv.hide()},scope._setWidth=function(){helpDiv.css({width:$(window).outerWidth()/3})},scope._showHelp=function(){return helpDiv.is(":visible")?(scope.closeHelp(),!1):(helpDiv.addClass("dfp-right-bottom"),scope._setWidth(),void scope._setVisible())},scope._closeHelp=function(){return helpDiv.is(":hidden")?!1:(helpDiv.removeClass("dfp-right-bottom"),void scope._setHidden())}}}}]).directive("dfLargeHelp",["MOD_HELP_ASSET_PATH","$compile",function(MOD_HELP_ASSET_PATH,$compile){return{restrict:"E",replace:!0,scope:{options:"="},templateUrl:MOD_HELP_ASSET_PATH+"views/df-large-help.html",link:function(scope,elem,attrs){scope.$watch("options",function(newValue,oldValue){newValue&&(newValue.hasOwnProperty("title")&&$(elem).children(".df-large-help-title").html(newValue.title),newValue.hasOwnProperty("text")&&$(elem).children(".df-large-help-text").html(newValue.text))})}}}]),angular.module("dfLaunchPad",["ngRoute","dfUtility","dfTable"]).constant("MOD_LAUNCHPAD_ROUTER_PATH","/launchpad").constant("MOD_LAUNCHPAD_ASSET_PATH","admin_components/adf-launchpad/").config(["$routeProvider","MOD_LAUNCHPAD_ROUTER_PATH","MOD_LAUNCHPAD_ASSET_PATH",function($routeProvider,MOD_LAUNCHPAD_ROUTER_PATH,MOD_LAUNCHPAD_ASSET_PATH){$routeProvider.when(MOD_LAUNCHPAD_ROUTER_PATH,{templateUrl:MOD_LAUNCHPAD_ASSET_PATH+"views/main.html",controller:"LaunchpadCtrl",resolve:{loadApps:["SystemConfigDataService","UserDataService","$location","$q","$http","INSTANCE_URL",function(SystemConfigDataService,UserDataService,$location,$q,$http,INSTANCE_URL){var defer=$q.defer(),systemConfig=SystemConfigDataService.getSystemConfig(),groupedApp=systemConfig.app_group,noGroupApp=systemConfig.no_group_app,queryString=location.search.substring(1);return queryString?void $location.url("/login"):groupedApp&&0!=groupedApp.length||noGroupApp&&0!=noGroupApp.length||UserDataService.getCurrentUser()?(UserDataService.getCurrentUser()?UserDataService.getCurrentUser()&&$http.get(INSTANCE_URL+"/api/v2/system/environment").then(function(result){defer.resolve(result.data)},function(reject){defer.reject(reject)}):defer.resolve(systemConfig),defer.promise):void $location.url("/login")}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("LaunchpadCtrl",["$scope","UserDataService","SystemConfigDataService","loadApps",function($scope,UserDataService,SystemConfigDataService,loadApps){$scope.apps=[],$scope.noAppsMsg=!1,$scope.onlyNoGroupApps=!1,$scope.noGroupTitle="Other Apps",$scope.$watch(function(){return loadApps},function(newValue,oldValue){if(newValue){if($scope.apps=[],newValue.hasOwnProperty("app_group")&&angular.forEach(newValue.app_group,function(appGroup){appGroup.app.length&&(angular.forEach(appGroup.app,function(app,index){app.url||appGroup.app.splice(index,1)}),$scope.apps.push(appGroup))}),newValue.hasOwnProperty("no_group_app")&&newValue.no_group_app.length>0){$scope.onlyNoGroupApps=0===$scope.apps.length;var temp=[];angular.forEach(newValue.no_group_app,function(app,index){app.url&&temp.push(app)}),$scope.onlyNoGroupApps?$scope.apps=temp:temp.length>0&&$scope.apps.push({name:$scope.noGroupTitle,id:"000",app:temp})}$scope.noAppsMsg=0===$scope.apps.length}},!0)}]).directive("dfAppGroup",["MOD_LAUNCHPAD_ASSET_PATH",function(MOD_LAUNCHPAD_ASSET_PATH){return{restrict:"E",scope:{appGroup:"="},replace:!0,templateUrl:MOD_LAUNCHPAD_ASSET_PATH+"views/df-app-group.html",link:function(scope,elem,attrs){}}}]).directive("dfApp",["MOD_LAUNCHPAD_ASSET_PATH","$window","dfReplaceParams",function(MOD_LAUNCHPAD_ASSET_PATH,$window,dfReplaceParams){return{restrict:"E",scope:{app:"="},replace:!0,templateUrl:MOD_LAUNCHPAD_ASSET_PATH+"views/df-app.html",link:function(scope,elem,attrs){scope.launchApp=function(app){scope._launchApp(app)},scope._launchApp=function(app){$window.open(dfReplaceParams(app.url,app.name))}}}}]),angular.module("dfWidgets",[]).constant("MOD_WIDGETS_ASSET_PATH","admin_components/adf-widgets/").directive("dfTwitter",["MOD_WIDGETS_ASSET_PATH","$http",function(MOD_WIDGETS_ASSET_PATH,$http){return{restrict:"E",scope:{},templateUrl:MOD_WIDGETS_ASSET_PATH+"views/df-twitter.html",link:function(scope,elem,attrs){}}}]).directive("dfBlog",["MOD_WIDGETS_ASSET_PATH",function(MOD_WIDGETS_ASSET_PATH){return{restrict:"E",scope:{},templateUrl:MOD_WIDGETS_ASSET_PATH+"views/df-blog.html",link:function(scope,elem,attrs){}}}]).directive("dfEvents",["MOD_WIDGETS_ASSET_PATH",function(MOD_WIDGETS_ASSET_PATH){return{restrict:"E",scope:{},templateUrl:MOD_WIDGETS_ASSET_PATH+"views/df-events.html",link:function(scope,elem,attrs){}}}]).directive("dfNews",["MOD_WIDGETS_ASSET_PATH",function(MOD_WIDGETS_ASSET_PATH){return{restrict:"E",scope:{},templateUrl:MOD_WIDGETS_ASSET_PATH+"views/df-news.html",link:function(scope,elem,attrs){}}}]),angular.module("dfSwaggerEditor",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_SWAGGER_EDITOR_ASSET_PATH","admin_components/adf-swagger-editor/").run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).directive("dfSwaggerEditorMain",["MOD_SWAGGER_EDITOR_ASSET_PATH","$timeout",function(MOD_SWAGGER_EDITOR_ASSET_PATH,$timeout){return{restrict:"E",scope:!1,templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/main.html",link:function(scope,elem,attrs){scope.swaggerFile=null,scope.$watch("service",function(newValue,oldValue){newValue&&newValue.record.hasOwnProperty("doc")&&(scope.swaggerFile=angular.copy(angular.fromJson(newValue.record.doc.content)))})}}}]).directive("dfSwaggerInfo",["MOD_SWAGGER_EDITOR_ASSET_PATH",function(MOD_SWAGGER_EDITOR_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-info.html",link:function(scope,elem,attrs){}}}]).directive("dfSwaggerProduceConsume",["MOD_SWAGGER_EDITOR_ASSET_PATH",function(MOD_SWAGGER_EDITOR_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-produce-consume.html",link:function(scope,elem,attrs){scope.produceTypes={json:{name:"application/json",label:"JSON",checked:!1},xml:{name:"application/xml",label:"XML",checked:!1},csv:{name:"application/csv",label:"CSV",checked:!1}},scope.consumeTypes={json:{name:"application/json",label:"JSON",checked:!1},xml:{name:"application/xml",label:"XML",checked:!1},csv:{name:"application/csv",label:"CSV",checked:!1}},scope._typeAddRemove=function(type,model){var i=0;if(type.checked)scope.swaggerFile[model].push(type.name);else for(;i<scope.swaggerFile[model].length;){if(scope.swaggerFile[model][i]===type.name){scope.swaggerFile[model].splice(i,1);break}i++}},scope.$watch("swaggerFile",function(newValue,oldValue){newValue&&(newValue.produces.length&&angular.forEach(newValue.produces,function(value){switch(value){case"application/json":scope.produceTypes.json.checked=!0;break;case"application/xml":scope.produceTypes.xml.checked=!0}}),newValue.consumes.length&&angular.forEach(newValue.consumes,function(value){switch(value){case"application/json":scope.consumeTypes.json.checked=!0;break;case"application/xml":scope.consumeTypes.xml.checked=!0}}))})}}}]).directive("dfSwaggerApis",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerFactory","SwaggerModels",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerFactory,SwaggerModels){return{restrict:"E",scope:{swaggerFile:"=?"},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-apis.html",link:function(scope,elem,attrs){scope.apis=[];var counter=0;scope.addApi=function(){scope._addApi()},scope._addApi=function(apiData){apiData=apiData||null;var _api=new SwaggerFactory("api",apiData);_api.__dfUI.id=counter,scope.swaggerFile.apis.push(_api.record),counter++},scope.$watch("swaggerFile",function(newValue,oldValue){newValue&&(newValue.hasOwnProperty("apis")&&(scope.apis=[],angular.forEach(newValue.apis,function(api){scope._addApi(api)})),newValue.hasOwnProperty("models")&&SwaggerModels.setModels(newValue.models))})}}}]).directive("dfSwaggerApi",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerFactory",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerFactory){return{restrict:"E",scope:{api:"="},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-api.html",link:function(scope,elem,attrs){scope.apiVisible=!1,scope.toggleApi=function(){scope._toggleApi()},scope._toggleApi=function(){scope.apiVisible=!scope.apiVisible}}}}]).directive("dfSwaggerOperations",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerFactory",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerFactory){return{restrict:"E",scope:{operationsData:"=?"},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-operations.html",link:function(scope,elem,attrs){scope.operations=[],scope.operationsVisible=!1,scope.addOperation=function(){scope._addOperation()},scope.toggleOperations=function(){scope._toggleOperations()},scope._addOperation=function(operationData){operationData=operationData||null,scope.operations.push(new SwaggerFactory("operation",operationData))},scope._toggleOperations=function(){scope.operationsVisible=!scope.operationsVisible};var watchOperationsData=scope.$watch("operationsData",function(newValue,oldValue){newValue&&(scope.operations=[],angular.forEach(newValue,function(operation){scope._addOperation(operation)}))});scope.$on("$destroy",function(e){watchOperationsData()})}}}]).directive("dfSwaggerOperation",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerModels",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerModels){return{restrict:"E",scope:{operation:"="},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-operation.html",link:function(scope,elem,attrs){scope.methods=["GET","POST","PUT","PATCH","DELETE","MERGE","OPTIONS","HEAD"],scope.models=SwaggerModels.getModels(),scope.operationVisible=!1,scope.toggleOperation=function(){scope._toggleOperation()},scope._toggleOperation=function(){scope.operationVisible=!scope.operationVisible}}}}]).directive("dfSwaggerOperationProduceConsume",["MOD_SWAGGER_EDITOR_ASSET_PATH",function(MOD_SWAGGER_EDITOR_ASSET_PATH){return{restrict:"E",scope:{operation:"=?"},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-operation-produce-consume.html",link:function(scope,elem,attrs){scope.produces=[],scope.consumes=[],scope.produceTypes={json:{name:"application/json",label:"JSON",checked:!1},xml:{name:"application/xml",label:"XML",checked:!1},csv:{name:"application/csv",label:"CSV",checked:!1}},scope.consumeTypes={json:{name:"application/json",label:"JSON",checked:!1},xml:{name:"application/xml",label:"XML",checked:!1},csv:{name:"application/csv",label:"CSV",checked:!1}},scope.$watch("operation",function(newValue,oldValue){newValue&&(newValue.hasOwnProperty("produces")&&newValue.produces.length&&angular.forEach(newValue.produces,function(value){switch(value){case"application/json":scope.produceTypes.json.checked=!0;break;case"application/xml":scope.produceTypes.xml.checked=!0}}),newValue.hasOwnProperty("consumes")&&newValue.consumes.length&&angular.forEach(newValue.consumes,function(value){switch(value){case"application/json":scope.consumeTypes.json.checked=!0;break;case"application/xml":scope.consumeTypes.xml.checked=!0}}))})}}}]).directive("dfSwaggerResponseMessages",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerFactory",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerFactory){return{restrict:"E",replace:!0,scope:{respData:"=?"},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-response-messages.html",link:function(scope,elem,attrs){scope.responseMessages=[],scope.responseMessagesVisible=!1,scope.toggleResponseMessages=function(){scope._toggleResponseMessages()},scope.addResponseMessage=function(){scope._addResponseMessage()},scope._addResponseMessage=function(responseMessageData){responseMessageData=responseMessageData||null,scope.responseMessages.push(new SwaggerFactory("response-message",responseMessageData))},scope._toggleResponseMessages=function(){scope.responseMessagesVisible=!scope.responseMessagesVisible};var watchResponseMessagesData=scope.$watch("respData",function(newValue,oldValue){newValue&&angular.forEach(newValue,function(responseMessage){scope.responseMessages=[],scope._addResponseMessage(responseMessage)})});scope.$on("$destroy",function(e){watchResponseMessagesData()})}}}]).directive("dfSwaggerResponseMessage",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerModels",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerModels){return{restrict:"E",scope:{respMessage:"="},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-response-message.html",link:function(scope,elem,attrs){}}}]).directive("dfSwaggerParameters",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerFactory",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerFactory){return{restrict:"E",scope:{parametersData:"=?"},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-parameters.html",link:function(scope,elem,attrs){scope.parameters=[],scope.parametersVisible=!1,scope.currentEditParameter=null,scope.editParameter=function(paramData){scope._editParameter(paramData)},scope.toggleParameters=function(){scope._toggleParameters()},scope.addParameter=function(){scope._addParameter()},scope._editParameter=function(paramData){scope.currentEditParameter=paramData},scope._addParameter=function(parameterData){parameterData=parameterData||null,scope.parameters.push(new SwaggerFactory("parameter",parameterData))},scope._toggleParameters=function(){scope.parametersVisible=!scope.parametersVisible};var watchParametersData=scope.$watch("parametersData",function(newValue,oldValue){newValue&&(scope.parameters=[],angular.forEach(newValue,function(parameter){scope._addParameter(parameter)}))});scope.$on("$destroy",function(e){watchParametersData()})}}}]).directive("dfSwaggerParameter",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerModels","$compile","$templateCache",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerModels,$compile,$templateCache){
return{restrict:"E",scope:{parameter:"="},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-parameter.html",link:function(scope,elem,attrs){var _types=[{record:{id:"string"}},{record:{id:"number"}},{record:{id:"integer"}},{record:{id:"boolean"}},{record:{id:"array"}},{record:{id:"file"}}];scope.types=null,scope.paramTypes=["query","path","header","form","body"],scope.collectionFormats=["csv","ssv","tsv","pipes","multi"],scope.parameterVisible=!1,scope.toggleParameter=function(){scope._toggleParameter()},scope._toggleParameter=function(){scope.parameterVisible=!scope.parameterVisible};scope.$watch("parameter.record.paramType",function(newValue,oldValue){return"body"===newValue?void(scope.types=SwaggerModels.getModels()):void(scope.types=_types)});scope.$on("$destroy",function(e){})}}}]).directive("dfSwaggerModelEditor",["MOD_SWAGGER_EDITOR_ASSET_PATH","SwaggerModels","dfNotify",function(MOD_SWAGGER_EDITOR_ASSET_PATH,SwaggerModels,dfNotify){return{restrict:"E",scope:{},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-model-editor.html",link:function(scope,elem,attrs){scope.isEditorClean=!0,scope.isEditable=!0,scope.currentEditor=null,scope.models=SwaggerModels.getModels(),scope.currentModel=null,scope.newModel=function(){scope._newModel()},scope.loadModel=function(model){scope._loadModel(model)},scope.saveModel=function(){scope._saveModel()},scope.deleteModel=function(model){dfNotify.confirm("Delete model: "+model.record.id+" ?")&&scope._deleteModel(model)},scope._newModel=function(){scope.isEditorClean?(SwaggerModels.createModel(),scope._loadModel(scope.models[scope.models.length-1])):dfNotify.confirm("You have unsaved changes that will be lost.  Continue?")&&(SwaggerModels.createModel(),scope._loadModel(scope.models[scope.models.length-1]))},scope._saveModel=function(){scope.currentModel.record=angular.fromJson(scope.currentEditor.session.getValue());var messageOptions={module:"Dreamfactory Services Module",type:"success",provider:"dreamfactory",message:scope.currentModel.id+" saved."};dfNotify.success(messageOptions)},scope._loadModel=function(model){scope.isEditorClean?scope.currentModel=model:dfNotify.confirm("You have unsaved changes that will be lost.  Continue?")&&(scope.currentModel=model)},scope._deleteModel=function(model){for(var i=0;i<scope.models.length;)scope.models[i].__dfUI.uniqueId===model.__dfUI.uniqueId&&scope.models.splice(i,1),i++}}}}]).directive("dfSwaggerFileEditor",["MOD_SWAGGER_EDITOR_ASSET_PATH","dfNotify",function(MOD_SWAGGER_EDITOR_ASSET_PATH,dfNotify){return{restrict:"E",scope:{swaggerFile:"=?"},templateUrl:MOD_SWAGGER_EDITOR_ASSET_PATH+"views/df-swagger-file-editor.html",link:function(scope,elem,attrs){scope.isEditorClean=!0,scope.isEditable=!0,scope.currentEditor=null,scope.currentFile=null,scope.saveSwaggerFile=function(){scope._saveSwaggerFile()},scope._saveSwaggerFile=function(){scope.isEditorClean?dfNotify.error("Nothing to save"):scope.swaggerFile=angular.fromJson(scope.currentEditor.session.getValue())},scope.$watch("swaggerFile",function(newValue,oldValue){newValue&&(scope.currentFile=newValue)},!0)}}}]).factory("SwaggerModels",[function(){var counter=0,Model=function(modelData){var _new={id:"NEW MODEL",properties:{}};return modelData=modelData||_new,{__dfUI:{uniqueId:counter++},record:angular.copy(modelData),recordCopy:angular.copy(modelData)}},_models=[];return{getModels:function(){return _models},setModels:function(modelDataObj){angular.forEach(modelDataObj,function(modelData){_models.push(new Model(modelData))})},getModel:function(modelIdStr){for(var i=0;i<_models.length;){if(_models[i]===modelIdStr)return _models[i];i++}return!1},createModel:function(modelData){_models.push(new Model(modelData))},removeModel:function(modelIdStr){for(var i=0;i<_models.length;){if(_models[i]===modelIdStr)return void _models.splice(i,1);i++}return!1}}}]).factory("SwaggerFactory",[function(){return function(type,data){var Api=function(apiData){var _new={path:"NEW API",descriptions:null,operations:[]};return apiData=apiData||_new,{__dfUI:{id:null},record:angular.copy(apiData),recordCopy:angular.copy(apiData)}},Operation=function(operationData){var _new={method:"GET",summary:null,nickname:"NEW OPERATION",produces:[],consumes:[],notes:null,type:null,event_name:[],responseMessages:[]};return operationData=operationData||_new,{__dfUI:{id:null},record:angular.copy(operationData),recordCopy:angular.copy(operationData)}},ResponseMessage=function(responseMessageData){var _new={code:null,message:null};return responseMessageData=responseMessageData||_new,{__dfUI:{},record:angular.copy(responseMessageData),recordCopy:angular.copy(responseMessageData)}},Parameter=function(paramsData){var _new={name:"NEW PARAM",description:null,allowMultiple:!1,type:"string",format:null,paramType:"query",required:!1,"default":null};return paramsData=paramsData||_new,{record:angular.copy(paramsData),recordCopy:angular.copy(paramsData)}};switch(type){case"api":return new Api(data);case"operation":return new Operation(data);case"response-message":return new ResponseMessage(data);case"parameter":return new Parameter(data)}}}]),angular.module("dfApiDocs",["ngRoute","dfUtility"]).constant("MOD_APIDOCS_ROUTER_PATH","/apidocs").constant("MOD_APIDOCS_ASSET_PATH","admin_components/adf-apidocs/").config(["$routeProvider","MOD_APIDOCS_ROUTER_PATH","MOD_APIDOCS_ASSET_PATH",function($routeProvider,MOD_APIDOCS_ROUTER_PATH,MOD_APIDOCS_ASSET_PATH){$routeProvider.when(MOD_APIDOCS_ROUTER_PATH,{templateUrl:MOD_APIDOCS_ASSET_PATH+"views/main.html",controller:"ApiDocsCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("ApiDocsCtrl",["$scope","INSTANCE_URL","dfApplicationData",function($scope,INSTANCE_URL,dfApplicationData){$scope.$parent.title="API Docs",$scope.links=[{name:"apidocs",label:"View",path:"apidocs"}]}]).directive("swagger",["MOD_APIDOCS_ASSET_PATH","$window","$location",function(MOD_APIDOCS_ASSET_PATH,$window,$location){return{restrict:"E",scope:{},templateUrl:MOD_APIDOCS_ASSET_PATH+"views/swagger.html",link:function(scope,elem,attrs){scope.server=$location.protocol()+"://"+$location.host(),$location.port()?scope.server+=":"+$location.port()+"/df-swagger-ui/dist/index.html":scope.server+="/df-swagger-ui/dist/index.html",scope.$broadcast("apidocs:loaded")}}}]),angular.module("dfFileManager",["ngRoute","dfUtility"]).constant("MOD_FILE_MANAGER_ROUTER_PATH","/file-manager").constant("MOD_FILE_MANAGER_ASSET_PATH","admin_components/adf-file-manager/").config(["$routeProvider","MOD_FILE_MANAGER_ROUTER_PATH","MOD_FILE_MANAGER_ASSET_PATH",function($routeProvider,MOD_FILE_MANAGER_ROUTER_PATH,MOD_FILE_MANAGER_ASSET_PATH){$routeProvider.when(MOD_FILE_MANAGER_ROUTER_PATH,{templateUrl:MOD_FILE_MANAGER_ASSET_PATH+"views/main.html",controller:"FileCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("FileCtrl",["$scope","INSTANCE_URL","dfApplicationData",function($scope,INSTANCE_URL,dfApplicationData){$scope.$parent.title="Files",$scope.links=[{name:"manage-files",label:"Manage",path:"manage-files"}]}]).directive("dfFileManager",["MOD_FILE_MANAGER_ASSET_PATH","INSTANCE_URL",function(MOD_FILE_MANAGER_ASSET_PATH,INSTANCE_URL){return{restrict:"E",scope:!1,templateUrl:MOD_FILE_MANAGER_ASSET_PATH+"views/df-file-manager.html",link:function(scope,elem,attrs){$("#root-file-manager iframe").attr("src",INSTANCE_URL+"/filemanager/index.html?path=/&allowroot=true").show(),scope.$broadcast("filemanager:loaded")}}}]),angular.module("dfPackageManager",["ngRoute","dfUtility"]).constant("MOD_PACKAGE_MANAGER_ROUTER_PATH","/package-manager").constant("MOD_PACKAGE_MANAGER_ASSET_PATH","admin_components/adf-package-manager/").config(["$routeProvider","MOD_PACKAGE_MANAGER_ROUTER_PATH","MOD_PACKAGE_MANAGER_ASSET_PATH",function($routeProvider,MOD_PACKAGE_MANAGER_ROUTER_PATH,MOD_PACKAGE_MANAGER_ASSET_PATH){$routeProvider.when(MOD_PACKAGE_MANAGER_ROUTER_PATH,{templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/main.html",controller:"PackageCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).directive("modalShow",function($parse){return{restrict:"A",link:function(scope,element,attrs){scope.showModal=function(visible,elem){elem||(elem=element),visible?$(elem).modal("show"):$(elem).modal("hide")},scope.$watch(attrs.modalShow,function(newValue,oldValue){scope.showModal(newValue,attrs.$$element)}),$(element).bind("hide.bs.modal",function(){$parse(attrs.modalShow).assign(scope,!1),scope.$$phase||scope.$root.$$phase||scope.$apply()})}}}).directive("tabs",function(){return{restrict:"E",transclude:!0,scope:{},controller:["$scope",function($scope){var panes=$scope.panes=[];$scope.select=function(pane){angular.forEach(panes,function(pane){pane.selected=!1}),pane.selected=!0},this.addPane=function(pane){0==panes.length&&$scope.select(pane),panes.push(pane)}}],template:'<div class="tabbable"><ul class="nav nav-tabs"><li ng-repeat="pane in panes" ng-class="{active:pane.selected}"><a href="" ng-click="select(pane)">{{pane.title}}</a></li></ul><div class="tab-content" ng-transclude></div></div>',replace:!0}}).directive("pane",function(){return{require:"^tabs",restrict:"E",transclude:!0,scope:{title:"@"},link:function(scope,element,attrs,tabsCtrl){tabsCtrl.addPane(scope)},template:'<div class="tab-pane" ng-class="{active: selected}" ng-transclude></div>',replace:!0}}).controller("PackageCtrl",["$scope","INSTANCE_URL","dfApplicationData",function($scope,INSTANCE_URL,dfApplicationData){$scope.$parent.title="Packages",dfApplicationData.loadApi(["environment","package","service_type","service","role","app","admin","user"]),$scope.links=[{name:"manage-packages",label:"Manage",path:"manage-packages"}],$scope.dfLargeHelp={packageManager:{title:"Packages Overview",text:"Import and export users, apps, files, database schemas and more."},packageExport:{title:"",text:"<b>To create a DreamFactory package export file, follow these instructions.</b><br/><ul><li>Use the UI below to build a list of items to export.</li><li>You should enter a password if you'd like exported user passwords and service credentials to be encrypted. This password will be required if you decide to import this package file later.</li><li>Select a file service to store the exported zip file. Folder name is optional.</li><li>Click the Export button to save the zip file to the file storage location you selected.</li></ul>"}}}]).directive("file",function(){return{scope:{file:"="},link:function(scope,el,attrs){el.bind("change",function(event){var file=event.target.files[0];scope.file=file?file:void 0,scope.$apply()})}}}).directive("dfImportPackage",["MOD_PACKAGE_MANAGER_ASSET_PATH","INSTANCE_URL","UserDataService","dfApplicationData","dfAvailableApis","dfNotify","$timeout","$http",function(MOD_PACKAGE_MANAGER_ASSET_PATH,INSTANCE_URL,UserDataService,dfApplicationData,dfAvailableApis,dfNotify,$timeout,$http){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-import-package.html",link:function(scope,elem,attrs){scope.packageImportPassword="",scope.importPackageFile=function(){if(void 0!==scope.file){var currentUser=UserDataService.getCurrentUser();$http({method:"POST",url:INSTANCE_URL+"/api/v2/system/package?password="+scope.packageImportPassword,headers:{"Content-Type":"multipart/form-data","X-DreamFactory-Session-Token":currentUser.session_token},data:{files:scope.file},transformRequest:function(data,headersGetter){var formData=new FormData;angular.forEach(data,function(value,key){formData.append(key,value)});var headers=headersGetter();return delete headers["Content-Type"],formData}}).success(function(data){if(data.hasOwnProperty("success")){if(1==data.success){var apis=["app","admin","user","role","service"];angular.forEach(apis,function(value,key){dfApplicationData.getApiData(value,null,!0)});var messageOptions={module:"Package Manager",provider:"dreamfactory",type:"success",message:"Package was imported successfully."};dfNotify.success(messageOptions),scope.packageImportPassword="",angular.element("input[type='file']").val(null)}if(0==data.success){var notice="";angular.forEach(data.log.notice,function(value,key){notice+="* "+value+"\n"});var msg="Package import failed.\n\nReason:\n"+notice;$timeout(function(){alert(msg)})}}}).error(function(data,status){var messageOptions={module:"Package Manager",provider:"dreamfactory",type:"error",message:data.error.message};dfNotify.error(messageOptions)}),scope.packageImportPassword=""}else{var messageOptions={module:"Package Manager",provider:"dreamfactory",type:"error",message:"No package file selected."};dfNotify.error(messageOptions)}},scope.importClear=function(){scope.packageImportPassword="",angular.element("input[type='file']").val(null)}}}}]).directive("dfViewContent",["MOD_PACKAGE_MANAGER_ASSET_PATH","dfApplicationData",function(MOD_PACKAGE_MANAGER_ASSET_PATH,dfApplicationData){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-view-content.html",link:function(scope,elem,attrs){}}}]).directive("dfSelectContent",["MOD_PACKAGE_MANAGER_ASSET_PATH","dfApplicationData","dfAvailableApis","dfNotify",function(MOD_PACKAGE_MANAGER_ASSET_PATH,dfApplicationData,dfAvailableApis,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-select-content.html",link:function(scope,elem,attrs){scope.loading=!0,scope.selectAll=!1,scope.selectType="",scope.selectName="disabled",scope.selectedNameLabel="",scope.selectedNameType="",scope.selectedNameData=[],scope.tableData=[],scope.rawPackageData={},scope.types=[];var TableData=function(tableData){return{__dfUI:{selected:!1},record:tableData}};scope.init=function(){var env=angular.copy(dfApplicationData.getApiData("environment"));scope.enablePassword=env.platform.secured_package_export;var apis=dfAvailableApis.getApis();angular.forEach(apis.apis,function(value,key){dfApplicationData.fetchFromApi(value)}),scope.types.push({name:"",label:"Loading...",group:""}),scope.selectedType=scope.types[0],dfApplicationData.fetchPackageFromApi().then(function(){scope.types=[],scope.selectName="",scope.loading=!1,scope.rawPackageData=angular.copy(dfApplicationData.getApiData("package")),angular.forEach(scope.rawPackageData.service,function(manifestValue,manifestKey){if("object"==typeof manifestValue)if("system"===manifestKey)angular.forEach(manifestValue,function(subManifestValue,subManifestKey){var _typeExists=scope.types.filter(function(obj){return"system"==obj.name});_typeExists.length||scope.types.push({name:"system",label:"System",group:"System"})});else{var _serviceTypes=angular.copy(dfApplicationData.getApiData("service_type")),_services=angular.copy(dfApplicationData.getApiData("service")),_service=_services.filter(function(obj){return obj.name==manifestKey});angular.forEach(_service,function(value,key){var type=_serviceTypes.filter(function(obj){return obj.name==value.type}),_typeObj={name:type[0].name,label:type[0].label,group:type[0].group},_typeExists=scope.types.filter(function(obj){return obj.name==_typeObj.name});_typeExists.length||scope.types.push(_typeObj)})}})})},scope.addToPackage=function(){var searchSelected=scope.selectedNameData.map(function(d){return d.__dfUI.selected});if(searchSelected.indexOf(!0)>-1&&void 0!==scope.selectedType&&void 0!==scope.selectedName){var descr=(scope.selectedType.label,scope.selectedName.charAt(0).toUpperCase()+scope.selectedName.substring(1),[]),toRemove=[],includeFiles=[];angular.forEach(scope.selectedNameData,function(value,key){scope.selectedNameData[key].__dfUI.selected===!0?(descr.push(scope.selectedNameData[key].record.display_label),scope.selectedNameData[key].record.hasOwnProperty("storage_service_id")&&includeFiles.push({storage_service_id:scope.selectedNameData[key].record.storage_service_id,storage_container:scope.selectedNameData[key].record.storage_container})):toRemove.push(key)}),toRemove.reverse(),angular.forEach(toRemove,function(value,key){scope.selectedNameData.splice(value,1)}),scope.tableData.push({type:scope.selectedType,name:scope.selectedName,data:scope.selectedNameData,descr:descr.join(",")}),"app"==scope.selectedName&&scope.addAppFiles(includeFiles),scope.names=[],scope.selectedType="",scope.selectedName="",scope.selectedNameLabel="",scope.selectedNameData=[],scope.selectAll=!1}else{var messageOptions={module:"Package Manager",provider:"dreamfactory",type:"error",message:"Nothing is selected for export."};dfNotify.error(messageOptions)}},scope.addAppFiles=function(fileObj){angular.forEach(fileObj,function(value,key){var _services=angular.copy(dfApplicationData.getApiData("service")),_service=_services.filter(function(obj){return obj.id==value.storage_service_id}),_type={group:"File",label:_service[0].label,name:_service[0].type},_data=[{__dfUI:{selected:!0},record:{display_label:value.storage_container,name:value.storage_container,value:value.storage_container}}];scope.tableData.push({type:_type,name:_service[0].name,data:_data,descr:value.storage_container})})},scope.removeRow=function(row){scope.tableData.splice(row,1)};var watchSelectedType=scope.$watch("selectedType",function(newValue,oldValue){if(newValue&&"Loading..."!==newValue.label){var _names=[];if(scope.names=[],scope.selectedName="",scope.selectedNameLabel="","System"===newValue.label)angular.forEach(scope.rawPackageData.service.system,function(manifestValue,manifestKey){_names.push(manifestKey)});else{var _serviceTypes=angular.copy(dfApplicationData.getApiData("service_type")),_services=angular.copy(dfApplicationData.getApiData("service")),_service=_serviceTypes.filter(function(obj){return obj.label==newValue.label}),_availServices=_services.filter(function(obj){return obj.type==_service[0].name});angular.forEach(_availServices,function(value,key){-1===_names.indexOf(value.name)&&_names.push(value.name)})}scope.names=_names,scope.selectedNameLabel=""}}),watchSelectedName=scope.$watch("selectedName",function(newValue,oldValue){if(newValue){var apiName="";if("System"===scope.selectedType.group){switch(newValue){case"user":apiName="email";break;case"admin":apiName="email";break;case"cors":apiName="origin";break;default:apiName="name"}scope.selectedNameData="";var dataArray=angular.copy(dfApplicationData.getApiData(newValue)),nameData=[];if("event_script"===newValue){var dataArray=angular.copy(scope.rawPackageData.service.system);angular.forEach(dataArray.event_script,function(value,key){nameData.push(new TableData({display_label:value}))})}else angular.forEach(dataArray,function(value,key){dataArray[key].display_label=dataArray[key][apiName],nameData.push(new TableData(dataArray[key]))});scope.selectedNameData=nameData,scope.selectedNameLabel="Select Item(s) to Export",scope.selectedNameType=""}else{var _serviceTypes=angular.copy(dfApplicationData.getApiData("service_type")),_service=_serviceTypes.filter(function(obj){return obj.label==scope.selectedType.label}),_type=_service[0].group;dfApplicationData.getServiceComponents(newValue).then(function(results){if("Database"==_type){var _tableNames=[],prefix="_schema/";angular.forEach(results,function(table){if(0===table.indexOf(prefix)){var name=table.slice(prefix.length);""!=name&&-1===name.indexOf("*",name.length-1)&&(name=name.slice(0,-1),_tableNames.push(new TableData({name:name,display_label:name})))}}),scope.selectedNameData=_tableNames,scope.selectedNameLabel="Select Schema(s) to Export"}if("File"==_type){var _tableNames=[];angular.forEach(results,function(value,key){if(value.indexOf("/")>0){var segments=value.split("/"),_exists=_tableNames.filter(function(obj){return obj.record.name==segments[0]});0==_exists.length&&_tableNames.push(new TableData({name:segments[0],value:segments[0],display_label:segments[0]}))}}),scope.selectedNameData=_tableNames,scope.selectedNameLabel="Select Item(s) to Export"}if("other"==_type){var _tableNames=[];angular.forEach(results,function(value,key){if(value.indexOf("/")>0){var segments=value.split("/"),_exists=_tableNames.filter(function(obj){return obj.record.folder==segments[0]});0==_exists.length&&_tableNames.push(new TableData({name:segments[0],value:segments[0],display_label:segments[0]}))}}),scope.selectedNameData=_tableNames,scope.selectedNameLabel="Select Item(s) to Export"}})}}}),watchEnvironmentData=scope.$watchCollection(function(){return dfApplicationData.getApiData("environment")},function(newValue,oldValue){newValue&&scope.init()});scope.$on("$destroy",function(e){watchEnvironmentData(),watchSelectedType(),watchSelectedName()}),scope.$watch("selectAll",function(newValue,oldValue){scope.selectedNameData&&scope.selectedNameData.forEach(function(service){service.__dfUI.selected=newValue})})}}}]).directive("dfSelectFolder",["MOD_PACKAGE_MANAGER_ASSET_PATH","dfApplicationData",function(MOD_PACKAGE_MANAGER_ASSET_PATH,dfApplicationData){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-select-folder.html",link:function(scope,elem,attrs){}}}]).directive("dfExportPackage",["INSTANCE_URL","ADMIN_API_KEY","UserDataService","dfApplicationData","dfSystemData","dfNotify","$http","$window","$timeout",function(INSTANCE_URL,ADMIN_API_KEY,UserDataService,dfApplicationData,dfSystemData,dfNotify,$http,$window,$timeout){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.selectedFolder="",scope.subFolderName="",scope.secured=!1,scope.packagePassword="";var payload={};scope.folderInit=function(){var _serviceTypes=angular.copy(dfApplicationData.getApiData("service_type")),_service=_serviceTypes.filter(function(obj){return"File"==obj.group}),searchTypes=_service.map(function(d){return d.name}),_services=angular.copy(dfApplicationData.getApiData("service")),_folderNames=[];angular.forEach(_services,function(value,key){searchTypes.indexOf(value.type)>-1&&_folderNames.push(value.name)}),scope.folders=_folderNames,scope.selectedFolder="files"},scope.exportPackage=function(){if(scope.tableData.length){scope.packagePassword.length>0&&(scope.secured=!0),payload={secured:scope.secured,password:scope.packagePassword,storage:{name:scope.selectedFolder,folder:scope.subFolderName},service:{system:{}}};var tableData=scope.tableData;angular.forEach(tableData,function(value,key){var selectedExports=[];"System"===tableData[key].type.group?(selectedExports="event_script"===tableData[key].name?tableData[key].data.map(function(d){return d.record.display_label}):tableData[key].data.map(function(d){return d.record.id}),payload.service.system[tableData[key].name]=selectedExports):"Database"===tableData[key].type.group?(selectedExports=tableData[key].data.map(function(d){return d.record.name}),payload.service[tableData[key].name]={_schema:selectedExports}):"File"===tableData[key].type.group?(selectedExports=tableData[key].data.map(function(d){return d.record.value}),payload.service[tableData[key].name]=selectedExports):(selectedExports=tableData[key].data.map(function(d){return d.record.value}),payload.service[tableData[key].name]=selectedExports)}),scope._exportPackage()}else{var messageOptions={module:"Package Manager",provider:"dreamfactory",type:"error",message:"No package content is selected."};dfNotify.error(messageOptions)}},scope._exportPackage=function(){$http({method:"POST",url:INSTANCE_URL+"/api/v2/system/package",data:payload}).then(function(response){var msg="The package has been exported.\n\nThe path to the exported package is: \n"+response.data.path+"\n";$timeout(function(){alert(msg)})},function(response){var msg="An error occurred!\n\nReason:\n"+response.data.error.message+"\n";$timeout(function(){alert(msg)})})},scope.exportClear=function(){scope.tableData=[],scope.subFolderName="",scope.packagePassword="",scope.names=[],scope.selectedType="",scope.selectedName="",scope.selectedNameLabel="",scope.selectedNameData=[],scope.selectAll=!1};var watchServiceTypeData=scope.$watchCollection(function(){return dfApplicationData.getApiData("service_type")},function(newValue,oldValue){newValue&&scope.folderInit()});scope.$on("$destroy",function(e){watchServiceTypeData()})}}}]),angular.module("dfTable",["dfUtility"]).constant("DF_TABLE_ASSET_PATH","admin_components/adf-table/").run(["$templateCache",function($templateCache){$templateCache.put("df-input-text.html",'<input type="{{templateData.type}}"  class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-ref-text.html",'<input type="{{templateData.type}}"  class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-number.html",'<input type="{{templateData.type}}" step="any" class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-int.html",'<input type="{{templateData.type}}" step="1" class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-textarea.html",'<textarea class="form-control" rows="3" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required"></textarea>'),$templateCache.put("df-input-binary.html","<p>BINARY DATA</p>"),$templateCache.put("df-input-datetime.html","<p>DATETIME</p>"),$templateCache.put("df-input-reference.html",'<div class="well"><df-table data-options="relatedOptions" data-parent-record="currentEditRecord" data-export-field="field"></df-table></div>'),$templateCache.put("df-input-checkbox.html",'<label><input type="checkbox" data-ng-model="currentEditRecord[field.name]" data-ng-checked="currentEditRecord[field.name]" data-ng-required="field.required"></label>'),$templateCache.put("df-input-bool-picklist.html",'<div class="form-group"><select class="form-control" data-ng-model="currentEditRecord[field.name]" data-ng-options="bool.value as bool.name for bool in __dfBools" data-ng-required="field.required"></select></div>'),$templateCache.put("df-input-select.html",'<select class="form-control" data-ng-model="currentEditRecord[field.name]" data-ng-options="obj[overrideFields[templateData.prop].display.value] as obj[overrideFields[templateData.prop].display.label] for obj in overrideFields[templateData.prop].records" data-ng-required="field.required" data-ng-disabled="currentEditRecord[templateData.dependent]"><option value="">-- None --</option></select>'),$templateCache.put("df-input-values-picklist.html",'<div class="row"><div class="col-xs-12 col-md-6"><div class="input-group"><input type="text" class="form-control" data-ng-model="currentEditRecord[field.name]" placeholder="Enter Value or Choose from list" data-ng-required="field.required"><div class="input-group-btn"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button><ul class="dropdown-menu pull-right df-dropdown-height"><li data-ng-click="assignValue(item)" data-ng-repeat="item in data"><a>{{item}}</a></li></ul></div><!-- /btn-group --></div><!-- /input-group --></div><!-- /.col-lg-6 --></div>'),$templateCache.put("df-input-values-only-picklist.html",'<div class="form-group"><select class="form-control" data-ng-model="currentEditRecord[field.name]" data-ng-options="item for item in data" data-ng-required="field.required"></select></div>'),$templateCache.put("df-input-date-time-picker.html",'<div class="form-group col-xs-12">\n <div class="input-group col-sm-6 col-md-4">\n<span class="input-group-btn">\n<button type="button" data-ng-disabled="!templateData.editable" class="btn btn-default btn-small" data-ng-click="open($event)"><i class="fa fa-calendar fa-fw"></i></button><button type="button" class="btn btn-default" data-ng-disabled="!templateData.editable" data-ng-click="setNow()">Now</button>\n</span>\n<input type="text" class="form-control" data-ng-disabled="!templateData.editable" data-datepicker-popup="{{format}}" data-ng-model="dt" data-is-open="opened"  data-date-disabled="disabled(date, mode)" data-ng-required="field.required" data-close-text="Close" /></div>\n<div class="col-sm-6 col-md-2">\n<timepicker style="display: inline-block" data-ng-model="mytime" data-ng-change="changed()" show-meridian="ismeridian"></timepicker>\n</div>\n</div>')}]).directive("dfTable",["DF_TABLE_ASSET_PATH","$http","$q","$filter","$compile","dfObjectService","dfTableEventService","dfTableCallbacksService",function(DF_TABLE_ASSET_PATH,$http,$q,$filter,$compile,dfObjectService,dfTableEventService,dfTableCallbacksService){return{restrict:"E",scope:{userOptions:"=options",parentRecord:"=?",exportField:"=?"},templateUrl:DF_TABLE_ASSET_PATH+"views/dreamfactory-table.html",link:function(scope,elem,attrs){scope.es=dfTableEventService,scope.defaults={service:"",table:"",url:"",normalizeData:!1,normalizeSchema:!0,autoClose:!0,params:{filter:null,limit:50,offset:0,fields:"*",include_schema:!0,include_count:!0},defaultFields:null,overrideFields:[],extendFieldTypes:[],extendData:[],extendSchema:[],relatedData:[],excludeFields:[],groupFields:[],exportValueOn:!1,allowChildTable:!1,childTableAttachPoint:null,isChildTable:!1},scope.options={},scope.disableTableBtns=!1,scope.record=null,scope.schema=null,scope.overrideFields={},scope.tableFields={onStartTotalActiveFields:0},scope.tableFieldsAll=!1,scope.tableFilterOn=!0,scope.defaultFieldsShown={},scope.numAutoSelectFields=8,scope.selectedAll=!1,scope.filterOn=!1,scope.filter={viewBy:"",prop:"",value:null},scope.order={orderBy:"",orderByReverse:!1},scope.filteredRecords=!1,scope.orderedRecords=!1,scope.activeTab=null,scope.activeView="table",scope.pagesArr=[],scope.currentPage={},scope.currentEditRecord=null,scope.extendFieldTypes={},scope.inProgress=!1,scope.count=0,scope._exportValue=null,scope.newRecord=null,scope.relatedExpand=!1,scope.extendedData={},scope.extendedSchema={},scope.excludedFields={},scope.filteredSchema=[],scope.groupedSchema=[],scope.childTableActive=!1,scope.childTableOptions={},scope.childTableParentRecord=null,scope.setTab=function(tabStr){scope._setTab(tabStr)},scope.toggleSelected=function(dataObj){return scope.childTableActive?!1:void scope._toggleSelected(dataObj);
},scope.getPrevious=function(){return scope._isFirstPage()||scope._isInProgress()?!1:void(scope._checkForUnsavedRecords(scope.record)?scope._confirmAction("You have Unsaved records.  Continue without saving?",scope._getPrevious):scope._getPrevious())},scope.getNext=function(){return scope._isLastPage()||scope._isInProgress()?!1:void(scope._checkForUnsavedRecords(scope.record)?scope._confirmAction("You have Unsaved records.  Continue without saving?",scope._getNext):scope._getNext())},scope.editRecord=function(dataObj){scope._editRecord(dataObj)},scope.createRecord=function(){scope._createRecord()},scope.saveRecords=function(){scope._saveRecords()},scope.revertRecords=function(){scope._revertRecords()},scope.deleteRecords=function(){scope._confirmAction("You are about to delete records. Continue?",scope._deleteRecords)},scope.applyFilter=function(){scope._applyFilter()},scope.removeFilter=function(){scope._removeFilter()},scope.refreshResults=function(){scope._refreshResults()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setExportValue=function(dataObj){scope._setExportValue(dataObj)},scope.toggleExpandEditor=function(){scope._toggleExpandEditor()},scope.editExportRecord=function(dataObj){scope._editExportRecord(dataObj)},scope.filterRecords=function(){scope._filterRecords()},scope.toggleAllFields=function(){scope._toggleAllFields()},scope.resetAllFields=function(){scope._resetAllFields()},scope.toggleAllRecords=function(){scope._toggleAllRecords()},scope.showChildTable=function(parentRecordObj){scope._showChildTable(parentRecordObj)},scope._addSelectedProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("selected")||(dataObj.__dfUI.selected=!1)},scope._addUnsavedProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("unsaved")||(dataObj.__dfUI.unsaved=!1)},scope._addExportProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("export")||(dataObj.__dfUI["export"]=!1)},scope._addHideProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("hide")||(dataObj.__dfUI.hide=!1)},scope._addStateProps=function(dataObj){dataObj.hasOwnProperty.__dfUI||(dataObj.__dfUI={}),scope._addSelectedProp(dataObj),scope._addUnsavedProp(dataObj),scope._addExportProp(dataObj),scope._addHideProp(dataObj)},scope._removeStateProps=function(dataObj){dataObj.hasOwnProperty.__dfUI&&delete dataObj.__dfUI},scope._toggleSelectedState=function(dataObj){dataObj.__dfUI.selected=!dataObj.__dfUI.selected},scope._toggleUnsavedState=function(dataObj){dataObj.__dfUI.unsaved=!dataObj.__dfUI.unsaved},scope._setSelectedState=function(dataObj,stateBool){dataObj.__dfUI.selected=stateBool},scope._setUnsavedState=function(dataObj,stateBool){dataObj.__dfUI.unsaved=stateBool},scope._setExportState=function(dataObj,stateBool){dataObj&&(dataObj.__dfUI["export"]=stateBool)},scope._setHideState=function(dataObj,stateBool){dataObj&&(dataObj.__dfUI.hide=stateBool)},scope._isUnsaved=function(dataObj){return dataObj.__dfUI.unsaved},scope._isSelected=function(dataObj){return dataObj.__dfUI.selected},scope._isExport=function(dataObj){return dataObj.__dfUI["export"]},scope._checkForUnsavedRecords=function(data){if(!data)return!1;var unsavedRecords=!1,i=0;do{if(i>=data.length)break;data[i].__dfUI.unsaved&&(unsavedRecords=!0),i++}while(0==unsavedRecords);return unsavedRecords},scope._checkForParams=function(){var params={};return params=scope.options.hasOwnProperty("params")?scope.options.params:scope.defaults.params},scope._getRecordsFromServer=function(requestDataObj){var params=scope._checkForParams();return requestDataObj=requestDataObj||null,requestDataObj&&(params=dfObjectService.mergeObjects(requestDataObj.params,params)),scope.options.relatedData.length>0&&(params.related=scope.options.relatedData.join(",")),$http({method:"GET",url:scope.options.url,params:params})},scope._getRecordsFromData=function(dataObj){var limit=scope._checkForParams().limit,records=[];return dataObj.hasOwnProperty("resource")?records=dataObj.resource:dataObj.hasOwnProperty("data")&&(records=dataObj.data.hasOwnProperty("resource")?dataObj.data.resource:dataObj.data.data.resource),records.length>limit?records.slice(0,limit):records},scope._getMetaFromData=function(dataObj){var meta={};return dataObj.hasOwnProperty("meta")?meta=dataObj.meta:dataObj.hasOwnProperty("data")&&(meta=dataObj.data.hasOwnProperty("meta")?dataObj.data.meta:dataObj.data.data.meta),meta},scope._getSchemaFromData=function(dataObj){return scope._getMetaFromData(dataObj).schema},scope._getCountFromMeta=function(dataObj){var count=scope._getMetaFromData(dataObj).count;return scope._setCount(count),count},scope._setCount=function(countInt){scope.count=countInt},scope._getOptionFromParams=function(keyStr){return scope._checkForParams()[keyStr]},scope._setOptionFromParams=function(keyStr,valueStr){},scope._buildField=function(fieldNameStr){console.log(fieldNameStr)},scope._createRevertCopy=function(dataObj){dataObj.__dfData={},dataObj.__dfData.revert=angular.copy(dataObj),dataObj.__dfData.revert.hasOwnProperty("_exportValue")||(dataObj.__dfData.revert._exportValue={})},scope._getRevertCopy=function(dataObj){return dataObj.__dfData.revert},scope._hasRevertCopy=function(dataObj){return dataObj.hasOwnProperty("__dfData")&&dataObj.__dfData.hasOwnProperty("revert")?!0:!1},scope._removeRevertCopy=function(dataObj){dataObj.__dfData.revert&&delete dataObj.__dfData.revert},scope._removeAllDFData=function(dataObj){dataObj.__dfData&&delete dataObj.__dfData},scope._removeAllUIData=function(dataObj){delete dataObj.__dfUI},scope._compareObjects=function(dataObj1,dataObj2){for(var key in dataObj1)if("dfUISelected"!==key&&"dfUIUnsaved"!==key&&"__dfUI"!==key&&"__dfData"!=key&&"created_date"!=key&&"last_modified_date"!=key&&"$$hashKey"!==key&&dataObj1[key]!==dataObj2[key])return null!=dataObj1[key]&&""!=dataObj1[key]||null!=dataObj2[key]&&""!=dataObj2[key]?dataObj1[key]instanceof Array&&dataObj2[key]instanceof Array&&dataObj1[key].length==dataObj2[key].length?!1:!0:!1;return!1},scope._getRecordsWithState=function(recordsDataArr,stateStr,removeDFDataBool,removeUIDataBool){var records=[];return removeDFDataBool="undefined"!=typeof removeDFDataBool?removeDFDataBool:!1,removeUIDataBool="undefined"!=typeof removeUIDataBool?removeUIDataBool:!1,angular.forEach(recordsDataArr,function(_obj){_obj.__dfUI[stateStr]&&(removeDFDataBool&&scope._removeAllDFData(_obj),removeUIDataBool&&scope._removeAllUIData(_obj),records.push(_obj))}),records},scope._saveRecordsToServer=function(recordsDataArr){if(0==recordsDataArr.length){var defer=$q.defer(),error="No records selected for save.";return defer.reject(error),defer.promise}return $http({method:"PATCH",url:scope.options.url,data:{resource:recordsDataArr}})},scope._deleteRecordsFromServer=function(recordsDataArr){if(0==recordsDataArr.length){var defer=$q.defer(),error="No records selected for delete.";return defer.reject(error),defer.promise}return $http({method:"DELETE",url:scope.options.url,data:{resource:recordsDataArr}})},scope._isInProgress=function(){return scope.inProgress},scope._setInProgress=function(stateBool){scope.inProgress=stateBool},scope._createNewRecordObj=function(){var newRecord={};return angular.forEach(scope.schema.field,function(_obj){scope.excludedFields.hasOwnProperty(_obj.name)&&scope.excludedFields[_obj.name].fields.create||(newRecord[_obj.name]=_obj["default"])}),scope._addStateProps(newRecord),newRecord},scope._setCurrentEditRecord=function(dataObj){scope.currentEditRecord=dataObj},scope._setNewRecordObj=function(){scope.newRecord=scope._createNewRecordObj()},scope._confirmAction=function(_message,_action){confirm(_message)&&_action.call()},scope._filterFormSchema=function(formNameStr){return 0==scope.excludedFields.length?!1:void angular.forEach(scope.schema.field,function(_obj){scope.excludedFields.hasOwnProperty(_obj.name)&&scope.excludedFields[_obj.name].fields[formNameStr]||scope.filteredSchema.push(_obj)})},scope._buildSchemaGroups=function(){if(0==scope.options.groupFields.length)return!1;var _schema=scope.filteredSchema.length>0?scope.filteredSchema:scope.schema.field;angular.forEach(scope.options.groupFields,function(fobj){var group={};group.name=fobj.name,group.fields=[],group.dividers=fobj.dividers,angular.forEach(_schema,function(item){angular.forEach(fobj.fields,function(field,index){item.name===field&&(group.fields[index]=item)})}),scope.groupedSchema.push(group)})},scope._checkForGroupedSchema=function(groupNameStr){0==scope.groupedSchema.length&&scope.groupedSchema.push({name:groupNameStr,fields:scope.schema.field})},scope._clearFilteredSchema=function(){scope.filteredSchema=[]},scope._clearGroupedSchema=function(){scope.groupedSchema=[]},scope._getDefaultFields=function(dataObj){return dataObj.hasOwnProperty("defaultFields")?dataObj.defaultFields:null},scope._removePrivateFields=function(dataObj){dataObj&&angular.forEach(scope.record,function(_obj){for(var _key in _obj)dataObj[_key]&&"private"==dataObj[_key]&&delete _obj[_key]})},scope._setElementActive=function(tabStr){scope.activeTab=tabStr},scope._setDisableTableBtnsState=function(stateBool){scope.disableTableBtns=stateBool},scope._createFieldsObj=function(schemaDataObj){if(scope.tableFields={onStartTotalActiveFields:0},!scope.defaultFieldsShown){var allKeys=Object.keys(schemaDataObj);return allKeys.length<scope.numAutoSelectFields&&(scope.numAutoSelectFields=allKeys.length),angular.forEach(schemaDataObj,function(value,index){if(scope.tableFields.onStartTotalActiveFields<scope.numAutoSelectFields&&index!=allKeys.length)switch(value.name){case"name":case"title":case"fname":case"lname":case"f_name":case"l_name":case"firstname":case"lastname":case"first_name":case"last_name":case"email":case"phone":scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!0,scope.tableFields.onStartTotalActiveFields++;break;default:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1}}),scope.tableFields.onStartTotalActiveFields<scope.numAutoSelectFields&&angular.forEach(scope.tableFields,function(_obj){if(scope.tableFields.onStartTotalActiveFields==scope.numAutoSelectFields)return!1;if(0==_obj.active)switch(_obj.type){case"date":case"time":case"datetime":_obj.active=!0,scope.tableFields.onStartTotalActiveFields++}}),scope.tableFields.onStartTotalActiveFields<scope.numAutoSelectFields&&angular.forEach(scope.tableFields,function(_obj){return scope.tableFields.onStartTotalActiveFields==scope.numAutoSelectFields?!1:void(0==_obj.active&&(_obj.active=!0,scope.tableFields.onStartTotalActiveFields++))}),!1}angular.forEach(schemaDataObj,function(value,index){if(scope.defaultFieldsShown.hasOwnProperty(value.name))switch(scope.defaultFieldsShown[value.name]){case!0:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!0;break;case!1:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1;break;case"private":break;default:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1}else scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1}),scope.tableFieldsAll=!1},scope._init=function(data){scope._prepareExtendedData(scope.options),scope._prepareExtendedSchema(scope.options),scope._prepareExcludedFields(scope.options),scope._prepareRecords(data)&&scope._prepareOverrideFields(scope.options),scope._prepareSchema(data),scope._prepareExtendedFieldTypes(scope.options),scope.defaultFieldsShown=scope._getDefaultFields(scope.options),scope._createFieldsObj(scope.schema.field),scope.activeTab=scope.schema.name+"-table",scope._calcPagination(data),scope.pagesArr[0].stopPropagation=!0,scope._setCurrentPage(scope.pagesArr[0])},scope._prepareRecords=function(data){return scope.record=scope._getRecordsFromData(data),scope.record?(scope._removePrivateFields(scope._getDefaultFields(scope.options)),angular.forEach(scope.record,function(_obj){scope._addStateProps(_obj),scope._addExtendedData(_obj),scope.options.exportValueOn&&scope._exportValue&&scope._checkExportValue(_obj)&&(scope._setExportState(_obj,!0),scope._exportValue=_obj)}),scope.options.normalizeData&&(scope.record=scope._normalizeData(scope.record)),!0):(scope.record=null,!1)},scope._checkExportValue=function(dataObj){return dataObj[scope.exportField.ref_field]===scope._exportValue[scope.exportField.ref_field]},scope._prepareSchema=function(data){scope.schema=scope._getSchemaFromData(data),scope.options.normalizeSchema&&scope.record.length>0&&(scope.schema=scope._normalizeSchema(scope.schema,scope.record)),angular.forEach(scope.extendedSchema,function(_obj){scope.schema.field.push(_obj)})},scope._prepareExtendedSchema=function(data){return null==data.extendSchema?!1:void angular.forEach(data.extendSchema,function(_obj){scope.extendedSchema[_obj.name]={},scope.extendedSchema[_obj.name].name=_obj.name,scope.extendedSchema[_obj.name].type=_obj.type,scope.extendedSchema[_obj.name].label=_obj.label})},scope._prepareOverrideFields=function(data){return null==data.overrideFields?!1:void angular.forEach(data.overrideFields,function(_obj){scope.overrideFields[_obj.field]={},_obj.hasOwnProperty("record")&&(scope.overrideFields[_obj.field].records=scope._getRecordsFromData(_obj.record)),scope.overrideFields[_obj.field].display=_obj.display})},scope._prepareExtendedFieldTypes=function(data){return null==data.extendFieldTypes?!1:void angular.forEach(data.extendFieldTypes,function(_obj){scope.extendFieldTypes[_obj.db_type]={};for(var _key in _obj)scope.extendFieldTypes[_obj.db_type][_key]=_obj[_key]})},scope._prepareExtendedData=function(data){return null==data.extendData?!1:void angular.forEach(data.extendData,function(_obj){scope.extendedData[_obj.name]={},scope.extendedData[_obj.name].name=_obj.name,scope.extendedData[_obj.name].value=_obj.value||null})},scope._addExtendedData=function(dataObj){angular.forEach(scope.extendedData,function(_obj){dataObj[_obj.name]=_obj.value})},scope._setActiveView=function(viewStr){scope.activeView=viewStr},scope._setExportValueToParent=function(dataObj){scope._exportValue=dataObj||null},scope._prepareExcludedFields=function(data){return null==data.extendSchema?!1:void angular.forEach(data.excludeFields,function(_obj){scope.excludedFields[_obj.name]={},scope.excludedFields[_obj.name].fields=_obj.fields})},scope._calcTotalPages=function(totalCount,numPerPage){return Math.ceil(totalCount/numPerPage)},scope._createPageObj=function(_pageNum){return{number:_pageNum+1,value:_pageNum,offset:_pageNum*scope._getOptionFromParams("limit"),stopPropagation:!1}},scope._createPagesArr=function(_totalCount){scope.pagesArr=[];for(var i=0;_totalCount>i;i++)scope.pagesArr.push(scope._createPageObj(i))},scope._setCurrentPage=function(pageDataObj){scope.currentPage=pageDataObj},scope._getCurrentPage=function(){return!scope.currentPage&&scope.pagesArr.length>0?scope.currentPage=scope.pagesArr[0]:scope.currentPage||scope.pagesArr.length||(scope.pagesArr.push(scope._createPageObj(0)),scope.currentPage=scope.pagesArr[0]),scope.currentPage},scope._isFirstPage=function(){return 0===scope._getCurrentPage().value},scope._isLastPage=function(){return scope.currentPage.value===scope.pagesArr.length-1},scope._previousPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value-1]},scope._nextPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value+1]},scope._calcPagination=function(newValue){scope.pagesArr=[];var count=scope._getCountFromMeta(newValue);return 0==count?(scope.pagesArr.push(scope._createPageObj(0)),!1):void scope._createPagesArr(scope._calcTotalPages(count,scope._getOptionFromParams("limit")))},scope._resetFilter=function(schemaDataObj){return schemaDataObj?void(scope.filter={viewBy:schemaDataObj.field[0].name||"",prop:schemaDataObj.field[0].name||"",value:null}):!1},scope._isFiltered=function(){return scope.filteredRecords},scope._createFilterParams=function(){return scope.filter.prop+' like "%'+scope.filter.value+'%"'},scope._unsetFilterInOptions=function(){scope.options.params.hasOwnProperty("filter")&&delete scope.options.params.filter},scope._setFilterInOptions=function(){return scope._checkForFilterValue()?scope.options.params.hasOwnProperty("filter")?(scope.options.params.filter=scope._createFilterParams(),!0):(scope.options.params.filter=scope._createFilterParams(),!0):!1},scope._checkForFilterValue=function(){return!!scope.filter.value},scope._resetOrder=function(schemaDataObj){return schemaDataObj?void(scope.order={orderBy:schemaDataObj.field[0].name||"",orderByReverse:!1}):!1},scope._isOrdered=function(){return scope.orderedRecords},scope._createOrderParams=function(){var orderStr=scope.order.orderBy+" ";return orderStr+=scope.order.orderByReverse?"DESC":"ASC"},scope._unsetOrderInOptions=function(){scope.options.params.hasOwnProperty("order")&&delete scope.options.params.order},scope._setOrderInOptions=function(){scope.options.params.hasOwnProperty("order")?scope.options.params.order=scope._createOrderParams():scope.options.params.order=scope._createOrderParams()},scope._setChildTableActive=function(stateBool){scope.childTableActive=stateBool},scope._setChildTableParentRecord=function(recordObj){scope.childTableParentRecord=recordObj},scope._buildChildTableOptions=function(){scope.childTableOptions={isChildTable:!0,allowChildTable:!1},scope.childTableOptions=dfObjectService.deepMergeObjects(scope.childTableOptions,angular.copy(scope.defaults))},scope._addChildTable=function(){angular.element(scope.options.childTableAttachPoint).append($compile('<df-child-table data-child-options="childTableOptions" data-parent-schema="schema" data-child-table-parent-record="childTableParentRecord"></df-child-table>')(scope))},scope._setTab=function(tabStr){scope._setElementActive(tabStr)},scope._toggleSelected=function(dataObj){scope._toggleSelectedState(dataObj)},scope._normalizeData=function(dataObj){return angular.forEach(dataObj,function(_obj){for(var _key in _obj)null==_obj[_key]&&(_obj[_key]="NULL")}),dataObj},scope._normalizeSchema=function(schemaDataObj,recordsDataArr){var normalizedSchema=[];for(var _key in schemaDataObj.field)recordsDataArr[0].hasOwnProperty(schemaDataObj.field[_key].name)&&normalizedSchema.push(schemaDataObj.field[_key]);return delete schemaDataObj.field,schemaDataObj.field=normalizedSchema,schemaDataObj},scope._getPrevious=function(){scope._previousPage()},scope._getNext=function(){scope._nextPage()},scope._editRecord=function(dataObj){scope._setCurrentEditRecord(dataObj)},scope._saveRecords=function(){scope._setInProgress(!0);var recordsToSave=scope._getRecordsWithState(scope.record,"unsaved",!0);scope._saveRecordsToServer(recordsToSave).then(function(result){angular.forEach(scope.record,function(_obj){scope._isUnsaved(_obj)&&scope._toggleUnsavedState(_obj),scope._isSelected(_obj)&&scope._toggleSelectedState(_obj),scope._hasRevertCopy(_obj)&&scope._removeRevertCopy(_obj)}),scope.$emit(scope.es.alertSuccess,{message:"Records saved."})},function(reject){throw{module:"xxDreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._revertRecords=function(){angular.forEach(scope.record,function(_obj,_index){scope._isUnsaved(_obj)&&scope._hasRevertCopy(scope.record[_index])&&(scope.record[_index]=scope._getRevertCopy(_obj))}),scope.$emit(scope.es.alertSuccess,{message:"Records reverted."})},scope._deleteRecords=function(){var recordsToDelete=scope._getRecordsWithState(scope.record,"selected");scope._deleteRecordsFromServer(recordsToDelete).then(function(result){var requestDataObj={},curPage=scope._getCurrentPage().value,curOffset=scope._getCurrentPage().offset;scope._isLastPage()&&scope.record.length===scope._getRecordsFromData(result).length&&(curOffset-=scope._getOptionFromParams("limit")),requestDataObj.params=dfObjectService.mergeObjects({offset:curOffset},scope.options.params),scope._getRecordsFromServer(requestDataObj).then(function(_result){scope.$emit(scope.es.alertSuccess,{message:"Records deleted."}),scope._prepareRecords(_result),scope._createPagesArr(scope._calcTotalPages(scope._getCountFromMeta(_result),scope._getOptionFromParams("limit"))),curPage>scope.pagesArr.length-1&&0!==curPage&&(curPage-=1,scope.pagesArr[curPage].stopPropagation=!0),scope._setCurrentPage(scope.pagesArr[curPage])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._getRecordsWithFilter=function(){var requestDataObj={};requestDataObj.params=dfObjectService.mergeObjects({filter:scope._createFilterParams()},scope.options.params),scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._init(dfObjectService.mergeObjects({data:result},scope.options))},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._refreshResults=function(checkUnsavedBool){if(checkUnsavedBool=checkUnsavedBool||!0,checkUnsavedBool&&scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return!1;var requestDataObj={};requestDataObj.params={offset:0},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result),scope._calcPagination(result),scope._setCurrentPage(scope.pagesArr[0])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._applyFilter=function(){if(scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return!1;scope._setFilterInOptions()&&(scope.filteredRecords=!0),scope._setOrderInOptions(),scope.orderedRecords=!0;var requestDataObj={};requestDataObj.params={offset:0},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result),scope._calcPagination(result),scope._setCurrentPage(scope.pagesArr[0])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._removeFilter=function(){if(scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return!1;scope._unsetFilterInOptions(),scope._unsetOrderInOptions(),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema),scope.filteredRecords=!1,scope.orderedRecords=!1;var requestDataObj={};requestDataObj.params={offset:0},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result),scope._calcPagination(result),scope._setCurrentPage(scope.pagesArr[0])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._orderOnSelect=function(fieldObj){var orderedBy=scope.order.orderBy;orderedBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._createRecord=function(){scope._setNewRecordObj()},scope._setExportValue=function(dataObj){scope._setExportValueToParent(dataObj)},scope._toggleExpandEditor=function(){scope.relatedExpand=!scope.relatedExpand},scope._editExportRecord=function(dataObj){scope.options.exportValueOn&&scope.parentRecord&&(scope.relatedExpand?scope.relatedExpand&&!scope.currentEditRecord&&scope._setCurrentEditRecord(dataObj):(scope._setCurrentEditRecord(dataObj),scope._toggleExpandEditor()))},scope._filterRecords=function(){scope.filterOn=!scope.filterOn},scope._toggleAllFields=function(){scope.tableFieldsAll=!scope.tableFieldsAll,angular.forEach(scope.tableFields,function(_obj){"[object Object]"===Object.prototype.toString.call(_obj)&&_obj.hasOwnProperty("active")&&(_obj.active=scope.tableFieldsAll)})},scope._resetAllFields=function(){scope._createFieldsObj(scope.schema.field)},scope._toggleAllRecords=function(){scope.selectedAll=!scope.selectedAll,angular.forEach(scope.record,function(_obj){scope._setSelectedState(_obj,scope.selectedAll)})},scope._showChildTable=function(parentRecordObj){return scope.childTableActive?!1:(scope._setChildTableActive(!0),scope._setChildTableParentRecord(parentRecordObj),scope._buildChildTableOptions(),scope._addChildTable(),void scope._setDisableTableBtnsState(!0))};var watchUserOptions=scope.$watchCollection("userOptions",function(newValue,oldValue){return newValue?(scope.options=dfObjectService.deepMergeObjects(newValue,scope.defaults),scope._setActiveView("table"),void dfTableCallbacksService.reset()):!1}),watchOptions=scope.$watchCollection("options",function(newValue,oldValue){if(!newValue)return!1;if(!newValue.service)return!1;if(scope.options.exportValueOn&&!scope._exportValue&&scope.parentRecord[scope.exportField.name]){var requestDataObj={};requestDataObj.params={filter:scope.exportField.ref_field+" = "+scope.parentRecord[scope.exportField.name]},scope._getRecordsFromServer(requestDataObj).then(function(result){var record=scope._getRecordsFromData(result)[0];scope._addStateProps(record),scope._exportValue=record,scope.options.params.filter&&delete scope.options.params.filter,newValue.data?(scope._init(newValue),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)):scope._getRecordsFromServer().then(function(_result){scope._init(_result),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)},function(_reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:_reject}})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})}else newValue.data?(scope._init(newValue),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)):(scope.options.params.offset=newValue.table!==oldValue.table?0:scope.options.params.offset,scope._getRecordsFromServer().then(function(_result){scope._init(_result),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)},function(_reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:_reject}}))}),watchCurrentPage=scope.$watch("currentPage",function(newValue,oldValue){if(newValue.value==oldValue.value)return!1;if(newValue.stopPropagation)return newValue.stopPropagation=!1,!1;if(scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return oldValue.stopPropagation=!0,scope._setCurrentPage(oldValue),!1;var requestDataObj={};requestDataObj.params={offset:newValue.offset},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result)},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})}),watchCurrentEditRecord=scope.$watch("currentEditRecord",function(newValue,oldValue){newValue?(scope._hasRevertCopy(newValue)||scope._createRevertCopy(newValue),scope._filterFormSchema("edit"),scope._buildSchemaGroups(),scope._checkForGroupedSchema("Edit "+scope.schema.name.charAt(0).toUpperCase()+scope.schema.name.slice(1)),scope._setActiveView("edit")):(scope._setActiveView("table"),scope._clearGroupedSchema(),scope._clearFilteredSchema())}),watchCurrentEditRecordState=scope.$watchCollection("currentEditRecord",function(newValue,oldValue){oldValue&&null==newValue&&scope._hasRevertCopy(oldValue)&&(scope._compareObjects(oldValue,oldValue.__dfData.revert)?scope._setUnsavedState(oldValue,!0):scope._setUnsavedState(oldValue,!1))}),watchParentRecord=scope.$watchCollection("parentRecord",function(newValue,oldValue){if(!newValue)return!1;if(!newValue&&!scope._exportValue)return!1;if(null==(!scope._exportValue&&newValue[scope.exportField.name]))return!1;if(!newValue[scope.exportField.name])return scope._exportValue=null,!1;if(!scope._exportValue&&newValue[scope.exportField.name]||scope._exportValue[scope.exportField.ref_field]!==newValue[scope.exportField.name]){var requestDataObj={};return requestDataObj.params={filter:scope.exportField.ref_field+" = "+newValue[scope.exportField.name],offset:0},scope._getRecordsFromServer(requestDataObj).then(function(result){var record=scope._getRecordsFromData(result);if(!record)throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:"Revert related data record not found."};scope._addStateProps(record[0]),scope._exportValue=record[0],scope.options.params.filter&&delete scope.options.params.filter},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}),!1}}),watchExportValue=scope.$watch("_exportValue",function(newValue,oldValue){if(!newValue&&!oldValue)return!1;if(!newValue&&oldValue){scope._setExportState(oldValue,!1);var found=!1,i=0;if(scope.record)for(;!found&&i<scope.record.length;){var record=scope.record[i];null===record[scope.exportField.name]&&(scope._setExportState(scope.record[i],!1),found=!0),i++}return scope.parentRecord[scope.exportField.name]=newValue,!1}if(!oldValue&&newValue){var found=!1,i=0;if(scope.record)for(;!found&&i<scope.record.length;){var record=scope.record[i];record[scope.exportField.name]===scope._exportValue[scope.exportField.name]&&(scope._setExportState(scope.record[i],!0),found=!0),i++}}if(oldValue&&newValue){scope._setExportState(oldValue,!1);var found=!1,i=0;if(scope.record)for(;!found&&i<scope.record.length;){var record=scope.record[i];record[scope.exportField.ref_field]===newValue[scope.exportField.ref_field]&&(scope._setExportState(scope.record[i],!0),found=!0),i++}if(found=!1,i=0,scope.record)for(;!found&&i<scope.record.length;){var record=scope.record[i];record[scope.exportField.ref_field]===oldValue[scope.exportField.ref_field]&&(scope._setExportState(scope.record[i],!1),found=!0),i++}}if(scope.parentRecord[scope.exportField.name]===newValue[scope.exportField.ref_field])return newValue&&scope._setExportState(newValue,!0),oldValue&&scope._setExportState(oldValue,!1),!1;for(var found=!1,i=0;!found&&i<scope.record.length;){var record=scope.record[i];record[scope.exportField.name]===scope._exportValue[scope.exportField.name]&&(scope._setExportState(scope.record[i],!1),found=!0),i++}scope.parentRecord[scope.exportField.name]=newValue[scope.exportField.ref_field],scope._setExportState(oldValue,!1),scope._setExportState(newValue,!0)}),watchNewRecord=scope.$watch("newRecord",function(newValue,oldValue){newValue?(scope._setActiveView("new"),scope._filterFormSchema("create"),scope._buildSchemaGroups(),scope._checkForGroupedSchema("Create "+scope.schema.name.charAt(0).toUpperCase()+scope.schema.name.slice(1))):(scope._setActiveView("table"),scope._clearGroupedSchema())}),watchChildTableParentRecord=scope.$watch("childTableParentRecord",function(newValue,oldValue){return newValue?void angular.forEach(scope.record,function(obj){obj.$$hashKey!=newValue.$$hashKey&&scope._setHideState(obj,!0)}):!1});scope.$on(scope.es.refreshTable,function(e){scope._refreshResults(!1)}),scope.$on(scope.es.closeChildTable,function(e){scope._setChildTableParentRecord(null),angular.forEach(scope.record,function(obj){scope._setHideState(obj,!1)}),scope._setDisableTableBtnsState(!1),scope._setChildTableActive(!1)}),scope.$on("$destroy",function(e){watchUserOptions(),watchOptions(),watchCurrentPage(),watchCurrentEditRecord(),watchCurrentEditRecordState(),watchParentRecord(),watchExportValue(),watchNewRecord(),watchChildTableParentRecord();
})}}}]).directive("editRecord",["DF_TABLE_ASSET_PATH","$http","dfObjectService","dfTableEventService","dfTableCallbacksService",function(DF_TABLE_ASSET_PATH,$http,dfObjectService,dfTableEventService,dfTableCallbacksService){return{restrict:"E",scope:!1,templateUrl:DF_TABLE_ASSET_PATH+"views/edit-record.html",link:function(scope,elem,attrs){scope.es=dfTableEventService,scope.closeRecord=function(){scope._closeEdit()},scope.revertRecord=function(){scope._revertRecord()},scope.deleteRecord=function(){scope._deleteRecord()},scope.saveRecord=function(){scope._saveRecord()},scope._closeEdit=function(){scope.currentEditRecord=null},scope._revertRecordData=function(){var recordCopy=scope._getRevertCopy(scope.currentEditRecord);for(var _key in recordCopy)scope.currentEditRecord.hasOwnProperty(_key)&&"__dfData"!==_key&&(scope.currentEditRecord[_key]=angular.copy(recordCopy[_key]))},scope._deleteRecordFromServer=function(recordDataObj){return $http({method:"POST",url:scope.options.url,data:{resource:[recordDataObj]},headers:{"X-HTTP-METHOD":"DELETE"}})},scope._saveRecordToServer=function(recordDataObj){return $http({method:"PATCH",url:scope.options.url,data:{resource:[recordDataObj]}})},scope._revertRecord=function(){scope._revertRecordData(),scope.$emit(scope.es.alertSuccess,{message:"Record reverted."})},scope._deleteRecord=function(){scope._setInProgress(!0),dfTableCallbacksService.run("onDelete","pre",scope.currentEditRecord),scope._deleteRecordFromServer(scope.currentEditRecord).then(function(result){dfTableCallbacksService.run("onDelete","post",result),scope.$emit(scope.es.alertSuccess,{message:"Record deleted."});var requestDataObj={},curPage=scope._getCurrentPage().value,curOffset=scope._getCurrentPage().offset;scope._isLastPage()&&"object"==typeof result&&1===scope.record.length&&(curOffset-=scope._getOptionFromParams("limit")),requestDataObj.params=dfObjectService.mergeObjects({offset:curOffset},scope.options.params),scope._getRecordsFromServer(requestDataObj).then(function(_result){scope._prepareRecords(_result),scope._createPagesArr(scope._calcTotalPages(scope._getCountFromMeta(_result),scope._getOptionFromParams("limit"))),curPage>scope.pagesArr.length-1&&0!==curPage&&(curPage-=1,scope.pagesArr[curPage].stopPropagation=!0),scope._setCurrentPage(scope.pagesArr[curPage]),scope._setCurrentEditRecord(null)},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._saveRecord=function(){scope._setInProgress(!0),dfTableCallbacksService.run("onUpdate","pre",scope.currentEditRecord),scope._saveRecordToServer(scope.currentEditRecord).then(function(result){scope._removeRevertCopy(scope.currentEditRecord),scope._setUnsavedState(scope.currentEditRecord,!1),dfTableCallbacksService.run("onUpdate","pre",result),scope.$emit(scope.es.alertSuccess,{message:"Record saved."}),scope.options.autoClose?scope._closeEdit():scope._createRevertCopy(scope.currentEditRecord)},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})}}}}]).directive("createRecord",["DF_TABLE_ASSET_PATH","$http","dfTableEventService","dfTableCallbacksService",function(DF_TABLE_ASSET_PATH,$http,dfTableEventService,dfTableCallbacksService){return{restrict:"E",scope:!1,templateUrl:DF_TABLE_ASSET_PATH+"views/create-record.html",link:function(scope,elem,attrs){scope.es=dfTableEventService,scope.closeCreateRecord=function(){scope._closeCreateRecord()},scope.saveNewRecord=function(){scope._saveNewRecord()},scope._setCreateNewRecordNull=function(){scope.newRecord=null},scope._saveNewRecordToServer=function(){return $http({method:"POST",url:scope.options.url,data:{resource:[scope.newRecord]},params:{fields:"*"}})},scope._closeCreateRecord=function(){scope._setCreateNewRecordNull()},scope._saveNewRecord=function(){var dataField,schemaField;for(dataField in scope.newRecord)if(scope.newRecord.hasOwnProperty(dataField)&&null===scope.newRecord[dataField])for(schemaField in scope.tableFields)scope.tableFields.hasOwnProperty(schemaField)&&dataField===schemaField&&scope.tableFields[schemaField].hasOwnProperty("allow_null")&&!scope.tableFields[schemaField].allow_null&&scope.tableFields[schemaField].hasOwnProperty("auto_increment")&&scope.tableFields[schemaField].auto_increment&&delete scope.newRecord[dataField];scope._setInProgress(!0),dfTableCallbacksService.run("onCreate","pre",scope.newRecord),scope._saveNewRecordToServer().then(function(result){dfTableCallbacksService.run("onCreate","post",result),0===scope.record.length?scope._refreshResults():scope.record.length<scope.options.params.limit?(scope._addStateProps(result.data.resource[0]),scope.record.push(result.data.resource[0])):scope.record.length*scope.pagesArr.length<scope.count+1&&scope.pagesArr.push(scope._createPageObj(scope.pagesArr.length)),scope.$emit(scope.es.alertSuccess,{message:"Record created."}),scope._closeCreateRecord()},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})["finally"](function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})}}}}]).directive("dreamfactoryBuildField",["$templateCache","$compile","dfObjectService","dfStringService","INSTANCE_URL",function($templateCache,$compile,dfObjectService,dfStringService,INSTANCE_URL){return{restrict:"A",scope:{field:"=?",service:"=?",table:"=?",extendFieldTypes:"=?",overrideFields:"=?",currentEditRecord:"=?",activeView:"=?"},link:function(scope,elem,attrs){if(scope._parseEditable=function(fieldObj){return fieldObj&&fieldObj.hasOwnProperty("validation")&&null!=fieldObj.validation?!fieldObj.validation.hasOwnProperty("api_read_only"):!0},scope.defaultFieldTypes={id:{template:"df-input-text.html",placeholder:"Id",type:"text",editable:!1},string:{template:"df-input-text.html",placeholder:"Enter String Value",type:"text",editable:!0},text:{template:"df-input-textarea.html",placeholder:"",type:"textarea",editable:!0},integer:{template:"df-input-int.html",placeholder:"Enter Integer Value",type:"number",editable:!0},"boolean":{template:"df-input-checkbox.html",placeholder:"",type:"",editable:!0},binary:{template:"df-input-binary.html",placeholder:"Enter String Value",type:"text",editable:!1},"float":{template:"df-input-number.html",placeholder:"Enter Float Value",type:"number",editable:!0},"double":{template:"df-input-number.html",placeholder:"Enter Double Value",type:"number",editable:!0},decimal:{template:"df-input-number.html",placeholder:"Enter Decimal Value",type:"number",editable:!0},datetime:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},date:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},time:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},timestamp:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},reference:{template:"df-input-reference.html",placeholder:"",type:"",editable:!1},user_id:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},user_id_on_update:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},user_id_on_create:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},timestamp_on_update:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},timestamp_on_create:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1}},scope.fieldTypes=dfObjectService.mergeObjects(scope.extendFieldTypes,scope.defaultFieldTypes),scope.overrideFields[scope.field.name]){scope.templateData={prop:scope.field.name,template:"",placeholder:scope.overrideFields[scope.field.name].display.type||"",type:scope.overrideFields[scope.field.name].display.type||"text",editable:scope.overrideFields[scope.field.name].editable,field:scope.field||"",dependent:scope.overrideFields[scope.field.name].display.dependent||!1};var type=scope.overrideFields[scope.field.name].display.type;switch(type){case"select":scope.templateData.template="df-input-select.html";break;case"checkbox":scope.templateData.template="df-input-checkbox.html";break;case"text":scope.templateData.template="df-input-text.html";break;case"textarea":scope.templateData.template="df-input-text.html";break;case"custom":scope.templateData.template=scope.overrideFields[scope.field.name].display.template;break;default:scope.templateData.template="df-input-text.html"}}else scope.templateData=scope.fieldTypes[scope.field.type],scope.templateData.editable=scope._parseEditable(scope.field);switch(scope.field.type){case"string":scope.field.hasOwnProperty("picklist")&&null!==scope.field.picklist&&scope.field.picklist.length>0&&(scope.field.hasOwnProperty("validation")&&null!==scope.field.validation&&scope.field.validation.hasOwnProperty("picklist")?scope.templateData.template="df-input-values-only-picklist.html":scope.templateData.template="df-input-values-picklist.html",scope.data=scope.field.picklist,scope.assignValue=function(itemStr){scope.currentEditRecord[scope.field.name]=itemStr});break;case"boolean":scope.templateData.template="df-input-bool-picklist.html",scope.__dfBools=[{value:!0,name:"TRUE"},{value:!1,name:"FALSE"}],scope.field.allow_null&&scope.__dfBools.unshift({value:"",name:"NULL"});break;case"reference":var systemTablePrefix="df_sys_";scope._parseSystemTableName=function(tableNameStr){var tableName=tableNameStr.substr(0,systemTablePrefix.length);return tableName===systemTablePrefix?tableNameStr.substr(systemTablePrefix.length):tableNameStr},scope._buildURL=function(serviceNameStr,tableNameStr){return INSTANCE_URL+"/api/v2/"+serviceNameStr+"/_table/"+tableNameStr},scope.relatedOptions={service:scope.service,table:scope._parseSystemTableName(scope.field.ref_table),url:scope._buildURL(scope.service,scope._parseSystemTableName(scope.field.ref_table)),params:{filter:null,limit:10,offset:0,fields:"*",include_schema:!0,include_count:!0},defaultFields:{},exportValueOn:!0},scope.relatedOptions.defaultFields[scope.field.ref_field]=!0}elem.append($compile($templateCache.get(scope.templateData.template))(scope))}}}]).directive("dfChildTable",["DF_TABLE_ASSET_PATH","INSTANCE_URL","dfObjectService","dfTableEventService",function(DF_TABLE_ASSET_PATH,INSTANCE_URL,dfObjectService,dfTableEventService){return{restrict:"E",scope:{childOptions:"=",parentSchema:"=",childTableParentRecord:"="},templateUrl:DF_TABLE_ASSET_PATH+"views/df-child-table.html",link:function(scope,elem,attrs){var systemTablePrefix="df_sys_";scope.options={},scope.childRecordsBy="",scope.service=scope.childOptions.service,scope.closeChildTable=function(){scope._closeChildTable()},scope._parseSystemTableName=function(tableNameStr){var tableName=tableNameStr.substr(0,systemTablePrefix.length);return tableName===systemTablePrefix?tableNameStr.substr(systemTablePrefix.length):tableNameStr},scope._setSystemService=function(tableNameStr){return tableNameStr.substr(0,systemTablePrefix.length)===systemTablePrefix?"system":scope.service},scope._closeChildTable=function(){scope.$emit(dfTableEventService.closeChildTable),angular.element(elem).remove()};var watchChildRecordsBy=scope.$watch("childRecordsBy",function(newValue,oldValue){if(!newValue)return!1;var options={service:scope._setSystemService(newValue.ref_table),table:newValue.ref_table,url:INSTANCE_URL+"/api/v2/"+scope._setSystemService(newValue.ref_table)+"/_table/"+scope._parseSystemTableName(newValue.ref_table),params:{filter:newValue.ref_field+" = "+scope.childTableParentRecord[newValue.field]}};scope.options=dfObjectService.deepMergeObjects(options,scope.childOptions)});scope.$on("$destroy",function(e){watchChildRecordsBy()})}}}]).service("dfTableEventService",[function(){return{alertSuccess:"alert:success",refreshTable:"refresh:table",closeChildTable:"close:childtable"}}]).service("dfTableCallbacksService",[function(){var callbacks={onCreate:{pre:[],post:[]},onDelete:{pre:[],post:[]},onUpdate:{pre:[],post:[]}};return{add:function(actionStr,processStr,method){callbacks[actionStr][processStr].push(method)},run:function(actionStr,processStr,inputRecord){return 0==callbacks[actionStr][processStr].length?!1:void angular.forEach(callbacks[actionStr][processStr],function(value,index){value.call(void 0,inputRecord)})},reset:function(){callbacks={onCreate:{pre:[],post:[]},onDelete:{pre:[],post:[]},onUpdate:{pre:[],post:[]}}}}}]),angular.module("dfHome",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_HOME_ROUTER_PATH","/home").constant("MOD_HOME_ASSET_PATH","admin_components/adf-home/").config(["$routeProvider","MOD_HOME_ROUTER_PATH","MOD_HOME_ASSET_PATH",function($routeProvider,MOD_HOME_ROUTER_PATH,MOD_HOME_ASSET_PATH){$routeProvider.when(MOD_HOME_ROUTER_PATH,{templateUrl:MOD_HOME_ASSET_PATH+"views/main.html",controller:"HomeCtrl",resolve:{checkAppObj:["dfApplicationData",function(dfApplicationData){return dfApplicationData.initInProgress?dfApplicationData.initDeferred.promise:void 0}],checkCurrentUser:["UserDataService","$location","$q",function(UserDataService,$location,$q){var currentUser=UserDataService.getCurrentUser(),defer=$q.defer();if(!currentUser)throw $location.url("/login"),{routing:!0};if(currentUser&&!currentUser.is_sys_admin)throw $location.url("/launchpad"),{routing:!0};return defer.resolve(),defer.promise}]}})}]).run(["INSTANCE_URL","$templateCache",function(INSTANCE_URL,$templateCache){}]).controller("HomeCtrl",["$q","$scope","$sce","dfApplicationData","SystemConfigDataService",function($q,$scope,$sce,dfApplicationData,SystemConfigDataService){$scope.trustUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.$parent.title="Home",dfApplicationData.loadApi(["user","admin","service","app"]);var statsQueryParams=[].join("&");$scope.links=angular.copy(SystemConfigDataService.getSystemConfig().home_links)||[{name:"welcome-home",label:"Welcome",href:"//www.dreamfactory.com/in_product_v2/welcome.html?"+statsQueryParams,attributes:[]},{name:"quickstart-home",label:"Quickstart",href:"//www.dreamfactory.com/in_product_v2/quickstart.html",attributes:[]},{name:"resource-home",label:"Resources",href:"//www.dreamfactory.com/in_product_v2/resources.html",attributes:[]},{name:"download-home",label:"Download",href:"//www.dreamfactory.com/in_product_v2/downloads.html",attributes:[]}],angular.forEach($scope.links,function(link){link.label||(link.label=link.name)})}]),angular.module("dreamfactoryApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","dfUtility","dfHome","dfSystemConfig","dfAdmins","dfUsers","dfApps","dfData","dfServices","dfRoles","dfSchema","dfUserManagement","dfScripts","dfProfile","dfApplication","dfHelp","dfLaunchPad","dfWidgets","dfSwaggerEditor","dfApiDocs","dfFileManager","dfPackageManager"]).constant("APP_VERSION","2.4.0").constant("INSTANCE_URL","").constant("ADMIN_API_KEY","6498a8ad1beb9d84d63035c5d1120c007fad6de706734db9689f8996707e0f7d").config(["$httpProvider","ADMIN_API_KEY",function($httpProvider,ADMIN_API_KEY){$httpProvider.defaults.headers.common["X-Dreamfactory-API-Key"]=ADMIN_API_KEY}]).config(["$routeProvider","$httpProvider",function($routeProvider,$httpProvider){$routeProvider.when("/login",{controller:"LoginCtrl",templateUrl:"views/login.html",resolve:{checkLoginRoute:["dfApplicationData","$location","SystemConfigDataService",function(dfApplicationData,$location,SystemConfigDataService){var systemConfig=SystemConfigDataService.getSystemConfig(),currentUser=dfApplicationData.getCurrentUser();currentUser&&currentUser.session_id&&(currentUser.is_sys_admin?"user@example.com"!==currentUser.email||systemConfig.platform.bitnami_demo?$location.url("/home"):$location.url("/profile"):$location.url("/launchpad"))}]}}).when("/logout",{templateUrl:"views/logout.html",controller:"LogoutCtrl"}).when("/register",{templateUrl:"views/register.html",controller:"RegisterCtrl",resolve:{checkRegisterRoute:["SystemConfigDataService","dfApplicationData","$location",function(SystemConfigDataService,dfApplicationData,$location){var sysConfig=SystemConfigDataService.getSystemConfig(),currentUser=dfApplicationData.getCurrentUser();return currentUser||sysConfig.authentication.allow_open_registration?!currentUser||currentUser.is_sys_admin||sysConfig.authentication.allow_open_registration?currentUser&&currentUser.is_sys_admin?void $location.url("/home"):void 0:void $location.url("/launchpad"):void $location.url("/login")}]}}).when("/register-complete",{templateUrl:"views/register-complete.html",controller:"RegisterCompleteCtrl",resolve:{checkRegisterConfirmRoute:["SystemConfigDataService","dfApplicationData","$location",function(SystemConfigDataService,dfApplicationData,$location){var sysConfig=SystemConfigDataService.getSystemConfig(),currentUser=dfApplicationData.getCurrentUser();return currentUser||sysConfig.authentication.allow_open_registration?currentUser&&currentUser.is_sys_admin?void $location.url("/home"):currentUser&&!currentUser.is_sys_admin?void $location.url("/launchpad"):void 0:void $location.url("/login")}]}}).when("/register-confirm",{templateUrl:"views/register-confirm.html",controller:"RegisterConfirmCtrl",resolve:{checkRegisterConfirmRoute:["SystemConfigDataService","dfApplicationData","$location",function(SystemConfigDataService,dfApplicationData,$location){var sysConfig=SystemConfigDataService.getSystemConfig(),currentUser=dfApplicationData.getCurrentUser();return currentUser||sysConfig.authentication.allow_open_registration?currentUser&&currentUser.is_sys_admin?void $location.url("/home"):currentUser&&!currentUser.is_sys_admin?void $location.url("/launchpad"):void 0:void $location.url("/login")}]}}).when("/reset-password",{templateUrl:"views/reset-password-email.html",controller:"ResetPasswordEmailCtrl",resolve:{checkRegisterConfirmRoute:["SystemConfigDataService","dfApplicationData","$location",function(SystemConfigDataService,dfApplicationData,$location){var currentUser=dfApplicationData.getCurrentUser();return currentUser&&currentUser.is_sys_admin?void $location.url("/home"):currentUser&&!currentUser.is_sys_admin?void $location.url("/launchpad"):void 0}]}}).when("/user-invite",{templateUrl:"views/user-invite.html",controller:"UserInviteCtrl",resolve:{checkRegisterConfirmRoute:["SystemConfigDataService","dfApplicationData","$location",function(SystemConfigDataService,dfApplicationData,$location){var currentUser=dfApplicationData.getCurrentUser();return currentUser&&currentUser.is_sys_admin?void $location.url("/home"):currentUser&&!currentUser.is_sys_admin?void $location.url("/launchpad"):void 0}]}}).otherwise({controller:"LoginCtrl",templateUrl:"views/login.html",resolve:{checkLoginRoute:["dfApplicationData","$location","SystemConfigDataService",function(dfApplicationData,$location,SystemConfigDataService){var currentUser=dfApplicationData.getCurrentUser();currentUser&&currentUser.session_id&&(currentUser.is_sys_admin?$location.url("/home"):$location.url("/launchpad"))}]}}),$httpProvider.interceptors.push("httpValidSession")}]).config(["$provide",function($provide){$provide.decorator("$exceptionHandler",["$delegate","$injector",function($delegate,$injector){return function(exception){if(exception.provider&&"dreamfactory"===exception.provider)$injector.invoke(["dfNotify",function(dfNotify){var messageOptions={module:exception.module,type:exception.type,provider:exception.provider,message:exception.exception};dfNotify.error(messageOptions)}]);else{if(!exception.routing)return $delegate(exception);$injector.invoke(["dfNotify",function(dfNotify){var messageOptions={module:"Admin Application",type:"error",provider:"dreamfactory",message:"Access to this route requires Admin role."};dfNotify.error(messageOptions)}])}}}])}]).run(["SystemConfigDataService",function(SystemConfigDataService){var SystemConfig=SystemConfigDataService.getSystemConfigFromServerSync();SystemConfigDataService.setSystemConfig(SystemConfig)}]),angular.module("dreamfactoryApp").controller("MainCtrl",["$scope","UserDataService","SystemConfigDataService","$location","$http","INSTANCE_URL","dfApplicationData","dfNotify","dfIconService",function($scope,UserDataService,SystemConfigDataService,$location,$http,INSTANCE_URL,dfApplicationData,dfNotify,dfIconService){$scope.title="",$scope.currentUser=UserDataService.getCurrentUser(),$scope.topLevelLinks=[{path:"http://www.dreamfactory.com/support",target:"_blank",label:"Support",name:"support",icon:dfIconService().support,show:!1},{path:"#/launchpad",target:null,label:"LaunchPad",name:"launchpad",icon:dfIconService().launchpad,show:!1},{path:"#/home",target:null,label:"Admin",name:"admin",icon:dfIconService().admin,show:!1},{path:"#/login",target:null,label:"Login",name:"login",icon:dfIconService().login,show:!1},{path:"#/register",target:null,label:"Register",name:"register",icon:dfIconService().register,show:!1},{path:null,target:null,label:UserDataService.getCurrentUser().name,name:"user",icon:dfIconService().user,show:!1,subLinks:[{path:"#/profile",target:null,label:"Profile",name:"profile",icon:null,show:!1},{path:"#/logout",target:null,label:"Logout",name:"logout",icon:null,show:!1}]}],$scope.topLevelNavOptions={links:$scope.topLevelLinks},$scope.componentLinks=[{name:"home",label:"Home",path:"/home"},{name:"apps",label:"Apps",path:"/apps"},{name:"admins",label:"Admins",path:"/admins"},{name:"users",label:"Users",path:"/users"},{name:"roles",label:"Roles",path:"/roles"},{name:"services",label:"Services",path:"/services"},{name:"schema",label:"Schema",path:"/schema"},{name:"data",label:"Data",path:"/data"},{name:"file-manager",label:"Files",path:"/file-manager"},{name:"scripts",label:"Scripts",path:"/scripts"},{name:"apidocs",label:"API Docs",path:"/apidocs"},{name:"config",label:"Config",path:"/config"},{name:"package-manager",label:"Packages",path:"/package-manager"}],$scope.componentNavOptions={links:$scope.componentLinks},$scope.showAdminComponentNav=!1,$scope._setActiveLinks=function(linksArr,activeLinksArr){var found,i;angular.forEach(linksArr,function(link){for(found=!1,i=0;i<activeLinksArr.length;i++)if(link.name===activeLinksArr[i]){found=!0;break}link.show=found})},$scope.setTopLevelLinkValue=function(linkName,linkProp,value){for(var i=0;i<$scope.topLevelLinks.length;i++)if($scope.topLevelLinks[i].name===linkName){$scope.topLevelLinks[i][linkProp]=value;break}},$scope.$watch("currentUser",function(newValue,oldValue){var groupedApp=SystemConfigDataService.getSystemConfig().app_group,noGroupApp=SystemConfigDataService.getSystemConfig().no_group_app;if(!newValue&&(groupedApp&&groupedApp.length>0||noGroupApp&&noGroupApp.length>0))SystemConfigDataService.getSystemConfig().authentication.allow_open_registration?$scope._setActiveLinks($scope.topLevelLinks,["support","launchpad","login","register"]):$scope._setActiveLinks($scope.topLevelLinks,["support","launchpad","login"]);else if(newValue||SystemConfigDataService.getSystemConfig().allow_guest_user)newValue.is_sys_admin?($scope.setTopLevelLinkValue("user","label",newValue.name),$scope._setActiveLinks($scope.topLevelLinks,["support","launchpad","admin","user"])):newValue.is_sys_admin||($scope.setTopLevelLinkValue("user","label",newValue.name),$scope._setActiveLinks($scope.topLevelLinks,["support","launchpad","user"]));else if(SystemConfigDataService.getSystemConfig().authentication.allow_open_registration){$scope._setActiveLinks($scope.topLevelLinks,["support","login","register"]);var params=[],UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){params.push(key+"="+UrlParams[key])}),"/reset-password"===$location.path()?$location.url("/reset-password"+params.join("&")):"/user-invite"===$location.path()?$location.url("/user-invite?"+params.join("&")):"/register-confirm"===$location.path()?$location.url("/register-confirm?"+params.join("&")):$location.url("/login")}else $scope._setActiveLinks($scope.topLevelLinks,["support","login"])}),$scope.$watch(function(){return UserDataService.getCurrentUser().name},function(n,o){n&&$scope.setTopLevelLinkValue("user","label",n)}),$scope.$on("$routeChangeSuccess",function(e){var config,path,enableLaunchpadChat=!1,enableAdminChat=!0;switch(config=SystemConfigDataService.getSystemConfig(),config&&config.hasOwnProperty("chat")&&(config.chat.hasOwnProperty("launchpad")&&(config.chat.launchpad===!0||config.chat.launchpad===!1)&&(enableLaunchpadChat=config.chat.launchpad),config.chat.hasOwnProperty("admin")&&(config.chat.admin===!0||config.chat.admin===!1)&&(enableAdminChat=config.chat.admin)),path=$location.path()){case"/launchpad":$scope.showAdminComponentNav=!1,Comm100API.showChat(enableLaunchpadChat);break;case"/profile":$scope.showAdminComponentNav=!1,Comm100API.showChat(enableAdminChat);break;case"/logout":$scope.showAdminComponentNav=!1,Comm100API.showChat(enableAdminChat);break;default:$scope.currentUser.is_sys_admin&&($scope.showAdminComponentNav=!0),Comm100API.showChat(enableAdminChat)}})}]).controller("LoginCtrl",["dfAvailableApis","$scope","$window","$location","$timeout","UserDataService","UserEventsService","dfApplicationData","dfApplicationPrefs","SystemConfigDataService","dfNotify",function(dfAvailableApis,$scope,$window,$location,$timeout,UserDataService,UserEventsService,dfApplicationData,dfApplicationPrefs,SystemConfigDataService,dfNotify){$scope.loginOptions={showTemplate:!0},$scope.$on(UserEventsService.password.passwordSetSuccess,function(e,userCredsObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Password reset successful."};dfNotify.success(messageOptions),$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginError,function(e){e.stopPropagation()}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){$scope.$parent.currentUser=userDataObj;var options={apis:[]},queryString=location.search.substring(1);if(userDataObj.is_sys_admin)$scope.loginOptions.showTemplate=!1,$timeout(function(){options.apis=dfAvailableApis.getApis().apis,SystemConfigDataService.getSystemConfig().is_hosted&&(options.apis=dfAvailableApis.getApis().addEventApi().apis),dfApplicationData.init(options.apis).then(function(){if(queryString){var uri=$location.absUrl().split("?");$window.location.href=uri[0]+"#/home"}else"user@example.com"!==userDataObj.email||SystemConfigDataService.getSystemConfig().platform.bitnami_demo?$location.url("/home"):$location.url("/profile")})},250);else if($scope.$parent.currentUser=userDataObj,dfApplicationData.init(),queryString){var uri=$location.absUrl().split("?");$window.location.href=uri[0]+"#/launchpad"}else $location.url("/launchpad")})}]).controller("LogoutCtrl",["$scope","$location","UserEventsService","dfApplicationData","SystemConfigDataService",function($scope,$location,UserEventsService,dfApplicationData,SystemConfigDataService){$scope.$on(UserEventsService.logout.logoutSuccess,function(e,userDataObj){$scope.$parent.currentUser=userDataObj,dfApplicationData.destroyApplicationObj(),$location.url("/login")})}]).controller("RegisterCtrl",["$scope","$location","UserEventsService","SystemConfigDataService",function($scope,$location,UserEventsService,SystemConfigDataService){$scope.options={confirmationRequired:SystemConfigDataService.getSystemConfig().authentication.open_reg_email_service_id},$scope.$on(UserEventsService.register.registerSuccess,function(e,userCredsObj){$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.register.registerConfirmation,function(e){$location.url("/register-complete")}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){$scope.$parent.currentUser=userDataObj,$location.url("/launchpad")}),$scope.$on(UserEventsService.login.loginError,function(e){e.stopPropagation()})}]).controller("RegisterCompleteCtrl",["$scope",function($scope){}]).controller("RegisterConfirmCtrl",["$scope","$location","dfApplicationData","UserEventsService","SystemConfigDataService","dfNotify",function($scope,$location,dfApplicationData,UserEventsService,SystemConfigDataService,dfNotify){$scope.confirmOptions={showTemplate:!0,title:"Registration Confirmation"},$scope.loginOptions={showTemplate:!1},$scope.registerLoginErrorMsg="",$scope.$on(UserEventsService.confirm.confirmationSuccess,function(e,userCredsObj){$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Registration Confirmation successful."};dfNotify.success(messageOptions),$scope.$parent.currentUser=userDataObj,dfApplicationData.init(),$location.url("/launchpad")}),$scope.$on(UserEventsService.login.loginError,function(e,errMsg){e.stopPropagation(),$scope.registerLoginErrorMsg=errMsg.data.error.message})}]).controller("ResetPasswordEmailCtrl",["$scope","$location","dfApplicationData","dfAvailableApis","UserEventsService","SystemConfigDataService","dfNotify","$timeout",function($scope,$location,dfApplicationData,dfAvailableApis,UserEventsService,SystemConfigDataService,dfNotify,$timeout){$scope.loginOptions={showTemplate:!1},$scope.resetPasswordLoginErrorMsg="",$scope.$on(UserEventsService.password.passwordSetSuccess,function(e,userCredsObj){e.stopPropagation(),$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Password reset successful."};dfNotify.success(messageOptions),$scope.$parent.currentUser=userDataObj;var options={apis:[]};userDataObj.is_sys_admin?($scope.loginOptions.showTemplate=!1,$timeout(function(){options.apis=dfAvailableApis.getApis().apis,SystemConfigDataService.getSystemConfig().is_hosted&&(options.apis=dfAvailableApis.getApis().addEventApi().apis),dfApplicationData.init(options.apis).then(function(){"user@example.com"!==userDataObj.email||SystemConfigDataService.getSystemConfig().platform.bitnami_demo?$location.url("/home"):$location.url("/profile")})},250)):($scope.$parent.currentUser=userDataObj,dfApplicationData.init(),$location.url("/launchpad"))}),$scope.$on(UserEventsService.login.loginError,function(e,errMsg){e.stopPropagation(),$scope.resetPasswordLoginErrorMsg=errMsg.data.error.message})}]).controller("UserInviteCtrl",["$scope","$location","dfApplicationData","UserEventsService","SystemConfigDataService","dfNotify",function($scope,$location,dfApplicationData,UserEventsService,SystemConfigDataService,dfNotify){$scope.confirmOptions={showTemplate:!0,title:"Invitation Confirmation"},$scope.loginOptions={showTemplate:!1},$scope.confirmLoginErrorMsg="",$scope.$on(UserEventsService.confirm.confirmationSuccess,function(e,userCredsObj){$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"User Confirmation successful."};dfNotify.success(messageOptions),$scope.$parent.currentUser=userDataObj,dfApplicationData.init(),$location.url("/launchpad")}),$scope.$on(UserEventsService.login.loginError,function(e,errMsg){e.stopPropagation(),$scope.confirmLoginErrorMsg=errMsg.data.error.message})}]);