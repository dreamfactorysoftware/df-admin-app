"use strict";angular.module("dfUserManagement",["ngRoute","ngCookies","dfUtility"]).constant("MODUSRMNGR_ROUTER_PATH","/user-management").constant("MODUSRMNGR_ASSET_PATH","admin_components/adf-user-management/").run(["$cookieStore","UserDataService","SystemConfigDataService",function($cookieStore,UserDataService,SystemConfigDataService){var cookie=$cookieStore.get("CurrentUserObj");cookie&&(UserDataService.setCurrentUser(cookie),SystemConfigDataService.getSystemConfig()||UserDataService.unsetCurrentUser())}]).controller("UserManagementCtrl",["$scope",function($scope){}]).directive("modusrmngrNavigation",["MODUSRMNGR_ASSET_PATH",function(MODUSRMNGR_ASSET_PATH){return{restrict:"E",templateUrl:MODUSRMNGR_ASSET_PATH+"views/navigation.html",link:function(scope,elem,attrs){}}}]).directive("dreamfactoryUserLogin",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","$location","UserEventsService","UserDataService","_dfObjectService","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,$location,UserEventsService,UserDataService,_dfObjectService,SystemConfigDataService){return{restrict:"E",replace:!0,scope:{options:"=?",inErrorMsg:"=?"},templateUrl:MODUSRMNGR_ASSET_PATH+"views/login.html",link:function(scope,elem,attrs){scope.es=UserEventsService.login;var defaults={showTemplate:!0};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.loginFormTitle="Login",scope.loginActive=!0,scope.creds={email:"",password:""},scope.errorMsg=scope.inErrorMsg||"",scope.successMsg="",scope.loginWaiting=!1,scope.showOAuth=!0,scope.loginForm={},scope.adldap=[],scope.loginAttribute="email",scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&(scope.systemConfig.authentication.hasOwnProperty("adldap")&&(scope.adldap=scope.systemConfig.authentication.adldap),scope.systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=scope.systemConfig.authentication.login_attribute)),scope.adldapAvailable=scope.adldap.length>0,scope.selectedService=null,scope.rememberMe=!1,"username"===scope.loginAttribute?scope.userField={icon:"fa-user",text:"Enter Username",type:"text"}:scope.userField={icon:"fa-envelope",text:"Enter Email",type:"email"},scope.rememberLogin=function(checked){scope.rememberMe=checked},scope.useAdLdapService=function(service){scope.selectedService=service,service?(scope.userField={icon:"fa-user",text:"Enter Username",type:"text"},scope.creds={username:"",password:"",service:service}):"username"===scope.loginAttribute?(scope.userField={icon:"fa-user",text:"Enter Username",type:"text"},scope.creds={username:"",password:""}):(scope.userField={icon:"fa-envelope",text:"Enter Email",type:"email"},scope.creds={email:"",password:""})},scope.getQueryParameter=function(key){key=key.replace(/[*+?^$.\[\]{}()|\\\/]/g,"\\$&");var match=window.location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)")),result=match&&decodeURIComponent(match[1].replace(/\+/g," "));return result||""};var token=scope.getQueryParameter("session_token"),oauth_code=scope.getQueryParameter("code"),oauth_state=scope.getQueryParameter("state"),oauth_token=scope.getQueryParameter("oauth_token"),baseUrl=$location.absUrl().split("?")[0];""!==token?(scope.loginWaiting=!0,scope.showOAuth=!1,scope.loginDirect=!0,$http.get(INSTANCE_URL.url+"/user/session?session_token="+token).then(function(result){UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data),scope.loginDirect=!1},function(result){window.location.href=baseUrl+"#/login",scope.loginDirect=!1})):(oauth_code&&oauth_state||oauth_token)&&(scope.loginWaiting=!0,scope.showOAuth=!1,$http.post(INSTANCE_URL.url+"/user/session?oauth_callback=true&"+location.search.substring(1)).then(function(result){UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data)})),scope.login=function(credsDataObj){scope.selectedService?(credsDataObj.username=$("#df-login-email").val(),credsDataObj.password=$("#df-login-password").val(),credsDataObj.service=scope.selectedService):"username"===scope.loginAttribute?(credsDataObj.username=$("#df-login-email").val(),credsDataObj.password=$("#df-login-password").val()):""!==credsDataObj.email&&""!==credsDataObj.password||(credsDataObj.email=$("#df-login-email").val(),credsDataObj.password=$("#df-login-password").val()),credsDataObj.remember_me=scope.rememberMe,scope._login(credsDataObj)},scope.forgotPassword=function(){scope._forgotPassword()},scope.skipLogin=function(){scope._skipLogin()},scope.showLoginForm=function(){scope._toggleForms()},scope.dismissError=function(){scope.errorMsg=""},scope.dismissSuccess=function(){scope.successMsg=""},scope._loginRequest=function(credsDataObj,admin){return admin?$http.post(INSTANCE_URL.url+"/system/admin/session",credsDataObj):$http.post(INSTANCE_URL.url+"/user/session",credsDataObj)},scope._toggleFormsState=function(){scope.loginActive=!scope.loginActive,scope.resetPasswordActive=!scope.resetPasswordActive},scope._login=function(credsDataObj){scope.loginWaiting=!0,scope._loginRequest(credsDataObj,!1).then(function(result){UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data),scope.$root.$emit(scope.es.loginSuccess,result.data)},function(reject){"401"!=reject.status&&"404"!=reject.status||scope.selectedService?(scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.loginError,reject)):(scope.loginWaiting=!0,scope._loginRequest(credsDataObj,!0).then(function(result){UserDataService.setCurrentUser(result.data),scope.$emit(scope.es.loginSuccess,result.data),scope.$root.$emit(scope.es.loginSuccess,result.data)},function(reject){scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.loginError,reject)}).finally(function(){scope.loginWaiting=!1}))}).finally(function(){scope.loginWaiting=!1})},scope._toggleForms=function(){scope._toggleFormsState()},scope._forgotPassword=function(){scope.$broadcast(UserEventsService.password.passwordResetRequest,{email:scope.creds.email})},scope._skipLogin=function(){$location.url("/services")};scope.$watch("options",function(newValue,oldValue){newValue&&newValue.hasOwnProperty("showTemplate")&&(scope.showTemplate=newValue.showTemplate)},!0);scope.$on(scope.es.loginRequest,function(e,userDataObj){scope._login(userDataObj)})}}}]).directive("dreamfactoryForgotPwordEmail",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","UserEventsService","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,UserEventsService,SystemConfigDataService){return{restrict:"E",replace:!0,scope:!1,templateUrl:MODUSRMNGR_ASSET_PATH+"views/fp-email-conf.html",link:function(scope,elem,attrs){scope.es=UserEventsService.password,scope.emailForm=!0,scope.emailError=!1,scope.securityQuestionForm=!1,scope.hidePasswordField=!1,scope.allowForeverSessions=!1,scope.loginAttribute="email",scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&(scope.systemConfig.authentication.hasOwnProperty("allow_forever_sessions")&&(scope.allowForeverSessions=scope.systemConfig.authentication.allow_forever_sessions),scope.systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=scope.systemConfig.authentication.login_attribute)),scope.resetByEmail=!0,scope.resetByUsername=!1,"username"===scope.loginAttribute&&(scope.resetByEmail=!1,scope.resetByUsername=!0),scope.sq={email:null,username:null,security_question:null,security_answer:null,new_password:null,verify_password:null},scope.identical=!0,scope.requestWaiting=!1,scope.questionWaiting=!1,scope.requestPasswordReset=function(emailDataObj){scope._requestPasswordReset(emailDataObj)},scope.securityQuestionSubmit=function(reset){scope.identical?scope._verifyPasswordLength(reset)?scope._securityQuestionSubmit(reset):scope.errorMsg="Password must be at least 5 characters.":scope.errorMsg="Passwords do not match."},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._resetPasswordRequest=function(requestDataObj,admin){return admin?$http.post(INSTANCE_URL.url+"/system/admin/password?reset=true",requestDataObj):$http.post(INSTANCE_URL.url+"/user/password?reset=true",requestDataObj)},scope._resetPasswordSQ=function(requestDataObj,admin){return admin?$http.post(INSTANCE_URL.url+"/system/admin/password?login=false",requestDataObj):$http.post(INSTANCE_URL.url+"/user/password?login=false",requestDataObj)},scope._verifyPassword=function(userDataObj){scope.identical=userDataObj.new_password===userDataObj.verify_password},scope._verifyPasswordLength=function(credsDataObj){return credsDataObj.new_password.length>=5},scope._requestPasswordReset=function(requestDataObj){requestDataObj.reset=!0,scope.requestWaiting=!0,scope._resetPasswordRequest(requestDataObj,!1).then(function(result){result.data.hasOwnProperty("security_question")?(scope.emailForm=!1,scope.securityQuestionForm=!0,scope.sq.email=requestDataObj.email,scope.sq.username=requestDataObj.username?requestDataObj.username:null,scope.sq.security_question=result.data.security_question):(scope.successMsg="A password reset email has been sent to the user's email address.",scope.$emit(scope.es.passwordResetRequestSuccess,requestDataObj.email))},function(reject){"401"==reject.status||"404"==reject.status?scope._resetPasswordRequest(requestDataObj,!0).then(function(result){result.data.hasOwnProperty("security_question")?(scope.emailForm=!1,scope.securityQuestionForm=!0,scope.sq.email=requestDataObj.email,scope.sq.security_question=result.data.security_question):(scope.successMsg="A password reset email has been sent to the user's email address.",scope.$emit(scope.es.passwordResetRequestSuccess,requestDataObj.email))},function(reject){scope.errorMsg=reject.data.error.message}).finally(function(){scope.requestWaiting=!1}):scope.errorMsg=reject.data.error.message}).finally(function(){scope.requestWaiting=!1})},scope._securityQuestionSubmit=function(reset){scope.questionWaiting=!0,scope._resetPasswordSQ(reset,!1).then(function(result){var userCredsObj={email:reset.email,username:reset.username?reset.username:null,password:reset.new_password};scope.$emit(UserEventsService.password.passwordSetSuccess,userCredsObj)},function(reject){"401"==reject.status||"404"==reject.status?scope._resetPasswordSQ(reset,!0).then(function(result){var userCredsObj={email:reset.email,password:reset.new_password};scope.$emit(UserEventsService.password.passwordSetSuccess,userCredsObj)},function(reject){scope.questionWaiting=!1,scope.errorMsg=reject.data.error.message,scope.$emit(UserEventsService.password.passwordSetError)}).finally(function(){}):(scope.questionWaiting=!1,scope.errorMsg=reject.data.error.message,scope.$emit(UserEventsService.password.passwordSetError))}).finally(function(){})},scope.$on(UserEventsService.password.passwordResetRequest,function(e,resetDataObj){scope._toggleForms()})}}}]).directive("dreamfactoryForgotPwordQuestion",["MODUSRMNGR_ASSET_PATH",function(MODUSRMNGR_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MODUSRMNGR_ASSET_PATH+"views/fp-security-question.html",link:function(scope,elem,attrs){}}}]).directive("dreamfactoryPasswordReset",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","UserEventsService","_dfObjectService","dfNotify","$location","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,UserEventsService,_dfObjectService,dfNotify,$location,SystemConfigDataService){return{restrict:"E",scope:{options:"=?",inErrorMsg:"=?"},templateUrl:MODUSRMNGR_ASSET_PATH+"views/password-reset.html",link:function(scope,elem,attrs){scope.es=UserEventsService.password;var defaults={showTemplate:!0,login:!1};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.identical=!0,scope.successMsg="",scope.errorMsg="",scope.loginAttribute="email",scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&scope.systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=scope.systemConfig.authentication.login_attribute),scope.resetByEmail=!0,scope.resetByUsername=!1,"username"===scope.loginAttribute&&(scope.resetByEmail=!1,scope.resetByUsername=!0),scope.resetWaiting=!1,scope.user={};var UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){scope.user[key]=UrlParams[key]});var isAdmin="1"==scope.user.admin;scope.dismissError=function(){scope.errorMsg=""},scope.dismissSuccess=function(){scope.successMsg=""},scope.resetPassword=function(credsDataObj){scope.identical?scope._verifyPasswordLength(credsDataObj)?scope._resetPassword(credsDataObj):scope.errorMsg="Password must be at least 5 characters.":scope.errorMsg="Passwords do not match."},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._setPasswordRequest=function(requestDataObj,admin){var url=INSTANCE_URL.url+"/system/admin/password";return admin||(url=INSTANCE_URL.url+"/user/password"),$http({url:url,method:"POST",params:{login:scope.options.login},data:requestDataObj})},scope._verifyPassword=function(userDataObj){scope.identical=userDataObj.new_password===userDataObj.verify_password},scope._verifyPasswordLength=function(credsDataObj){return credsDataObj.new_password.length>=5},scope._resetPassword=function(credsDataObj){scope.resetWaiting=!0;var requestDataObj={email:credsDataObj.email,username:credsDataObj.username?credsDataObj.username:null,code:credsDataObj.code,new_password:credsDataObj.new_password};scope._setPasswordRequest(requestDataObj,isAdmin).then(function(result){var userCredsObj={email:credsDataObj.email,username:credsDataObj.username?credsDataObj.username:null,password:credsDataObj.new_password};scope.$emit(scope.es.passwordSetSuccess,userCredsObj),scope.showTemplate=!1},function(reject){"401"==reject.status||"404"==reject.status?scope._setPasswordRequest(requestDataObj,!0).then(function(result){var userCredsObj={email:credsDataObj.email,password:credsDataObj.new_password};scope.$emit(scope.es.passwordSetSuccess,userCredsObj),scope.showTemplate=!1},function(reject){scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.passwordSetError),scope.resetWaiting=!1}).finally(function(){scope.resetWaiting=!1}):(scope.errorMsg=reject.data.error.message,scope.$emit(scope.es.passwordSetError),scope.resetWaiting=!1)}).finally(function(){scope.resetWaiting=!1})};var watchInErrorMsg=scope.$watch("inErrorMsg",function(n,o){scope.confirmWaiting=!1,scope.errorMsg=n});scope.$on(scope.es.passwordSetRequest,function(e,credsDataObj){scope._resetPassword(credsDataObj)}),scope.$on("$destroy",function(e){watchInErrorMsg()})}}}]).directive("dreamfactoryUserLogout",["INSTANCE_URL","$http","UserEventsService","UserDataService",function(INSTANCE_URL,$http,UserEventsService,UserDataService){return{restrict:"E",scope:{},link:function(scope,elem,attrs){scope.es=UserEventsService.logout,scope._logoutRequest=function(admin){var url=UserDataService.getCurrentUser().is_sys_admin?"/system/admin/session":"/user/session";return $http.delete(INSTANCE_URL.url+url)},scope._logout=function(){scope._logoutRequest(!1).then(function(){UserDataService.unsetCurrentUser(),scope.$emit(scope.es.logoutSuccess,!1)},function(reject){if("401"!=reject.status&&"401"!=reject.data.error.code)throw{module:"DreamFactory User Management",type:"error",provider:"dreamfactory",exception:reject};UserDataService.unsetCurrentUser(),scope.$emit(scope.es.logoutSuccess,!1)})},scope.$on(scope.es.logoutRequest,function(e){scope._logout()}),scope._logout()}}}]).directive("dreamfactoryRegisterUser",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$http","$rootScope","$location","UserEventsService","_dfObjectService","dfXHRHelper","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$http,$rootScope,$location,UserEventsService,_dfObjectService,dfXHRHelper,SystemConfigDataService){return{restrict:"E",templateUrl:MODUSRMNGR_ASSET_PATH+"views/register.html",scope:{options:"=?"},link:function(scope,elem,attrs){scope.es=UserEventsService.register;var defaults={showTemplate:!0,login:!1};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.identical=!0,scope.errorMsg="",scope.loginAttribute="email",scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&scope.systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=scope.systemConfig.authentication.login_attribute),scope.user={};var UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){scope.user[key]=UrlParams[key]}),scope.dismissError=function(){scope.errorMsg=""},scope.register=function(registerDataObj){scope._register(registerDataObj)},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._registerRequest=function(registerDataObj){return $http({url:INSTANCE_URL.url+"/user/register",method:"POST",params:{login:scope.options.login},data:registerDataObj})},scope._getSystemConfig=function(){return $http.get(INSTANCE_URL.url+"/system/environment")},scope._register=function(registerDataObj){1==scope.identical?(scope._runRegister=function(registerDataObj){scope._registerRequest(registerDataObj).then(function(result){if(null==scope.options.confirmationRequired){var userCredsObj={email:registerDataObj.email,password:registerDataObj.new_password};scope.$emit(scope.es.registerSuccess,userCredsObj)}else scope.$emit(scope.es.registerConfirmation,result.data)},function(reject){var msg="Validation failed. ",context=reject.data.error.context;null==context?reject.data&&reject.data.error&&reject.data.error.message&&(msg+=reject.data.error.message):angular.forEach(context,function(value,key){msg=msg+key+": "+value+" "},msg),scope.errorMsg=msg})},null==scope.options.confirmationRequired?scope._getSystemConfig().then(function(result){var systemConfigDataObj=result.data;scope.options.confirmationRequired=systemConfigDataObj.authentication.open_reg_email_service_id,scope._runRegister(registerDataObj)},function(reject){throw{module:"DreamFactory User Management",type:"error",provider:"dreamfactory",exception:reject}}):scope._runRegister(registerDataObj)):scope.errorMsg="Password and confirm password do not match."},scope._verifyPassword=function(userDataObj){scope.identical=userDataObj.new_password===userDataObj.verify_password},scope.$watchCollection("options",function(newValue,oldValue){if(!newValue.hasOwnProperty("confirmationRequired")){var config=dfXHRHelper.get({url:"system/environment"});scope.options.confirmationRequired=!(!config.authentication.allow_open_registration||!config.authentication.open_reg_email_service_id)||null}}),scope.$on(scope.es.registerRequest,function(e,registerDataObj){scope._register(registerDataObj)})}}}]).directive("dreamfactoryUserProfile",["MODUSRMNGR_ASSET_PATH","_dfObjectService","UserDataService","UserEventsService",function(MODUSRMNGR_ASSET_PATH,_dfObjectService,UserDataService,UserEventsService){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/edit-profile.html",scope:{options:"=?"},link:function(scope,elem,attrs){scope.es=UserEventsService.profile;var defaults={showTemplate:!0};scope.options=_dfObjectService.mergeObjects(scope.options,defaults)}}}]).directive("dreamfactoryRemoteAuthProviders",["MODUSRMNGR_ASSET_PATH","SystemConfigDataService","INSTANCE_URL",function(MODUSRMNGR_ASSET_PATH,SystemConfigDataService,INSTANCE_URL){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/remote-auth-providers.html",scope:!1,link:function(scope,elem,attrs){scope.url=INSTANCE_URL.url,scope.oauths=[],scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&scope.systemConfig.authentication.hasOwnProperty("oauth")&&(scope.oauths=scope.systemConfig.authentication.oauth),scope.remoteAuthLogin=function(providerData){window.top.location.href=scope.url+"/"+providerData}}}}]).directive("dreamfactorySamlAuthProviders",["MODUSRMNGR_ASSET_PATH","SystemConfigDataService","INSTANCE_URL",function(MODUSRMNGR_ASSET_PATH,SystemConfigDataService,INSTANCE_URL){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/saml-auth-providers.html",scope:!1,link:function(scope,elem,attrs){scope.url=INSTANCE_URL.url,scope.samls=[],scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&scope.systemConfig.authentication.hasOwnProperty("saml")&&(scope.samls=scope.systemConfig.authentication.saml),scope.samlAuthLogin=function(providerData){window.top.location.href=scope.url+"/"+providerData}}}}]).directive("dreamfactoryConfirmUser",["MODUSRMNGR_ASSET_PATH","INSTANCE_URL","$location","$http","_dfObjectService","UserDataService","UserEventsService","SystemConfigDataService",function(MODUSRMNGR_ASSET_PATH,INSTANCE_URL,$location,$http,_dfObjectService,UserDataService,UserEventsService,SystemConfigDataService){return{restrict:"E",replace:!0,templateUrl:MODUSRMNGR_ASSET_PATH+"views/confirmation-code.html",scope:{options:"=?",inErrorMsg:"=?",inviteType:"=?"},link:function(scope,elem,attrs){var defaults={showTemplate:!0,title:"User Confirmation"};scope.options=_dfObjectService.mergeObjects(scope.options,defaults),scope.showTemplate=scope.options.showTemplate,scope.identical=!0,scope.errorMsg="",scope.successMsg="",scope.confirmWaiting=!1,scope.submitLabel="Confirm "+scope.inviteType.charAt(0).toUpperCase()+scope.inviteType.slice(1),scope.loginAttribute="email",scope.systemConfig=SystemConfigDataService.getSystemConfig(),scope.systemConfig&&scope.systemConfig.authentication&&scope.systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=scope.systemConfig.authentication.login_attribute),scope.useEmail=!0,scope.useUsername=!1,"username"===scope.loginAttribute&&(scope.useEmail=!1,scope.useUsername=!0),scope.user={};var UrlParams=$location.search();Object.keys(UrlParams).forEach(function(key,index){scope.user[key]=UrlParams[key]}),scope.dismissError=function(){scope.errorMsg=""},scope.dismissSuccess=function(){scope.successMsg=""},scope.confirm=function(userConfirmObj){scope.identical?scope._verifyPasswordLength(userConfirmObj)?scope._confirm(userConfirmObj):scope.errorMsg="Password must be at least 5 characters.":scope.errorMsg="Passwords do not match."},scope.verifyPassword=function(user){scope._verifyPassword(user)},scope._verifyPassword=function(userDataObj){scope.identical=userDataObj.new_password===userDataObj.verify_password},scope._verifyPasswordLength=function(user){return user.new_password.length>=5},scope._confirmUserToServer=function(requestDataObj){var api="user"===scope.inviteType?"user/password":"system/admin/password";return $http({url:INSTANCE_URL.url+"/"+api,method:"POST",params:{login:!1},data:requestDataObj})},scope._confirm=function(userConfirmObj){scope.confirmWaiting=!0;var requestDataObj=userConfirmObj;scope._confirmUserToServer(requestDataObj).then(function(result){var userCreds={email:requestDataObj.email,username:requestDataObj.username?requestDataObj.username:null,password:requestDataObj.new_password};scope.$emit(UserEventsService.confirm.confirmationSuccess,userCreds)},function(reject){scope.errorMsg=reject.data.error.message,scope.$emit(UserEventsService.confirm.confirmationError),scope.confirmWaiting=!1}).finally(function(){})};var watchInErrorMsg=scope.$watch("inErrorMsg",function(n,o){scope.confirmWaiting=!1,scope.errorMsg=n});scope.$on("$destroy",function(e){watchInErrorMsg()}),scope.$on(UserEventsService.confirm.confirmationRequest,function(e,confirmationObj){scope._confirm(confirmationObj)})}}}]).directive("dreamfactoryWaiting",["MODUSRMNGR_ASSET_PATH",function(MODUSRMNGR_ASSET_PATH){return{restrict:"E",scope:{show:"=?"},replace:!1,templateUrl:MODUSRMNGR_ASSET_PATH+"views/dreamfactory-waiting.html",link:function(scope,elem,attrs){function size(){h=el.parent(".panel-body").outerHeight(),w=el.parent(".panel-body").outerWidth(),t=el.parent(".panel-body").position().top,l=el.parent(".panel-body").position().left,container.css({height:h+"px",width:w+"px",position:"absolute",left:l,top:t}),container.children(".df-spinner").css({position:"absolute",top:(h-110)/2,left:(w-70)/2})}var el=$(elem),container=el.children(),h=el.parent(".panel-body").outerHeight(),w=el.parent(".panel-body").outerWidth(),t=el.position().top+parseInt(el.parent().css("padding-top"))+"px",l=el.position().left+parseInt(el.parent().css("padding-left"))+"px";scope._showWaiting=function(){size(),container.fadeIn("fast")},scope._hideWaiting=function(){container.hide()},scope.$watch("show",function(n,o){n?scope._showWaiting():scope._hideWaiting()}),$(window).on("resize load",function(){size()})}}}]).service("UserEventsService",[function(){return{login:{loginRequest:"user:login:request",loginSuccess:"user:login:success",loginError:"user:login:error"},logout:{logoutRequest:"user:logout:request",logoutSuccess:"user:logout:success",logoutError:"user:logout:error"},register:{registerRequest:"user:register:request",registerSuccess:"user:register:success",registerError:"user:register:error",registerConfirmation:"user:register:confirmation"},password:{passwordResetRequest:"user:passwordreset:request",passwordResetRequestSuccess:"user:passwordreset:requestsuccess",passwordSetRequest:"user:passwordset:request",passwordSetSuccess:"user:passwordset:success",passwordSetError:"user:passwordset:error"},profile:{},confirm:{confirmationSuccess:"user:confirmation:success",confirmationError:"user:confirmation:error",confirmationRequest:"user:confirmation:request"}}}]).service("UserDataService",["$cookieStore","$http",function($cookieStore,$http){function _getCurrentUser(){return currentUser}function _setCurrentUser(userDataObj){delete userDataObj.session_id,$cookieStore.put("CurrentUserObj",userDataObj),$http.defaults.headers.common["X-DreamFactory-Session-Token"]=userDataObj.session_token,currentUser=userDataObj}function _unsetCurrentUser(){$cookieStore.remove("CurrentUserObj"),delete $http.defaults.headers.common["X-DreamFactory-Session-Token"],currentUser=!1}var currentUser=!1;return{getCurrentUser:function(){return _getCurrentUser()},setCurrentUser:function(userDataObj){_setCurrentUser(userDataObj)},unsetCurrentUser:function(){_unsetCurrentUser()}}}]).service("_dfObjectService",[function(){return{self:this,mergeObjects:function(obj1,obj2){for(var key in obj1)obj2[key]=obj1[key];return obj2},deepMergeObjects:function(obj1,obj2){var self=this;for(var _key in obj1)obj2.hasOwnProperty(_key)&&("object"==typeof obj2[_key]?obj2[_key]=self.deepMergeObjects(obj1[_key],obj2[_key]):obj2[_key]=obj1[_key]);return obj2}}}]).service("dfXHRHelper",["INSTANCE_URL","APP_API_KEY","UserDataService",function(INSTANCE_URL,APP_API_KEY,UserDataService){function _isEmpty(obj){if(null==obj)return!0;if(obj.length>0)return!1;if(0===obj.length)return!0;for(var key in obj)if(hasOwnProperty.call(obj,key))return!1;return!0}function _setHeaders(_xhrObj,_headersDataObj){_xhrObj.setRequestHeader("X-DreamFactory-API-Key",APP_API_KEY);var currentUser=UserDataService.getCurrentUser();currentUser&&currentUser.session_tpken&&xhrObj.setRequestHeader("X-DreamFactory-Session-Token",currentUser.session_token);for(var _key in _headersDataObj)_xhrObj.setRequestHeader(_key,_headersDataObj[_key])}function _setParams(_paramsDataObj){var params="";if(!_isEmpty(_paramsDataObj)){params="?";for(var _key in _paramsDataObj)params+=_key+"="+_paramsDataObj[_key]+"&"}return""!==params&&(params=params.substring(0,params.length-1),encodeURI(params)),params}function _makeRequest(_method,_url,_async,_params,_headers,_mimeType){var xhr;xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");var params=_setParams(_params);return xhr.open(_method,INSTANCE_URL.url+"/"+_url+params,_async),_setHeaders(xhr,_headers),xhr.overrideMimeType(_mimeType),xhr.send(),4==xhr.readyState&&200==xhr.status?angular.fromJson(xhr.responseText):xhr.status}function _get(optionsDataObj){if(!optionsDataObj.url||""===optionsDataObj.url)throw{module:"DreamFactory System Config Module",type:"error",provider:"dreamfactory",exception:"XHRHelper Request Failure: No URL provided"};var defaults={method:"GET",url:"",async:!1,params:{},headers:{},mimeType:"application/json"};for(var _key in defaults)optionsDataObj.hasOwnProperty(_key)&&(defaults[_key]=optionsDataObj[_key]);return _makeRequest(defaults.method,defaults.url,defaults.async,defaults.params,defaults.headers,defaults.mimeType)}return{get:function(requestOptions){return _get(requestOptions)}}}]),angular.module("dfUtility",["dfApplication"]).constant("MOD_UTILITY_ASSET_PATH","admin_components/adf-utility/").directive("dfGithubModal",["MOD_UTILITY_ASSET_PATH","$http","dfApplicationData","$rootScope",function(MOD_UTILITY_ASSET_PATH,$http,dfApplicationData,$rootScope){return{restrict:"E",scope:{editorObj:"=?",accept:"=?",target:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-github-modal.html",link:function(scope,elem,attrs){scope.modalError={},scope.githubModal={},scope.githubUpload=function(){var url=angular.copy(scope.githubModal.url);if(url){var url_array=url.substr(url.indexOf(".com/")+5).split("/"),owner="",repo="",branch="",path="";url.indexOf("raw.github")>-1?(owner=url_array[0],repo=url_array[1],branch=url_array[2],path=url_array.splice(3,url_array.length-3).join("/")):(owner=url_array[0],repo=url_array[1],branch=url_array[3],path=url_array.splice(4,url_array.length-4).join("/"));var github_api_url="https://api.github.com/repos/"+owner+"/"+repo+"/contents/"+path+"?ref="+branch,username=angular.copy(scope.githubModal.username),password=angular.copy(scope.githubModal.password),authdata=btoa(username+":"+password);username&&($http.defaults.headers.common.Authorization="Basic "+authdata),$http.get(github_api_url,{headers:{"X-DreamFactory-API-Key":void 0,"X-DreamFactory-Session-Token":void 0},ignore401:!0}).then(function(response){switch(path.substr(path.lastIndexOf(".")+1,path.length-path.lastIndexOf("."))){case"js":"javascript";break;case"php":"php";break;case"py":"python";break;case"json":"json";break;default:"javascript"}if(scope.editorObj&&scope.editorObj.editor){var decodedString=atob(response.data.content);scope.editorObj.editor.session.setValue(decodedString),scope.editorObj.editor.focus()}var element=angular.element("#"+scope.target);element.on("hidden.bs.modal",function(){void 0!==$(this).find("form")[0]&&$(this).find("form")[0].reset()}),scope.githubModal={private:!1},scope.modalError={},element.appendTo("body").modal("hide")},function(response){401===response.status&&(scope.modalError={visible:!0,message:"Error: Authentication failed."}),404===response.status&&(scope.modalError={visible:!0,message:"Error: The file could not be found."})})}},scope.githubModalCancel=function(){scope.githubModal={private:!1},scope.modalError={};var element=angular.element("#"+scope.target);element.on("hidden.bs.modal",function(){void 0!==$(this).find("form")[0]&&$(this).find("form")[0].reset()}),element.appendTo("body").modal("hide")};scope.$watch("githubModal.username",function(newValue,oldValue){if(!newValue)return!1;scope.modalError={visible:!1,message:""}}),scope.$watch("githubModal.password",function(newValue,oldValue){if(!newValue)return!1;scope.modalError={visible:!1,message:""}}),scope.$watch("githubModal.url",function(newValue,oldValue){if(!newValue)return!1;scope.modalError={visible:!1,message:""};var file_ext=newValue.substring(newValue.lastIndexOf(".")+1,newValue.length);if(scope.accept.indexOf(file_ext)>-1){var url=angular.copy(scope.githubModal.url),url_array=url.substr(url.indexOf(".com/")+5).split("/"),github_api_url="https://api.github.com/repos/"+url_array[0]+"/"+url_array[1];$http.get(github_api_url,{headers:{"X-DreamFactory-API-Key":void 0,"X-DreamFactory-Session-Token":void 0}}).then(function(response){scope.githubModal.private=response.data.private},function(response){scope.githubModal.private=!0})}else{var formats=scope.accept.join(", ");scope.modalError={visible:!0,message:"Error: Invalid file format. Only "+formats+" file format(s) allowed"}}});scope.$on("githubShowModal",function(event,data){if(void 0!==data){var element=angular.element("#"+data);element.on("hidden.bs.modal",function(){void 0!==$(this).find("form")[0]&&$(this).find("form")[0].reset()}),element.appendTo("body").modal("show")}})}}}]).directive("dfComponentTitle",["MOD_UTILITY_ASSET_PATH","$location",function(MOD_UTILITY_ASSET_PATH,$location){return{restrict:"E",replace:!0,scope:!1,template:'<h1 id="component_title" class="df-component-nav-title pull-left">{{$parent.title}}</h1>'}}]).directive("dfTopLevelNavStd",["MOD_UTILITY_ASSET_PATH","$location","UserDataService",function(MOD_UTILITY_ASSET_PATH,$location,UserDataService){return{restrict:"E",scope:{options:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-top-level-nav-std.html",link:function(scope,elem,attrs){scope.links=scope.options.links,scope.activeLink=null,scope.$watch(function(){return $location.path()},function(newValue,oldValue){switch(newValue){case"/home":case"/apps":case"/admins":case"/users":case"/roles":case"/services":case"/schema":case"/data":case"/file-manager":case"/scripts":case"/config":case"/package-manager":case"/apidocs":case"/downloads":case"/limits":scope.activeLink="admin";break;case"/launchpad":scope.activeLink="launchpad";break;case"/profile":scope.activeLink="user";break;case"/login":scope.activeLink="login";break;case"/register":case"/register-complete":case"/register-confirm":scope.activeLink="register"}})}}}]).directive("dfNavNotification",["MOD_UTILITY_ASSET_PATH","$http",function(MOD_UTILITY_ASSET_PATH,$http){return{replace:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-nav-notification.html",link:function(scope,elem,attrs){$http.get("https://dreamfactory.com/in_product_v2/notifications.php").then(function(result){scope.notifications=result.data.notifications})}}}]).directive("dfComponentNav",["MOD_UTILITY_ASSET_PATH","$location","$route","$rootScope",function(MOD_UTILITY_ASSET_PATH,$location,$route,$rootScope){return{restrict:"E",scope:{options:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-component-nav.html",link:function(scope,elem,attrs){scope.activeLink=null,scope.toggleMenu=!1,scope.openMenu=function(){scope._openMenu()},scope.closeMenu=function(){scope._closeMenu()},scope.reloadRoute=function(path){scope._activeTabClicked(path)&&$route.reload()},scope._activeTabClicked=function(path){return $location.path()===path},scope._openMenu=function(){scope.toggleMenu=!0},scope._closeMenu=function(){scope.toggleMenu=!1},scope.$watch("toggleMenu",function(n,o){return 1==n?($("#component-nav-flyout-mask").fadeIn(250),$("#top-bar-mask").fadeIn(250),$("#dreamfactoryApp").css({position:"fixed",right:"0",left:"0"}).animate({right:"+=300",left:"-=300"},250,function(){}),void $("#component-nav-flyout-menu").animate({right:"+=300"},250,function(){})):!1===n&&o?($("#dreamfactoryApp").animate({right:"-=300",left:"+=300"},250,function(){}),$("#component-nav-flyout-menu").animate({right:"-=300"},250,function(){}),$("#dreamfactoryApp").css("position","relative"),$("#component-nav-flyout-mask").fadeOut(250),void $("#top-bar-mask").fadeOut(250)):void 0}),scope.$watch(function(){return $location.path()},function(newValue,oldValue){scope.activeLink=newValue?newValue.substr(1,newValue.length):null}),$rootScope.$on("$routeChangeSuccess",function(e){scope.$broadcast("component-nav:view:change"),scope._closeMenu()})}}}]).directive("dfSidebarNav",["MOD_UTILITY_ASSET_PATH","$rootScope","$location",function(MOD_UTILITY_ASSET_PATH,$rootScope,$location){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-sidebar-nav.html",link:function(scope,elem,attrs){function setMargin(location){switch(location){case"/schema":case"/data":case"/file-manager":case"/scripts":case"/apidocs":case"/package-manager":case"/downloads":$(".df-component-nav-title").css({marginLeft:0});break;case"/home":case"/apps":case"/admins":case"/users":case"/roles":case"/services":case"/config":var _elem=$(document).find("#sidebar-open");_elem&&_elem.is(":visible")?$(".df-component-nav-title").css({marginLeft:"45px"}):$(".df-component-nav-title").css({marginLeft:0})}}scope.activeView=scope.links[0],scope.toggleMenu=!1,scope.setActiveView=function(linkObj){scope._setActiveView(linkObj)},scope.openMenu=function(){scope._openMenu()},scope.closeMenu=function(){scope._closeMenu()},scope._setActiveView=function(linkObj){scope.activeView=linkObj,scope._closeMenu(),scope.$broadcast("sidebar-nav:view:change")},scope._openMenu=function(){scope.toggleMenu=!0},scope._closeMenu=function(){scope.toggleMenu=!1},scope.$on("sidebar-nav:view:reset",function(event){angular.forEach(scope.links,function(link,id){0===id?scope.links[0].active=!0:scope.links[id].active=!1}),scope.setActiveView(scope.links[0])}),scope.$watch("toggleMenu",function(n,o){return 1==n?($("#sidebar-nav-flyout-mask").css("z-index",10).fadeIn(250),$("#top-bar-mask").fadeIn(250),$("#dreamfactoryApp").css({position:"fixed",right:"0",left:"0"}).animate({right:"-=300",left:"+=300"},250,function(){}),void $("#sidebar-nav-flyout-menu").animate({left:"+=300"},250,function(){})):!1===n&&o?($("#dreamfactoryApp").animate({right:"+=300",left:"-=300"},250,function(){}),$("#sidebar-nav-flyout-menu").animate({left:"-=300"},250,function(){}),$("#dreamfactoryApp").css("position","relative"),$("#sidebar-nav-flyout-mask").fadeOut(250),void $("#top-bar-mask").fadeOut(250)):void 0}),scope.$watch("activeView",function(newValue,oldValue){if(!newValue)return!1;oldValue.active=!1,newValue.active=!0}),$(window).resize(function(){setMargin($location.path())}),scope.$watch(function(){return $location.path()},function(newValue,oldValue){setMargin(newValue)})}}}]).directive("dreamfactoryAutoHeight",["$window","$route",function($window){return{restrict:"A",link:function(scope,elem,attrs){scope._getWindow=function(){return $(window)},scope._getDocument=function(){return $(document)},scope._getParent=function(parentStr){switch(parentStr){case"window":return scope._getWindow();case"document":return scope._getDocument();default:return $(parentStr)}},scope._setElementHeight=function(){angular.element(elem).css({height:scope._getParent(attrs.autoHeightParent).height()-200-attrs.autoHeightPadding})},scope._setElementHeight(),angular.element($window).on("resize",function(){scope._setElementHeight()})}}}]).directive("resize",[function($window){return function(scope,element){var w=angular.element($window);scope.getWindowDimensions=function(){return{h:w.height(),w:w.width()}},scope.$watch(scope.getWindowDimensions,function(newValue,oldValue){scope.windowHeight=newValue.h,scope.windowWidth=newValue.w,angular.element(element).css({width:newValue.w-angular.element("sidebar").css("width")+"px"})},!0)}}]).directive("dfFsHeight",["$window","$rootScope",function($window,$rootScope){return function(scope,elem,attrs){var setSize=function(){var _elem=$(elem),winHeight=$(window).height(),winWidth=$(window).width();_elem.is("#apidocs")?_elem.attr("height",winHeight-25+"px"):_elem.is("#file-manager")?(_elem.attr("height",winHeight-130+"px"),$rootScope.$emit("filemanager:sized")):_elem.is("#scripting-sidebar-list")?_elem.css("height",winHeight-280+"px"):"ide"===_elem.attr("id")?_elem.css({height:winHeight-280+"px"}):_elem.hasClass("package-export-table")?_elem.css({height:winHeight-600}):winWidth>=992?$(elem).css({height:winHeight-120}):$(elem).css({height:"auto"})};scope.$on("apidocs:loaded",function(e){setSize()}),scope.$on("filemanager:loaded",function(e){setSize()}),scope.$on("script:loaded:success",function(e){setSize()}),scope.$on("sidebar-nav:view:change",function(e){setSize()}),scope.$on("sidebar-nav:view:change",function(e){setSize()}),$rootScope.$on("$routeChangeSuccess",function(e){setSize()}),$(document).ready(function(){setSize()}),$(window).on("resize",function(){setSize()})}}]).directive("dfGroupedPicklist",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{selected:"=?",options:"=?"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-grouped-picklist.html",link:function(scope,elem,attrs){scope.selectedLabel=!1,scope.selectItem=function(item){scope.selected=item.name},scope.$watch("selected",function(n,o){if(null==n&&void 0==n)return!1;angular.forEach(scope.options,function(option){option.items&&angular.forEach(option.items,function(item){n===item.name&&(scope.selectedLabel=item.label)})})}),elem.css({display:"inline-block",position:"relative"})}}}]).directive("dfEventPicker",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{selected:"=?",options:"=?"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-event-picker.html",link:function(scope,elem,attrs){scope.selectItem=function(item){scope.selected=item.name},scope.events=[],scope.$watch("options",function(newValue,oldValue){var events=[];newValue&&(angular.forEach(newValue,function(e){e.items&&(events.length>0&&events.push({class:"divider"}),angular.forEach(e.items,function(item){item.class="",events.push(item)}))}),scope.events=events)})}}}]).directive("dfFileCertificate",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{selected:"=?"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-file-certificate.html",link:function(scope,elem,attrs){elem.find("input").bind("change",function(event){var file=event.target.files[0],reader=new FileReader;reader.onload=function(readerEvt){var string=readerEvt.target.result;scope.selected=string,scope.$apply()},reader.readAsBinaryString(file)}),elem.css({display:"inline-block",position:"relative"})}}}]).directive("dfMultiPicklist",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{options:"=?",selectedOptions:"=?",cols:"=?",legend:"=?"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-multi-picklist.html",link:function(scope,elem,attrs){angular.forEach(scope.options,function(option){option.active=!1}),scope.allSelected=!1,scope.cols||(scope.cols=3),scope.width=100/(1*scope.cols)-3,scope.toggleSelectAll=function(){var selected=[];scope.allSelected&&angular.forEach(scope.options,function(option){selected.push(option.name)}),scope.selectedOptions=selected},scope.setSelectedOptions=function(){var selected=[];angular.forEach(scope.options,function(option){option.active&&selected.push(option.name)}),scope.selectedOptions=selected},scope.$watch("selectedOptions",function(newValue,oldValue){newValue&&angular.forEach(scope.options,function(option){option.active=newValue.indexOf(option.name)>=0})}),elem.css({display:"inline-block",position:"relative"})}}}]).directive("dfVerbPicker",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{allowedVerbs:"=?",allowedVerbMask:"=?",description:"=?",size:"@"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-verb-picker.html",link:function(scope,elem,attrs){scope.verbs={GET:{name:"GET",active:!1,description:" (read)",mask:1},POST:{name:"POST",active:!1,description:" (create)",mask:2},PUT:{name:"PUT",active:!1,description:" (replace)",mask:4},PATCH:{name:"PATCH",active:!1,description:" (update)",mask:8},DELETE:{name:"DELETE",active:!1,description:" (remove)",mask:16}},scope.btnText="None Selected",scope.description=!0,scope.checkAll={checked:!1},scope._toggleSelectAll=function(event){void 0!==event&&event.stopPropagation();var verbsSet=[];Object.keys(scope.verbs).forEach(function(key,index){!0===scope.verbs[key].active&&verbsSet.push(key)}),verbsSet.length>0?angular.forEach(verbsSet,function(verb){scope._toggleVerbState(verb,event)}):Object.keys(scope.verbs).forEach(function(key,index){scope._toggleVerbState(key,event)})},scope._setVerbState=function(nameStr,stateBool){var verb=scope.verbs[nameStr];scope.verbs.hasOwnProperty(verb.name)&&(scope.verbs[verb.name].active=stateBool)},scope._toggleVerbState=function(nameStr,event){void 0!==event&&event.stopPropagation(),scope.verbs.hasOwnProperty(scope.verbs[nameStr].name)&&(scope.verbs[nameStr].active=!scope.verbs[nameStr].active,scope.allowedVerbMask=scope.allowedVerbMask^scope.verbs[nameStr].mask),scope.allowedVerbs=[],angular.forEach(scope.verbs,function(_obj){_obj.active&&scope.allowedVerbs.push(_obj.name)})},scope._isVerbActive=function(verbStr){return scope.verbs[verbStr].active},scope._setButtonText=function(){var verbs=[];angular.forEach(scope.verbs,function(verbObj){verbObj.active&&verbs.push(verbObj.name)}),scope.btnText="";0==verbs.length?scope.btnText="None Selected":verbs.length>0&&verbs.length<=1?angular.forEach(verbs,function(_value,_index){scope._isVerbActive(_value)&&(_index!=verbs.length-1?scope.btnText+=_value+", ":scope.btnText+=_value)}):verbs.length>1&&(scope.btnText=verbs.length+" Selected")},scope.$watch("allowedVerbs",function(newValue,oldValue){if(!newValue)return!1;Object.keys(scope.verbs).forEach(function(key){scope._setVerbState(key,!1)}),angular.forEach(scope.allowedVerbs,function(_value,_index){scope._setVerbState(_value,!0)}),scope._setButtonText()}),scope.$watch("allowedVerbMask",function(n,o){if(null==n&&void 0==n)return!1;angular.forEach(scope.verbs,function(verbObj){n&verbObj.mask&&(verbObj.active=!0)}),scope._setButtonText()}),elem.css({display:"inline-block",position:"relative"})}}}]).directive("dfRequestorPicker",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{allowedRequestors:"=?",allowedRequestorMask:"=?",size:"@"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-requestor-picker.html",link:function(scope,elem,attrs){scope.requestors={API:{name:"API",active:!1,mask:1},SCRIPT:{name:"SCRIPT",active:!1,mask:2}},scope.btnText="None Selected",scope._setRequestorState=function(nameStr,stateBool){var requestor=scope.requestors[nameStr];scope.requestors.hasOwnProperty(requestor.name)&&(scope.requestors[requestor.name].active=stateBool)},scope._toggleRequestorState=function(nameStr,event){event.stopPropagation(),scope.requestors.hasOwnProperty(scope.requestors[nameStr].name)&&(scope.requestors[nameStr].active=!scope.requestors[nameStr].active,scope.allowedRequestorMask=scope.allowedRequestorMask^scope.requestors[nameStr].mask),scope.allowedRequestors=[],angular.forEach(scope.requestors,function(_obj){_obj.active&&scope.allowedRequestors.push(_obj.name)})},scope._isRequestorActive=function(requestorStr){return scope.requestors[requestorStr].active},scope._setButtonText=function(){var requestors=[];angular.forEach(scope.requestors,function(rObj){rObj.active&&requestors.push(rObj.name)}),scope.btnText="",0==requestors.length?scope.btnText="None Selected":angular.forEach(requestors,function(_value,_index){scope._isRequestorActive(_value)&&(_index!=requestors.length-1?scope.btnText+=_value+", ":scope.btnText+=_value)})},scope.$watch("allowedRequestors",function(newValue,oldValue){if(!newValue)return!1;angular.forEach(scope.allowedRequestors,function(_value,_index){scope._setRequestorState(_value,!0)}),scope._setButtonText()}),scope.$watch("allowedRequestorMask",function(n,o){if(null==n&&void 0==n)return!1;angular.forEach(scope.requestors,function(requestorObj){n&requestorObj.mask&&(requestorObj.active=!0)}),scope._setButtonText()}),elem.css({display:"inline-block",position:"absolute"})}}}]).directive("dfDbFunctionUsePicker",["MOD_UTILITY_ASSET_PATH",function(DF_UTILITY_ASSET_PATH){return{restrict:"E",scope:{allowedUses:"=?",description:"=?",size:"@"},templateUrl:DF_UTILITY_ASSET_PATH+"views/df-db-function-use-picker.html",link:function(scope,elem,attrs){scope.uses={SELECT:{name:"SELECT",active:!1,description:" (get)"},FILTER:{name:"FILTER",active:!1,description:" (get)"},INSERT:{name:"INSERT",active:!1,description:" (post)"},UPDATE:{name:"UPDATE",active:!1,description:" (patch)"}},scope.btnText="None Selected",scope.description=!0,scope._setDbFunctionUseState=function(nameStr,stateBool){scope.uses.hasOwnProperty(scope.uses[nameStr].name)&&(scope.uses[nameStr].active=stateBool)},scope._toggleDbFunctionUseState=function(nameStr,event){event.stopPropagation(),scope.uses.hasOwnProperty(scope.uses[nameStr].name)&&(scope.uses[nameStr].active=!scope.uses[nameStr].active),scope.allowedUses=[],angular.forEach(scope.uses,function(_obj){_obj.active&&scope.allowedUses.push(_obj.name)})},scope._isDbFunctionUseActive=function(nameStr){return scope.uses[nameStr].active},scope._setButtonText=function(){var uses=[];angular.forEach(scope.uses,function(useObj){useObj.active&&uses.push(useObj.name)}),scope.btnText="";0==uses.length?scope.btnText="None Selected":uses.length>0&&uses.length<=1?angular.forEach(uses,function(_value,_index){scope._isDbFunctionUseActive(_value)&&(_index!=uses.length-1?scope.btnText+=_value+", ":scope.btnText+=_value)}):uses.length>1&&(scope.btnText=uses.length+" Selected")},scope.$watch("allowedUses",function(newValue,oldValue){if(!newValue)return!1;Object.keys(scope.uses).forEach(function(key){scope._setDbFunctionUseState(key,!1)}),angular.forEach(scope.allowedUses,function(_value,_index){scope._setDbFunctionUseState(_value,!0)}),scope._setButtonText()}),elem.css({display:"inline-block",position:"relative"})}}}]).directive("dfServicePicker",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http){return{restrict:"E",scope:{services:"=?",selected:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-service-picker.html",link:function(scope,elem,attrs){scope.resources=[],scope.activeResource=null,scope.activeService=null,scope.setServiceAndResource=function(){scope._checkForActive()&&scope._setServiceAndResource()},scope._getResources=function(){return $http({method:"GET",url:INSTANCE_URL.url+"/"+scope.activeService})},scope._setServiceAndResource=function(){scope.selected={service:scope.activeService,resource:scope.activeResource}},scope._checkForActive=function(){return!!scope.activeResource&&scope.activeService},scope.$watch("activeService",function(newValue,oldValue){if(!newValue)return scope.resources=[],scope.activeResource=null,!1;scope.resources=[],scope._getResources().then(function(result){scope.resources=result.data.resource},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})})}}}]).directive("dfDbTablePicker",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http","dfApplicationData",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http,dfApplicationData){return{restrict:"E",scope:{services:"=?",selected:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-db-table-picker.html",link:function(scope,elem,attrs){scope.resources=[],scope.activeResource=null,scope.activeService=null,scope.setServiceAndResource=function(){scope._checkForActive()&&scope._setServiceAndResource()},scope._getResources=function(){return dfApplicationData.getServiceComponents(scope.activeService,INSTANCE_URL.url+"/"+scope.activeService+"/_table/",{params:{fields:"name,label"}})},scope._setServiceAndResource=function(){scope.selected={service:scope.activeService,resource:scope.activeResource}},scope._checkForActive=function(){return!!scope.activeResource&&scope.activeService},scope.$watch("activeService",function(newValue,oldValue){if(!newValue)return scope.resources=[],scope.activeResource=null,!1;scope.resources=[],scope._getResources().then(function(result){scope.resources=result},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})})}}}]).directive("dfDbSchemaPicker",["MOD_UTILITY_ASSET_PATH","INSTANCE_URL","$http",function(MOD_UTILITY_ASSET_PATH,INSTANCE_URL,$http){return{restrict:"E",scope:{services:"=?",selected:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-db-schema-picker.html",link:function(scope,elem,attrs){scope.resources=[],scope.activeResource=null,scope.activeService=null,scope.setServiceAndResource=function(){scope._checkForActive()&&scope._setServiceAndResource()},scope._getResources=function(){return $http({method:"GET",url:INSTANCE_URL.url+"/"+scope.activeService+"/_schema/"})},scope._setServiceAndResource=function(){scope.selected={service:scope.activeService,resource:scope.activeResource}},scope._checkForActive=function(){return!!scope.activeResource&&scope.activeService},scope.$watch("activeService",function(newValue,oldValue){if(!newValue)return scope.resources=[],scope.activeResource=null,!1;scope.resources=[],scope._getResources().then(function(result){scope.resources=result.data.resource},function(reject){throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:reject}})})}}}]).directive("dfAceEditor",["MOD_UTILITY_ASSET_PATH","$compile",function(MOD_UTILITY_ASSET_PATH,$compile){return{restrict:"E",scope:{inputType:"=?",inputContent:"=?",inputUpdate:"=?",inputFormat:"=?",isEditable:"=?",editorObj:"=?",targetDiv:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-ace-editor.html",link:function(scope,elem,attrs){window.define=window.define||ace.define,$(elem).children(".ide-attach").append($compile('<div id="ide_'+scope.targetDiv+'" class="df-fs-height" style="height:400px"></div>')(scope)),scope.editor=null,scope.currentContent="",scope.verbose=!1,scope._setEditorInactive=function(inactive){scope.verbose&&console.log(scope.targetDiv,"_setEditorInactive",inactive),inactive?(scope.editor.setOptions({readOnly:!0,highlightActiveLine:!1,highlightGutterLine:!1}),scope.editor.container.style.opacity=.75,scope.editor.renderer.$cursorLayer.element.style.opacity=0):(scope.editor.setOptions({readOnly:!1,highlightActiveLine:!0,highlightGutterLine:!0}),scope.editor.container.style.opacity=1,scope.editor.renderer.$cursorLayer.element.style.opacity=100)},scope._setEditorMode=function(mode){scope.verbose&&console.log(scope.targetDiv,"_setEditorMode",mode),scope.editor.session.setMode({path:"ace/mode/"+mode,inline:!0,v:Date.now()})},scope._loadEditor=function(newValue){if(scope.verbose&&console.log(scope.targetDiv,"_loadEditor",newValue),null!==newValue&&void 0!==newValue){var content=newValue;"object"===scope.inputType&&(content=angular.toJson(content,!0)),scope.currentContent=content,scope.editor=ace.edit("ide_"+scope.targetDiv),scope.editorObj.editor=scope.editor,scope.editor.renderer.setShowGutter(!0),scope.editor.session.setValue(content)}},scope.$watch("inputContent",scope._loadEditor),scope.$watch("inputUpdate",function(newValue){scope.verbose&&console.log(scope.targetDiv,"inputUpdate",newValue),scope._loadEditor(scope.currentContent)}),scope.$watch("inputFormat",function(newValue){scope.verbose&&console.log(scope.targetDiv,"inputFormat",newValue),newValue&&("nodejs"!==newValue&&"v8js"!==newValue||(newValue="javascript"),scope._setEditorMode(newValue))}),scope.$watch("isEditable",function(newValue){scope.verbose&&console.log(scope.targetDiv,"isEditable",newValue),scope._setEditorInactive(!newValue)}),scope.$on("$destroy",function(e){scope.verbose&&console.log(scope.targetDiv,"$destroy"),scope.editor.destroy()})}}}]).directive("fileModel",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var modelSetter=$parse(attrs.fileModel).assign;element.on("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("fileModel2",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var modelSetter=$parse(attrs.fileModel).assign;element.on("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("showtab",[function(){return{restrict:"A",link:function(scope,element,attrs){element.click(function(e){e.preventDefault(),$(element).tab("show")}),scope.activeTab=$(element).attr("id")}}}]).directive("dfSectionToolbar",["MOD_UTILITY_ASSET_PATH","$compile","dfApplicationData","$location","$timeout","$route",function(MOD_UTILITY_ASSET_PATH,$compile,dfApplicationData,$location,$timeout,$route){return{restrict:"E",scope:!1,transclude:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-toolbar.html",link:function(scope,elem,attrs){scope.changeFilter=function(searchStr){$timeout(function(){if(searchStr===scope.filterText||!scope.filterText)return scope.filterText=scope.filterText||null,void $location.search("filter",scope.filterText)},1e3)},scope.filterText=$location.search()&&$location.search().filter?$location.search().filter:"",elem.find("input")[0]&&elem.find("input")[0].focus()}}}]).directive("dfToolbarHelp",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:!1,replace:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-toolbar-help.html",link:function(scope,elem,attrs){scope=scope.$parent}}}]).directive("dfToolbarPaginate",["MOD_UTILITY_ASSET_PATH","dfApplicationData","dfNotify","$location",function(MOD_UTILITY_ASSET_PATH,dfApplicationData,dfNotify,$location){return{restrict:"E",scope:{api:"=",type:"=?"},replace:!0,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-toolbar-paginate.html",link:function(scope,elem,attrs){scope.totalCount=dfApplicationData.getApiRecordCount(scope.api),scope.pagesArr=[],scope.currentPage={},scope.isInProgress=!1,scope.getPrevious=function(){if(scope._isFirstPage()||scope.isInProgress)return!1;scope._getPrevious()},scope.getNext=function(){if(scope._isLastPage()||scope.isInProgress)return!1;scope._getNext()},scope.getPage=function(pageObj){scope._getPage(pageObj)},scope._getDataFromServer=function(offset,filter){var params={offset:offset,include_count:!0};return filter&&(params.filter=filter),dfApplicationData.getDataSetFromServer(scope.api,{params:params}).$promise},scope._calcTotalPages=function(totalCount,numPerPage){return Math.ceil(totalCount/numPerPage)},scope._createPageObj=function(_pageNum){return{number:_pageNum+1,value:_pageNum,offset:_pageNum*dfApplicationData.getApiPrefs().data[scope.api].limit,stopPropagation:!1}},scope._createPagesArr=function(_totalCount){scope.pagesArr=[];for(var i=0;i<_totalCount;i++)scope.pagesArr.push(scope._createPageObj(i))},scope._setCurrentPage=function(pageDataObj){scope.currentPage=pageDataObj},scope._getCurrentPage=function(){return!scope.currentPage&&scope.pagesArr.length>0?scope.currentPage=scope.pagesArr[0]:scope.currentPage||scope.pagesArr.length||(scope.pagesArr.push(scope._createPageObj(0)),scope.currentPage=scope.pagesArr[0]),scope.currentPage},scope._isFirstPage=function(){return 0===scope._getCurrentPage().value},scope._isLastPage=function(){return scope.currentPage.value===scope.pagesArr.length-1},scope._previousPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value-1]},scope._nextPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value+1]},scope._calcPagination=function(api){if(scope.pagesArr=[],0==scope.totalCount)return scope.pagesArr.push(scope._createPageObj(0)),!1;scope._createPagesArr(scope._calcTotalPages(scope.totalCount,dfApplicationData.getApiPrefs().data[api].limit))};var detectFilter=function(){var filterText=$location.search()&&$location.search().filter?$location.search().filter:"";return filterText?["first_name","last_name","name","email"].map(function(item){return"("+item+' like "%'+filterText+'%")'}).join(" or "):""};scope._getPrevious=function(){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=scope.pagesArr[scope.currentPage.value-1].offset;scope._getDataFromServer(offset,detectFilter()).then(function(result){scope._previousPage(),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){scope.isInProgress=!1})},scope._getNext=function(){if(scope.isInProgress)return!1;scope.isInProgress=!0;var offset=scope.pagesArr[scope.currentPage.value+1].offset;scope._getDataFromServer(offset,detectFilter()).then(function(result){scope._nextPage(),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){scope.isInProgress=!1})},scope._getPage=function(pageObj){if(scope.isInProgress)return!1;scope.isInProgress=!0,scope._getDataFromServer(pageObj.offset,detectFilter()).then(function(result){scope._setCurrentPage(pageObj),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){scope.isInProgress=!1})};scope.$watch("api",function(newValue,oldValue){if(!newValue)return!1;scope.totalCount=dfApplicationData.getApiRecordCount(newValue),scope._calcPagination(newValue),scope._setCurrentPage(scope.pagesArr[0])});scope.$on("toolbar:paginate:"+scope.api+":load",function(e){scope.totalCount=dfApplicationData.getApiRecordCount(scope.api),scope._calcPagination(scope.api),scope._setCurrentPage(scope.pagesArr[0])}),scope.$on("toolbar:paginate:"+scope.api+":destroy",function(e){1!==scope.currentPage.number&&(dfApplicationData.deleteApiDataFromCache(scope.api),scope.totalCount=0,scope._calcPagination(scope.api),scope._setCurrentPage(scope.pagesArr[0]))}),scope.$on("toolbar:paginate:"+scope.api+":reset",function(e){if("/logout"!==$location.path()&&void 0!==dfApplicationData.getApiDataFromCache(scope.api)){if(scope.isInProgress)return!1;scope.isInProgress=!0,scope._getDataFromServer(0,detectFilter()).then(function(result){scope.totalCount=dfApplicationData.getApiRecordCount(scope.api),scope._calcPagination(scope.api),scope._setCurrentPage(scope.pagesArr[0]),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){scope.isInProgress=!1})}}),scope.$on("toolbar:paginate:"+scope.api+":delete",function(e){if(!scope.isInProgress){var curOffset=scope.currentPage.offset,recalcPagination=!1;scope._isLastPage()&&!dfApplicationData.getApiDataFromCache(scope.api).length&&(recalcPagination=!0,1!==scope.currentPage.number&&(curOffset=scope.currentPage.offset-dfApplicationData.getApiPrefs().data[scope.api].limit)),scope.isInProgress=!0,scope._getDataFromServer(curOffset,detectFilter()).then(function(result){scope.totalCount=dfApplicationData.getApiRecordCount(scope.api),recalcPagination&&(scope._calcPagination(scope.api),scope._setCurrentPage(scope.pagesArr[scope.pagesArr.length-1])),scope.$emit("toolbar:paginate:"+scope.api+":update")},function(reject){var messageOptions={module:"DreamFactory Paginate Table",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){scope.isInProgress=!1})}})}}}]).directive("dfDetailsHeader",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:{new:"=",name:"=?",apiName:"=?"},template:'<div class="df-section-header df-section-all-round"><h4 data-ng-if="new">Create {{apiName}}</h4><h4 data-ng-if="!new">Edit {{name}}</h4></div>',link:function(scope,elem,attrs){}}}]).directive("dfSectionHeader",[function(){return{restrict:"E",scope:{title:"=?"},template:'<div class="df-section-header df-section-all-round"><h4>{{title}}</h4></div>',link:function(scope,elem,attrs){}}}]).directive("dfSetUserPassword",["MOD_UTILITY_ASSET_PATH","$compile",function(MOD_USER_ASSET_PATH,$compile){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-input-manual-password.html",link:function(scope,elem,attrs){scope.requireOldPassword=!1,scope.password=null,scope.setPassword=!1,scope.identical=!0,scope._verifyPassword=function(){scope.identical=scope.password.new_password===scope.password.verify_password},scope._resetUserPasswordForm=function(){scope.password=null,scope.setPassword=!1,scope.identical=!0},scope.$watch("setPassword",function(newValue){if(newValue){var html="";html+='<div class="form-group" ng-if="requireOldPassword"><input type="password" id="setpassword-old-password" name="setpassword-old-password" class="form-control" data-ng-model="password.old_password" placeholder="Enter Old Password" data-ng-required="true" /></div>';var el=$compile(html+='<div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="setpassword-password" name="setpassword-password" placeholder="Enter Password" data-ng-model="password.new_password" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword()" ></div><div class="form-group" data-ng-class="{\'has-error\' : identical === false}"><input type="password" id="setpassword-verify-password" name="setpassword-verify-password" placeholder="Verify Password" data-ng-model="password.verify_password" class="form-control" data-ng-required="true" data-ng-keyup="_verifyPassword()" ></div>')(scope);angular.element("#set-password").append(el)}}),scope.$on("reset:user:form",function(e){scope._resetUserPasswordForm()})}}}]).directive("dfSetSecurityQuestion",["MOD_UTILITY_ASSET_PATH","$compile",function(MOD_UTILITY_ASSET_PATH,$compile){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-set-security-question.html",link:function(scope,elem,attrs){scope.setQuestion=!1,scope.$watch("setQuestion",function(newValue){if(newValue){var html="";html+='<div class="form-group"></div><label for="user-security-question">Security Question</label><input type="text" id="user-security-question" data-ng-model="user.security_question" class="form-control" placeholder="Enter security question" /></div><div class="form-group"></div><label for="user-security-answer">Security Answer</label><input type="text" id="user-security-answer" data-ng-model="user.security_answer" class="form-control" placeholder="Enter security answer" /></div>',angular.element("#set-question").append($compile(html)(scope))}})}}}]).directive("dfDownloadSdk",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:{btnSize:"=?"},templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-download-sdk.html",link:function(scope,elem,attrs){scope.sampleAppLinks=[{label:"Android",href:"https://github.com/dreamfactorysoftware/android-sdk",icon:""},{label:"iOS Objective-C",href:"https://github.com/dreamfactorysoftware/ios-sdk",icon:""},{label:"iOS Swift",href:"https://github.com/dreamfactorysoftware/ios-swift-sdk",icon:""},{label:"JavaScript",href:"https://github.com/dreamfactorysoftware/javascript-sdk",icon:""},{label:"AngularJS",href:"https://github.com/dreamfactorysoftware/angular-sdk",icon:""},{label:"Angular 2",href:"https://github.com/dreamfactorysoftware/angular2-sdk",icon:""},{label:"Ionic",href:"https://github.com/dreamfactorysoftware/ionic-sdk",icon:""},{label:"Titanium",href:"https://github.com/dreamfactorysoftware/titanium-sdk",icon:""},{label:"ReactJS",href:"https://github.com/dreamfactorysoftware/reactjs-sdk",icon:""},{label:".NET",href:"https://github.com/dreamfactorysoftware/.net-sdk",icon:""}]}}}]).directive("dfEmptySection",["MOD_UTILITY_ASSET_PATH",function(MOD_UTILITY_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-empty-section.html"}}]).directive("dfEmptySearchResult",["MOD_UTILITY_ASSET_PATH","$location",function(MOD_UTILITY_ASSET_PATH,$location){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-empty-search-result.html",link:function(scope,elem,attrs){$location.search()&&$location.search().filter&&(scope.$parent.filterText=$location.search()&&$location.search().filter?$location.search().filter:null)}}}]).directive("dfPopupLogin",["MOD_UTILITY_ASSET_PATH","$compile","$location","UserEventsService",function(MOD_UTILITY_ASSET_PATH,$compile,$location,UserEventsService){return{restrict:"A",scope:!1,link:function(scope,elem,attrs){scope.popupLoginOptions={showTemplate:!0},scope.openLoginWindow=function(errormsg){scope._openLoginWindow(errormsg)},scope._openLoginWindow=function(errormsg){$("#popup-login-container").html($compile('<div id="df-login-frame" style="overflow: hidden; position: absolute; top:0; z-index:99999; background: rgba(0, 0, 0, .8); width: 100%; height: 100%"><div style="padding-top: 120px;"><dreamfactory-user-login data-in-err-msg="errormsg.data.error.message" data-options="popupLoginOptions"></dreamfactory-user-login></div></div>')(scope))},scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){e.stopPropagation(),$("#df-login-frame").remove()}),scope.$on(UserEventsService.login.loginError,function(e,userDataObj){$("#df-login-frame").remove(),$location.url("/logout")})}}}]).directive("dfCopyrightFooter",["MOD_UTILITY_ASSET_PATH","APP_VERSION",function(MOD_UTILITY_ASSET_PATH,APP_VERSION){return{restrict:"E",scope:!1,templateUrl:MOD_UTILITY_ASSET_PATH+"views/df-copyright-footer.html",link:function(scope,elem,attrs){scope.version=APP_VERSION,scope.currentYear=(new Date).getFullYear()}}}]).service("dfObjectService",[function(){return{mergeDiff:function(obj1,obj2){for(var key in obj1)obj2.hasOwnProperty(key)||"$"===key.substr(0,1)||(obj2[key]=obj1[key]);return obj2},mergeObjects:function(obj1,obj2){for(var key in obj1)obj2[key]=obj1[key];return obj2},deepMergeObjects:function(obj1,obj2){var self=this;for(var _key in obj1)if(obj2.hasOwnProperty(_key))switch(Object.prototype.toString.call(obj2[_key])){case"[object Object]":obj2[_key]=self.deepMergeObjects(obj1[_key],obj2[_key]);break;case"[object Array]":obj2[_key]=obj1[_key];break;default:obj2[_key]=obj1[_key]}return obj2},compareObjectsAsJson:function(o,p){return angular.toJson(o)===angular.toJson(p)}}}]).service("XHRHelper",["INSTANCE_URL","APP_API_KEY","$cookies",function(INSTANCE_URL,APP_API_KEY,$cookies){function _isEmpty(obj){if(null==obj)return!0;if(obj.length>0)return!1;if(0===obj.length)return!0;for(var key in obj)if(hasOwnProperty.call(obj,key))return!1;return!0}function _setHeaders(_xhrObj,_headersDataObj){_xhrObj.setRequestHeader("X-DreamFactory-API-Key",APP_API_KEY);var currentUser=UserDataService.getCurrentUser();currentUser&&currentUser.session_tpken&&xhrObj.setRequestHeader("X-DreamFactory-Session-Token",currentUser.session_token);for(var _key in _headersDataObj)_xhrObj.setRequestHeader(_key,_headersDataObj[_key])}function _setParams(_paramsDataObj){var params="";if(!_isEmpty(_paramsDataObj)){params="?";for(var _key in _paramsDataObj)params+=_key+"="+_paramsDataObj[_key]+"&"}return""!==params&&(params=params.substring(0,params.length-1),encodeURI(params)),params}function _makeRequest(_method,_url,_async,_params,_headers,_mimeType){var xhr;xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");var params=_setParams(_params);if(xhr.open(_method,INSTANCE_URL.url+"/"+_url+params,_async),_setHeaders(xhr,_headers),xhr.overrideMimeType(_mimeType),xhr.send(),4===xhr.readyState)return xhr}function _ajax(optionsDataObj){if(!optionsDataObj.url||""===optionsDataObj.url)throw{module:"DreamFactory Utility Module",type:"error",provider:"dreamfactory",exception:"XHRHelper Request Failure: No URL provided"};var defaults={method:"GET",url:"",async:!1,params:{},headers:{},mimeType:"application/json"};for(var _key in defaults)optionsDataObj.hasOwnProperty(_key)&&(defaults[_key]=optionsDataObj[_key]);return _makeRequest(defaults.method,defaults.url,defaults.async,defaults.params,defaults.headers,defaults.mimeType)}return{ajax:function(requestOptions){return _ajax(requestOptions)}}}]).service("dfNotify",["dfApplicationData",function(dfApplicationData){function pnotify(messageOptions){PNotify.removeAll(),PNotify.prototype.options.styling="fontawesome",new PNotify({title:messageOptions.module,type:messageOptions.type,text:messageOptions.message,addclass:"stack_topleft",animation:"fade",animate_speed:"normal",hide:!0,delay:3e3,stack:stack_topleft,mouse_reset:!0})}function parseDreamfactoryError(errorDataObj){var result,error,resource,message;return"[object String]"===Object.prototype.toString.call(errorDataObj)?result=errorDataObj:(result="The server returned an unknown error.",(error=errorDataObj.data?errorDataObj.data.error:errorDataObj.error)&&((message=error.message)&&(result=message),1e3===error.code&&error.context&&(resource=error.context.resource,error=error.context.error,resource&&error&&(result="",angular.forEach(error,function(index){result&&(result+="\n"),result+=resource[index].message}))))),result}var stack_topleft={dir1:"down",dir2:"right",push:"top",firstpos1:25,firstpos2:25,spacing1:5,spacing2:5};$("#stack-context");return{success:function(options){pnotify(options)},error:function(options){options.message=parseDreamfactoryError(options.message),pnotify(options)},warn:function(options){pnotify(options)},confirmNoSave:function(){return confirm("Continue without saving?")},confirm:function(msg){return confirm(msg)}}}]).service("dfIconService",[function(){return function(){return{upgrade:"fa fa-fw fa-level-up",support:"fa fa-fw fa-support",launchpad:"fa fa-fw fa-bars",admin:"fa fa-fw fa-cog",login:"fa fa-fw fa-sign-in",register:"fa fa-fw fa-group",user:"fa fa-fw fa-user"}}}]).service("dfServerInfoService",["$window",function($window){return{currentServer:function(){return $window.location.origin}}}]).service("serviceTypeToGroup",[function(){return function(type,serviceTypes){var i,length,result=null;if(type&&serviceTypes)for(length=serviceTypes.length,i=0;i<length;i++)if(serviceTypes[i].name===type){result=serviceTypes[i].group;break}return result}}]).filter("orderAndShowSchema",[function(){return function(items,fields,reverse){var filtered=[];return angular.forEach(fields,function(field){angular.forEach(items,function(item){item.name===field.name&&1==field.active&&filtered.push(item)})}),reverse&&filtered.reverse(),filtered}}]).filter("orderAndShowValue",[function(){return function(items,fields,reverse){var filtered=[];return angular.forEach(fields,function(field){for(var _key in items)_key===field.name&&1==field.active&&filtered.push(items[_key])}),reverse&&filtered.reverse(),filtered}}]).filter("orderObjectBy",[function(){return function(items,field,reverse){function cmp(a,b){return a==b?0:a<b?-1:1}var filtered=[];if(angular.forEach(items,function(item){filtered.push(item)}),0===filtered.length)return filtered;switch(typeof(filtered[0].record?filtered[0].record[field]:filtered[0][field])){case"number":filtered.sort(function(a,b){return a.hasOwnProperty("record")&&b.hasOwnProperty("record")?(a=a.record[field],b=b.record[field]):(a=a[field],b=b[field]),a=null===a||void 0===a?0:a,b=null===b||void 0===b?0:b,cmp(Number(a),Number(b))});break;case"string":filtered.sort(function(a,b){a.hasOwnProperty("record")&&b.hasOwnProperty("record")?(a=a.record[field],b=b.record[field]):(a=a[field],b=b[field]),a=null===a||void 0===a?"":a,b=null===b||void 0===b?"":b;var upA=a.toUpperCase(),upB=b.toUpperCase();return upA<upB?-1:upA>upB?1:0});break;default:filtered.sort(function(a,b){a.hasOwnProperty("record")&&b.hasOwnProperty("record")?(a=a.record[field],b=b.record[field]):(a=a[field],b=b[field]);var upA=a=null===a||void 0===a?"":a,upB=b=null===b||void 0===b?"":b;return upA<upB?-1:upA>upB?1:0})}return reverse&&filtered.reverse(),filtered}}]).filter("dfFilterBy",[function(){return function(items,options){if(!options.on)return items;var filtered=[];return options&&options.field&&options.value?(options.regex||(options.regex=new RegExp(options.value,"i")),angular.forEach(items,function(item){options.regex.test(item[options.field])&&filtered.push(item)}),filtered):items}}]).filter("dfOrderExplicit",[function(){return function(items,order){var filtered=[],i=0;return angular.forEach(items,function(value,index){value.name===order[i]&&filtered.push(value),i++}),filtered}}]),angular.module("dfSystemConfig",["ngRoute","dfUtility","dfApplication"]).constant("MODSYSCONFIG_ROUTER_PATH","/config").constant("MODSYSCONFIG_ASSET_PATH","admin_components/adf-system-config/").config(["$routeProvider","MODSYSCONFIG_ROUTER_PATH","MODSYSCONFIG_ASSET_PATH",function($routeProvider,MODSYSCONFIG_ROUTER_PATH,MODSYSCONFIG_ASSET_PATH){$routeProvider.when(MODSYSCONFIG_ROUTER_PATH,{templateUrl:MODSYSCONFIG_ASSET_PATH+"views/main.html",controller:"SystemConfigurationCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("SystemConfigurationCtrl",["$scope","dfApplicationData","SystemConfigEventsService","SystemConfigDataService","dfObjectService","dfNotify","UserDataService",function($scope,dfApplicationData,SystemConfigEventsService,SystemConfigDataService,dfObjectService,dfNotify,UserDataService){var currentUser=UserDataService.getCurrentUser();$scope.isSysAdmin=currentUser&&currentUser.is_sys_admin,$scope.$parent.title="Config",$scope.es=SystemConfigEventsService.systemConfigController,$scope.buildLinks=function(checkData){var links=[];return checkData&&!$scope.apiData.environment||links.push({name:"system-info",label:"System Info",path:"system-info",active:0===links.length}),checkData&&!$scope.apiData.cache||links.push({name:"cache",label:"Cache",path:"cache",active:0===links.length}),checkData&&!$scope.apiData.cors||links.push({name:"cors",label:"CORS",path:"cors",active:0===links.length}),checkData&&!$scope.apiData.email_template||links.push({name:"email-templates",label:"Email Templates",path:"email-templates",active:0===links.length}),checkData&&!$scope.apiData.lookup||links.push({name:"global-lookup-keys",label:"Global Lookup Keys",path:"global-lookup-keys",active:0===links.length}),checkData&&!$scope.apiData.custom||links.push({name:"live-chat",label:"Live Chat",path:"live-chat",active:0===links.length}),links},$scope.links=$scope.buildLinks(!1),$scope.$emit("sidebar-nav:view:reset"),$scope.$on("$locationChangeStart",function(e){$scope.hasOwnProperty("systemConfig")&&(dfObjectService.compareObjectsAsJson($scope.systemConfig.record,$scope.systemConfig.recordCopy)||dfNotify.confirmNoSave()||e.preventDefault())}),$scope.dfLargeHelp={systemInfo:{title:"System Info Overview",text:"Displays current system information."},cacheConfig:{title:"Cache Overview",text:"Flush system-wide cache or per-service caches. Use the cache clearing buttons below to refresh any changes made to your system configuration values."},corsConfig:{title:"CORS Overview",text:"Enter allowed hosts and HTTP verbs. You can enter * for all hosts. Use the * option for development to enable application code running locally on your computer to communicate directly with your DreamFactory instance."},emailTemplates:{title:"Email Templates Overview",text:"Create and edit email templates for User Registration, User Invite, Password Reset, and your custom email services."},globalLookupKeys:{title:"Global Lookup Keys Overview",text:'An administrator can create any number of "key value" pairs attached to DreamFactory. The key values are automatically substituted on the server. For example, you can use Lookup Keys in Email Templates, as parameters in external REST Services, and in the username and password fields to connect to a SQL or NoSQL database. Mark any Lookup Key as private to securely encrypt the key value on the server and hide it in the user interface.<span style="color: red;">  Note that Lookup Keys for REST service configuration and credentials must be private.</span>'},chatConfig:{title:"Live Chat",text:"Enable or disable live chat with the DreamFactory product support team. This setting applies to all admin users on this DreamFactory instance."}},$scope.apiData={},$scope.loadTabData=function(){var apis=["cache","environment","cors","lookup","email_template","custom"];angular.forEach(apis,function(api){dfApplicationData.getApiData([api]).then(function(response){$scope.apiData[api]=response[0].resource?response[0].resource:response[0]},function(error){}).finally(function(){$scope.links=$scope.buildLinks(!0),$scope.$emit("sidebar-nav:view:reset")})})},$scope.loadTabData()}]).directive("dreamfactorySystemInfo",["MODSYSCONFIG_ASSET_PATH",function(MODSYSCONFIG_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/system-info.html",link:function(scope,elem,attrs){scope.upgrade=function(){window.top.location="http://wiki.dreamfactory.com/"};var watchEnvironment=scope.$watchCollection("apiData.environment",function(newValue,oldValue){newValue&&(scope.systemEnv=newValue)});scope.$on("$destroy",function(e){watchEnvironment()})}}}]).directive("dreamfactoryCacheConfig",["MODSYSCONFIG_ASSET_PATH","INSTANCE_URL","$http","dfNotify",function(MODSYSCONFIG_ASSET_PATH,INSTANCE_URL,$http,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/cache-config.html",link:function(scope,elem,attrs){scope.flushSystemCache=function(){$http.delete(INSTANCE_URL.url+"/system/cache").then(function(){var messageOptions={module:"Cache",type:"success",provider:"dreamfactory",message:"System-wide cache flushed."};dfNotify.success(messageOptions)},function(error){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:error};dfNotify.error(messageOptions)})},scope.flushServiceCache=function(index){$http.delete(INSTANCE_URL.url+"/system/cache/"+scope.apiData.cache[index].name).then(function(){var messageOptions={module:"Cache",type:"success",provider:"dreamfactory",message:scope.apiData.cache[index].label+" service cache flushed."};dfNotify.success(messageOptions)},function(error){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:error};dfNotify.error(messageOptions)})}}}}]).directive("dreamfactoryCorsConfig",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/cors-config.html",link:function(scope,elem,attrs){var CorsEntry=function(corsEntryData){var _new={id:null,path:"NEW",description:null,origin:"*",header:"*",exposed_header:null,max_age:0,method:[],supports_credentials:!1,enabled:!1};return corsEntryData=corsEntryData||_new,{__dfUI:{newHost:null===corsEntryData.id,tempId:Math.floor(1e5*Math.random())},record:angular.copy(corsEntryData),recordCopy:angular.copy(corsEntryData)}};scope.corsEntries=null,scope.selectedCorsEntry=null,scope.addCorsEntry=function(){scope._addCorsEntry()},scope.deleteCorsEntry=function(){dfNotify.confirm("Delete "+scope.selectedCorsEntry.record.path+"?")&&scope._deleteCorsEntry()},scope.saveCorsEntry=function(){var template=scope.selectedCorsEntry;if(null==template){messageOptions={module:"CORS",type:"warn",provider:"dreamfactory",message:"No host selected."};return dfNotify.warn(messageOptions),void angular.element("#select-cors-host").focus()}if(null===template.record.id){if("NEW"===template.record.path){messageOptions={module:"CORS",type:"warn",provider:"dreamfactory",message:"Entries should have a unique path pattern.  Please rename your entry to something other than the default 'new' name."};return void dfNotify.warn(messageOptions)}if(void 0===template.record.path){var messageOptions={module:"CORS",type:"error",provider:"dreamfactory",message:"Path is a required field."};return void dfNotify.error(messageOptions)}scope._saveCorsEntry(template)}else scope._updateCorsEntry(template)},scope._addCorsEntry=function(){scope.corsEntries.push(new CorsEntry),scope.selectedCorsEntry=scope.corsEntries[scope.corsEntries.length-1]},scope._deleteCorsEntry=function(){if(scope.selectedCorsEntry.__dfUI.newHost){for(var i=0;i<scope.corsEntries.length;){if(scope.corsEntries[i].__dfUI.tempId===scope.selectedCorsEntry.__dfUI.tempId){scope.corsEntries.splice(i,1);break}i++}var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry deleted successfully."};return dfNotify.success(messageOptions),void(scope.selectedCorsEntry=null)}var requestDataObj={params:{fields:"*"},data:scope.selectedCorsEntry.record};dfApplicationData.deleteApiData("cors",requestDataObj).$promise.then(function(result){var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry deleted successfully."};dfNotify.success(messageOptions),scope.selectedCorsEntry=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveCorsEntry=function(template){var requestDataObj={params:{fields:"*"},data:template.record};dfApplicationData.saveApiData("cors",requestDataObj).$promise.then(function(result){var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry created successfully."};dfNotify.success(messageOptions);for(var i=0;i<scope.corsEntries.length;){if(scope.corsEntries[i].record.path===result.path){var _newHost=new CorsEntry(result);scope.corsEntries[i]=_newHost,scope.selectedCorsEntry=_newHost}i++}},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateCorsEntry=function(template){var requestDataObj={params:{fields:"*"},data:template.record};dfApplicationData.updateApiData("cors",requestDataObj).$promise.then(function(result){var messageOptions={module:"CORS",type:"success",provider:"dreamfactory",message:"CORS entry updated successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope.helpTextCors={description:{title:"Description",text:"Enter a description for this entry."},path:{title:"Path",text:"Enter an absolute path or a pattern to match against incoming requests. Example: * allows any path, api/v2/* will allow any path with api/v2/ prefix. Path is matched by most accurate, i.e. api/v2/system/environment will match api/v2/* before *."},origins:{title:"Origin (Access-Control-Allow-Origin)",text:"Enter a comma-delimited list of origins that you would like to allow for this path. Enter * for allowing any origin."},headers:{title:"Headers (Access-Control-Allow-Headers)",text:"Enter a comma-delimited list of allowed headers. Enter * to allow any header."},exposed_headers:{title:"Exposed Headers (Access-Control-Expose-Headers)",text:"Enter a comma-delimited list of headers to expose."},max_age:{title:"Max Age (Access-Control-Max-Age)",text:"Enter max age. This indicates how long (in seconds) the results of a pre-flight request can be cached. Enter 0 for no caching."},methods:{title:"Methods (Access-Control-Allow-Methods)",text:"Select HTTP verbs/methods that are allowed."}};var watchCorsEntries=scope.$watchCollection("apiData.cors",function(newValue,oldValue){newValue&&(scope.corsEntries=[],angular.forEach(newValue,function(cors){scope.corsEntries.push(new CorsEntry(cors))}))});scope.$on("$destroy",function(e){watchCorsEntries()})}}}]).directive("dreamfactoryEmailTemplates",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/email-templates.html",link:function(scope,elem,attrs){var EmailTemplate=function(emailTemplateData){var _new={bcc:null,body_html:null,body_text:null,cc:null,defaults:[],description:null,from_email:null,from_name:null,id:null,name:"NEW EMAIL TEMPLATE",replay_to_email:null,replay_to_name:null,subject:null,to:null};return emailTemplateData=emailTemplateData||_new,{__dfUI:{newTemplate:null===emailTemplateData.id,tempId:Math.floor(1e5*Math.random())},record:angular.copy(emailTemplateData),recordCopy:angular.copy(emailTemplateData)}};scope.emailTemplates=null,scope.selectedEmailTemplate=null,scope.addEmailTemplate=function(){scope._addEmailTemplate()},scope.deleteEmailTemplate=function(){dfNotify.confirm("Delete "+scope.selectedEmailTemplate.record.name+"?")&&scope._deleteEmailTemplate()},scope.saveEmailTemplate=function(){var template=scope.selectedEmailTemplate;if(null==template){messageOptions={module:"Email Templates",type:"warn",provider:"dreamfactory",message:"No email template selected."};return dfNotify.warn(messageOptions),void angular.element("#select-email-template").focus()}if(null===template.record.id){if("NEW EMAIL TEMPLATE"===template.record.name){messageOptions={module:"Email Templates",type:"warn",provider:"dreamfactory",message:"Email templates should have a unique name.  Please rename your email template to something other than the default 'new' template name."};return void dfNotify.warn(messageOptions)}if(void 0===template.record.name){var messageOptions={module:"Email Templates",type:"error",provider:"dreamfactory",message:"Template Name is a required field."};return void dfNotify.error(messageOptions)}scope._saveEmailTemplate(template)}else scope._updateEmailTemplate(template)},scope._addEmailTemplate=function(){scope.emailTemplates.push(new EmailTemplate),scope.selectedEmailTemplate=scope.emailTemplates[scope.emailTemplates.length-1]},scope._deleteEmailTemplate=function(){if(scope.selectedEmailTemplate.__dfUI.newTemplate){for(var i=0;i<scope.emailTemplates.length;){if(scope.emailTemplates[i].__dfUI.tempId===scope.selectedEmailTemplate.__dfUI.tempId){scope.emailTemplates.splice(i,1);break}i++}var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template deleted successfully."};return dfNotify.success(messageOptions),void(scope.selectedEmailTemplate=null)}var requestDataObj={params:{fields:"*"},data:scope.selectedEmailTemplate.record};dfApplicationData.deleteApiData("email_template",requestDataObj).$promise.then(function(result){var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template deleted successfully."};dfNotify.success(messageOptions),scope.selectedEmailTemplate=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveEmailTemplate=function(template){var requestDataObj={params:{fields:"*"},data:template.record};dfApplicationData.saveApiData("email_template",requestDataObj).$promise.then(function(result){var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template created successfully."};dfNotify.success(messageOptions);for(var i=0;i<scope.emailTemplates.length;){if(scope.emailTemplates[i].record.name===result.name){var _newTemplate=new EmailTemplate(result);scope.emailTemplates[i]=_newTemplate,scope.selectedEmailTemplate=_newTemplate}i++}},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateEmailTemplate=function(template){var requestDataObj={params:{fields:"*"},data:template.record};dfApplicationData.updateApiData("email_template",requestDataObj).$promise.then(function(result){var messageOptions={module:"Email Templates",type:"success",provider:"dreamfactory",message:"Email template updated successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope.helpText={recipient:{title:"Recipient",text:"Enter recipient address. Enter multiple addresses separated by comma."},cc:{title:"Cc",text:"Enter cc address. Enter multiple addresses separated by comma."},bcc:{title:"Bcc",text:"Enter bcc address. Enter multiple addresses separated by comma."},reply_to_name:{title:"Reply to Name",text:"Enter reply to name."},reply_to_email:{title:"Reply to Email",text:"Enter reply to email."},attachment:{title:"Attachment",text:"You can enter URL for attachment. Enter multiple URLs separated by comma. You can use lookup keys here too. Example: {key1},{key2}."}};var watchEmailTemplates=scope.$watchCollection("apiData.email_template",function(newValue,oldValue){newValue&&(scope.emailTemplates=[],angular.forEach(newValue,function(email){scope.emailTemplates.push(new EmailTemplate(email))}))});scope.$on("$destroy",function(e){watchEmailTemplates()})}}}]).directive("dreamfactoryGlobalLookupKeys",["MODSYSCONFIG_ASSET_PATH","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/global-lookup-keys.html",link:function(scope,elem,attrs){var Lookup=function(lookupKeyData){var _new={id:null,name:"NEW",value:null};return lookupKeyData=lookupKeyData||_new,{__dfUI:{newLookup:null===lookupKeyData.id,tempId:Math.floor(1e5*Math.random())},record:angular.copy(lookupKeyData),recordCopy:angular.copy(lookupKeyData)}};scope.globalLookups=null,scope.selectedLookup=null,scope.addLookup=function(){scope._addLookup()},scope.deleteLookup=function(){dfNotify.confirm("Delete "+scope.selectedLookup.record.name+"?")&&scope._deleteLookup()},scope.saveLookup=function(){var lookup=scope.selectedLookup;if(null==lookup){messageOptions={module:"Global Lookup Keys",type:"warn",provider:"dreamfactory",message:"No lookup key selected."};return dfNotify.warn(messageOptions),void angular.element("#select-global-lookup").focus()}if(null===lookup.record.id){if("NEW"===lookup.record.name){messageOptions={module:"Global Lookup Keys",type:"warn",provider:"dreamfactory",message:"Lookup keys should have a unique name.  Please rename your key to something other than the default 'new' key name."};return void dfNotify.warn(messageOptions)}if(void 0===lookup.record.name){var messageOptions={module:"Global Lookup Keys",type:"error",provider:"dreamfactory",message:"Lookup keys should have a unique name.  Please name your key."};return void dfNotify.error(messageOptions)}scope._saveLookup(lookup)}else scope._updateLookup(lookup)},scope._addLookup=function(){scope.globalLookups.push(new Lookup),scope.selectedLookup=scope.globalLookups[scope.globalLookups.length-1]},scope._deleteLookup=function(){if(scope.selectedLookup.__dfUI.newLookup){for(var i=0;i<scope.globalLookups.length;){if(scope.globalLookups[i].__dfUI.tempId===scope.selectedLookup.__dfUI.tempId){scope.globalLookups.splice(i,1);break}i++}var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key deleted successfully."};return dfNotify.success(messageOptions),void(scope.selectedLookup=null)}var requestDataObj={params:{fields:"*"},data:scope.selectedLookup.record};dfApplicationData.deleteApiData("lookup",requestDataObj).$promise.then(function(result){var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key deleted successfully."};dfNotify.success(messageOptions),scope.selectedLookup=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveLookup=function(lookup){var requestDataObj={params:{fields:"*"},data:lookup.record};dfApplicationData.saveApiData("lookup",requestDataObj).$promise.then(function(result){var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key created successfully."};dfNotify.success(messageOptions);for(var i=0;i<scope.globalLookups.length;){if(scope.globalLookups[i].record.name===result.name){var _newLookup=new Lookup(result);scope.globalLookups[i]=_newLookup,scope.selectedLookup=_newLookup}i++}},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._updateLookup=function(lookup){var requestDataObj={params:{fields:"*"},data:lookup.record};dfApplicationData.updateApiData("lookup",requestDataObj).$promise.then(function(result){var messageOptions={module:"Global Lookup Keys",type:"success",provider:"dreamfactory",message:"Lookup key updated successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})};var watchGlobalLookupKeys=scope.$watchCollection("apiData.lookup",function(newValue,oldValue){newValue&&(scope.globalLookups=[],angular.forEach(newValue,function(lookup){scope.globalLookups.push(new Lookup(lookup))}))});scope.$on("$destroy",function(e){watchGlobalLookupKeys()})}}}]).directive("dreamfactoryLiveChatConfig",["MODSYSCONFIG_ASSET_PATH","INSTANCE_URL","$http","dfApplicationData","dfNotify",function(MODSYSCONFIG_ASSET_PATH,INSTANCE_URL,$http,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MODSYSCONFIG_ASSET_PATH+"views/live-chat-config.html",link:function(scope,elem,attrs){scope.saveChatConfig=function(){var func,data;func=scope.hasChatConfig?$http.put:$http.post,data={name:"chat",value:scope.chatEnabled},func(INSTANCE_URL.url+"/system/custom",{resource:[data]}).then(function(){scope.hasChatConfig=!0;var messageOptions={module:"Live Chat",type:"success",provider:"dreamfactory",message:"Live chat config updated."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){Comm100API.showChat(scope.chatEnabled),dfApplicationData.deleteApiDataFromCache("custom")})};var watchCustom=scope.$watchCollection("apiData.custom",function(newValue,oldValue){if(newValue){var chatEnabled=!0,custom=newValue.filter(function(obj){return"chat"===obj.name});custom.length>0&&(chatEnabled=Boolean(custom[0].value)),scope.hasChatConfig=custom.length>0,scope.chatEnabled=chatEnabled}});scope.$on("$destroy",function(e){watchCustom()})}}}]).service("SystemConfigEventsService",[function(){return{systemConfigController:{updateSystemConfigRequest:"update:systemconfig:request",updateSystemConfigSuccess:"update:systemconfig:success",updateSystemConfigError:"update:systemconfig:error"}}}]).service("SystemConfigDataService",["dfApplicationData",function(dfApplicationData){return{getSystemConfig:function(){return dfApplicationData.getApiDataSync("environment")}}}]),angular.module("dfAdmins",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_ADMIN_ROUTER_PATH","/admins").constant("MOD_ADMIN_ASSET_PATH","admin_components/adf-admins/").config(["$routeProvider","MOD_ADMIN_ROUTER_PATH","MOD_ADMIN_ASSET_PATH",function($routeProvider,MOD_ADMIN_ROUTER_PATH,MOD_ADMIN_ASSET_PATH){$routeProvider.when(MOD_ADMIN_ROUTER_PATH,{templateUrl:MOD_ADMIN_ASSET_PATH+"views/main.html",controller:"AdminsCtrl",resolve:{checkAdmin:["checkAdminService",function(checkAdminService){return checkAdminService.checkAdmin()}],checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("AdminsCtrl",["$rootScope","$scope","dfApplicationData","dfNotify","$location",function($rootScope,$scope,dfApplicationData,dfNotify,$location){$scope.$parent.title="Admins",$scope.links=[{name:"manage-admins",label:"Manage",path:"manage-admins"},{name:"create-admin",label:"Create",path:"create-admin"}],$scope.emptySearchResult={title:"You have no Admins that match your search criteria!",text:""},$scope.apiData=null,$scope.loadTabData=function(){$scope.dataLoading=!0;var apis=["admin"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData},function(error){error&&error.error&&(401===error.error.code||403===error.error.code)&&$location.url("/home");var messageOptions={module:"Admins",provider:"dreamfactory",type:"error",message:"To use the Admins tab your role must allow GET access to system/admin/*. To create, update, or delete admins you need POST, PUT, DELETE access to /system/admin/*."};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData()}]).directive("dfAdminDetails",["INSTANCE_URL","MOD_ADMIN_ASSET_PATH","dfApplicationData","dfNotify","dfObjectService","$http","$cookies","UserDataService","$cookieStore","SystemConfigDataService",function(INSTANCE_URL,MOD_ADMIN_ASSET_PATH,dfApplicationData,dfNotify,dfObjectService,$http,$cookies,UserDataService,$cookieStore,SystemConfigDataService){return{restrict:"E",scope:{adminData:"=?",newAdmin:"=?"},templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-admin-details.html",link:function(scope,elem,attrs){var Admin=function(adminData){var _admin={name:null,first_name:null,last_name:null,email:null,phone:null,confirmed:!1,is_active:!0,user_source:0,user_data:[],password:null,lookup_by_user_id:[]};return adminData=adminData||_admin,{__dfUI:{selected:!1},record:angular.copy(adminData),recordCopy:angular.copy(adminData)}};scope.loginAttribute="email";var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=systemConfig.authentication.login_attribute),scope.admin=null,scope.newAdmin&&(scope.admin=new Admin),scope.sendEmailOnCreate=!1,scope._validateData=function(){if(scope.newAdmin){if(!scope.setPassword&&!scope.sendEmailOnCreate)return dfNotify.error({module:"Users",type:"error",message:"Please select email invite or set password."}),!1;if(scope.setPassword&&scope.sendEmailOnCreate)return dfNotify.error({module:"Users",type:"error",message:"Please select email invite or set password, but not both."}),!1}return!scope.setPassword||scope.password.new_password===scope.password.verify_password||(dfNotify.error({module:"Admins",type:"error",message:"Passwords do not match."}),!1)},scope.saveAdmin=function(){scope._validateData()&&(scope.newAdmin?scope._saveAdmin():scope._updateAdmin())},scope.cancelEditor=function(){scope._prepareAdminData(),(dfObjectService.compareObjectsAsJson(scope.admin.record,scope.admin.recordCopy)||dfNotify.confirmNoSave())&&scope.closeEditor()},scope.closeEditor=function(){scope.adminData=null,scope.admin=new Admin,scope.lookupKeys=[],scope._resetUserPasswordForm(),scope.$emit("sidebar-nav:view:reset")},scope._prepareAdminData=function(){scope._preparePasswordData(),scope._prepareLookupKeyData()},scope._saveAdmin=function(){scope._prepareAdminData(),scope.isAllTabsSelected?scope.admin.record.access_by_tabs=null:scope.admin.record.access_by_tabs=scope.accessByTabs;var requestDataObj={params:{fields:"*",related:"lookup_by_user_id",send_invite:scope.sendEmailOnCreate},data:scope.admin.record};dfApplicationData.saveApiData("admin",requestDataObj).$promise.then(function(result){var messageOptions={module:"Admins",provider:"dreamfactory",type:"success",message:"Admin saved successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._updateAdmin=function(){scope._prepareAdminData();var requestDataObj={params:{fields:"*",related:"lookup_by_user_id"},data:scope.admin.record};dfApplicationData.updateApiData("admin",requestDataObj).$promise.then(function(result){if(result.session_token){var existingUser=UserDataService.getCurrentUser();existingUser.session_token=result.session_token,UserDataService.setCurrentUser(existingUser)}var messageOptions={module:"Admins",provider:"dreamfactory",type:"success",message:"Admin updated successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchAdminData=scope.$watch("adminData",function(newValue,oldValue){newValue&&(scope.admin=new Admin(newValue),$http.get(INSTANCE_URL.url+"/system/admin/"+scope.admin.record.id+"/session?related=user_to_app_to_role_by_user_id").then(function(result){result.data.user_to_app_to_role_by_user_id.length>0&&(scope.adminRoleId=result.data.user_to_app_to_role_by_user_id[0].role_id)},function(result){scope.adminRoleId=null,console.error(result)}))}),watchPassword=scope.$watch("setPassword",function(newValue){newValue?scope.password={new_password:"",verify_password:""}:(scope.password=null,scope.identical=!0)});scope.$on("$destroy",function(e){watchAdminData(),watchPassword()}),scope.dfHelp={adminConfirmation:{title:"Admin Confirmation Info",text:"Is the admin confirmed? You can send an invite to unconfirmed admins."},adminLookupKeys:{title:"Admin Lookup Keys Info",text:'The DreamFactory administrator can create any number of "key value" pairs attached to a admin. The key values are automatically substituted on the server. For example, key names can be used in the username and password fields required to hook up a SQL or NoSQL database. They can also be used in Email Templates or as parameters for external REST services. Any Lookup Key can be marked as private, and in this case the key value is securely encrypted on the server and is no longer accessible through the platform interface. Lookup keys for service configuration and credentials must be made private.'}}}}}]).directive("dfConfirmAdmin",["INSTANCE_URL","MOD_ADMIN_ASSET_PATH","$http","SystemConfigDataService","dfNotify",function(INSTANCE_URL,MOD_ADMIN_ASSET_PATH,$http,SystemConfigDataService,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-input-confirm-admin.html",link:function(scope,elem,attrs){scope.sendEmailOnCreate=!1,scope.invite=function(){$http({url:INSTANCE_URL.url+"/system/admin/"+scope.admin.record.id,method:"PATCH",params:{send_invite:!0}}).then(function(result){var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admin invite has been sent."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Admins",type:"error",provider:"dreamfactory",exception:reject.data};dfNotify.error(messageOptions)})}}}}]).directive("dfAccessByTabs",["INSTANCE_URL","MOD_ADMIN_ASSET_PATH",function(INSTANCE_URL,MOD_ADMIN_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-access-by-tabs.html",link:function(scope,elem,attrs){scope.tabs=[{name:"apps",title:"Apps",checked:!0},{name:"admins",title:"Admins",checked:!0},{name:"users",title:"Users",checked:!0},{name:"services",title:"Services",checked:!0},{name:"apidocs",title:"API Docs",checked:!0},{name:"schema/data",title:"Schema/Data",checked:!0},{name:"files",title:"Files",checked:!0},{name:"scripts",title:"Scripts",checked:!0},{name:"config",title:"Config",checked:!0},{name:"packages",title:"Packages",checked:!0},{name:"limits",title:"Limits",checked:!0}],scope.accessByTabs=["apps","admins","users","services","apidocs","schema/data","files","scripts","config","packages","limits"],scope.isAllTabsSelected=scope.accessByTabs.length===scope.tabs.length,scope.selectTab=function(tab){if(tab.checked)scope.accessByTabs.includes(tab.name)||scope.accessByTabs.push(tab.name);else{var toDel=scope.accessByTabs.indexOf(tab.name);scope.accessByTabs.splice(toDel,1)}scope.isAllTabsSelected=scope.accessByTabs.length===scope.tabs.length},scope.selectAllTabs=function(isSelected){var arr=[];scope.isAllTabsSelected=isSelected,scope.isAllTabsSelected?(scope.tabs.forEach(function(tab){tab.checked=!0,arr.push(tab.name)}),scope.accessByTabs=arr):(scope.tabs.forEach(function(tab){tab.checked=!1}),scope.accessByTabs=[])}}}}]).directive("dfAdminLookupKeys",["MOD_ADMIN_ASSET_PATH",function(MOD_ADMIN_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-input-lookup-keys.html",link:function(scope,elem,attrs){var LookupKey=function(lookupKeyData){var _new={name:"",value:"",private:!1,allow_admin_update:!1};return{__dfUI:{unique:!0},record:angular.copy(lookupKeyData||_new),recordCopy:angular.copy(lookupKeyData||_new)}};scope.lookupKeys=[],scope.sameKeys=[],scope.newKey=function(){scope._newKey()},scope.removeKey=function(index){scope._removeKey(index)},scope._isUniqueKey=function(){scope.sameKeys=[],angular.forEach(scope.lookupKeys,function(value,index){angular.forEach(scope.lookupKeys,function(_value,_index){index!==_index&&value.record.name===_value.record.name&&scope.sameKeys.push(value)})})},scope._preparePasswordData=function(){scope.setPassword?scope.admin.record.password=scope.password.new_password:scope.admin.record.password&&delete scope.admin.record.password},scope._prepareLookupKeyData=function(){var tempArr=[];angular.forEach(scope.lookupKeys,function(lk){tempArr.push(lk.record)}),scope.admin.record.lookup_by_user_id=tempArr},scope._newKey=function(){scope.lookupKeys.push(new LookupKey)},scope._removeKey=function(index){void 0!==scope.lookupKeys[index].record.user_id?scope.lookupKeys[index].record.user_id=null:scope.lookupKeys.splice(index,1)};var watchAdmin=scope.$watch("admin",function(newValue,oldValue){newValue&&(newValue.record.hasOwnProperty("lookup_by_user_id")&&newValue.record.lookup_by_user_id.length>0?(scope.lookupKeys=[],angular.forEach(newValue.record.lookup_by_user_id,function(lookupKeyData){scope.lookupKeys.push(new LookupKey(lookupKeyData))})):scope.lookupKeys=[])}),watchSameKeys=scope.$watch("sameKeys",function(newValue,oldValue){0!==newValue.length?angular.forEach(scope.lookupKeys,function(lk){angular.forEach(newValue,function(_lk){lk.record.name===_lk.record.name?lk.__dfUI.unique=!1:lk.__dfUI.unique=!0})}):angular.forEach(scope.lookupKeys,function(lk){lk.__dfUI.unique=!0})});scope.$watchCollection("lookupKeys",function(newValue,oldValue){newValue&&scope._isUniqueKey()});scope.$on("$destroy",function(e){watchAdmin(),watchSameKeys()})}}}]).directive("dfManageAdmins",["$rootScope","MOD_ADMIN_ASSET_PATH","dfApplicationData","dfNotify","$location",function($rootScope,MOD_ADMIN_ASSET_PATH,dfApplicationData,dfNotify,$location){return{restrict:"E",scope:!1,templateUrl:MOD_ADMIN_ASSET_PATH+"views/df-manage-admins.html",link:function(scope,elem,attrs){var ManagedAdmin=function(adminData){return adminData&&(adminData.confirm_msg="N/A",!0===adminData.confirmed?adminData.confirm_msg="Confirmed":!1===adminData.confirmed&&(adminData.confirm_msg="Pending"),!0===adminData.expired&&(adminData.confirm_msg="Expired")),{__dfUI:{selected:!1},record:adminData}};scope.uploadFile=null,scope.admins=null,scope.currentEditAdmin=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"email",label:"Email",active:!0},{name:"name",label:"Display Name",active:!0},{name:"first_name",label:"First Name",active:!0},{name:"last_name",label:"Last Name",active:!0},{name:"is_active",label:"Active",active:!0},{name:"confirmed",label:"Registration",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedAdmins=[],scope.editAdmin=function(admin){scope._editAdmin(admin)},scope.deleteAdmin=function(admin){dfNotify.confirm("Delete "+admin.record.name+"?")&&scope._deleteAdmin(admin)},scope.deleteSelectedAdmins=function(){dfNotify.confirm("Delete selected admins?")&&scope._deleteSelectedAdmins()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(admin){scope._setSelected(admin)},scope._editAdmin=function(admin){scope.currentEditAdmin=admin},scope._deleteAdmin=function(admin){var requestDataObj={params:{id:admin.record.id}};dfApplicationData.deleteApiData("admin",requestDataObj).$promise.then(function(result){var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admin successfully deleted."};dfNotify.success(messageOptions),admin.__dfUI.selected&&scope.setSelected(admin),scope.$broadcast("toolbar:paginate:admin:delete")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(admin){for(var i=0;i<scope.selectedAdmins.length;){if(admin.record.id===scope.selectedAdmins[i])return admin.__dfUI.selected=!1,void scope.selectedAdmins.splice(i,1);i++}admin.__dfUI.selected=!0,scope.selectedAdmins.push(admin.record.id)},scope._deleteSelectedAdmins=function(){var requestDataObj={params:{ids:scope.selectedAdmins.join(","),rollback:!0}};dfApplicationData.deleteApiData("admin",requestDataObj).$promise.then(function(result){var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admins deleted successfully."};dfNotify.success(messageOptions),scope.selectedAdmins=[],scope.$broadcast("toolbar:paginate:admin:reset")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchApiData=scope.$watchCollection(function(){return dfApplicationData.getApiDataFromCache("admin")},function(newValue,oldValue){var _admins=[];newValue&&angular.forEach(newValue,function(admin){_admins.push(new ManagedAdmin(admin))}),scope.admins=_admins});scope.$on("$destroy",function(e){watchApiData(),scope.$broadcast("toolbar:paginate:admin:reset")})}}}]).directive("dfAdminLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfImportAdmins",["MOD_ADMIN_ASSET_PATH","INSTANCE_URL","$http","dfTableEventService","dfNotify",function(MOD_ADMIN_ASSET_PATH,INSTANCE_URL,$http,dfTableEventService,dfNotify){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.importType=null,scope.field=angular.element("#upload"),scope.importAdmins=function(){scope._importAdmins()},scope._importAdmins=function(){scope.field.trigger("click")},scope._uploadFile=function(fileObj){return $http({method:"POST",url:INSTANCE_URL.url+"/system/admin",headers:{"Content-Type":"csv"===scope.importType?"text/csv":"application/"+scope.importType},params:{},data:fileObj})},scope._checkFileType=function(fileObj){var extension=fileObj.name.split("."),value=!1;switch(extension=extension[extension.length-1]){case"csv":case"json":case"xml":scope.importType=extension,value=!0;break;default:value=!1}return value},scope.$watch("uploadFile",function(newValue,oldValue){if(!newValue)return!1;if(newValue=scope.uploadFile,!scope._checkFileType(newValue)){scope.uploadFile=null;var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:"Acceptable file formats are csv, json, and xml."};return dfNotify.error(messageOptions),!1}scope._uploadFile(newValue).then(function(result){scope.importType=null,scope.uploadFile=null,$("#upload").val("");var messageOptions={module:"Admins",type:"success",provider:"dreamfactory",message:"Admins imported successfully."};dfNotify.success(messageOptions),scope.$broadcast("toolbar:paginate:admin:reset")},function(reject){scope.importType=null,scope.uploadFile=null,$("#upload").val("");var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions),scope.$broadcast("toolbar:paginate:admin:reset")})})}}}]).directive("dfExportAdmins",["MOD_ADMIN_ASSET_PATH","INSTANCE_URL","UserDataService","$http","$window","APP_API_KEY",function(MOD_ADMIN_ASSET_PATH,INSTANCE_URL,UserDataService,$http,$window,APP_API_KEY){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.fileFormatStr=null,scope.exportAdmins=function(fileFormatStr){scope._exportAdmins(fileFormatStr)},scope._getFile=function(urlStr){return $http({method:"GET",url:urlStr})},scope._exportAdmins=function(fileFormatStr){if("csv"===fileFormatStr||"json"===fileFormatStr||"xml"===fileFormatStr){scope.fileFormatStr=fileFormatStr;var params="file=admin."+scope.fileFormatStr+"&api_key="+APP_API_KEY,currentUser=UserDataService.getCurrentUser();currentUser&&currentUser.session_token&&(params+="&session_token="+currentUser.session_token),$window.location.href=INSTANCE_URL.url+"/system/admin?"+params}}}}}]),angular.module("dfUsers",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_USER_ROUTER_PATH","/users").constant("MOD_USER_ASSET_PATH","admin_components/adf-users/").config(["$routeProvider","MOD_USER_ROUTER_PATH","MOD_USER_ASSET_PATH",function($routeProvider,MOD_USER_ROUTER_PATH,MOD_USER_ASSET_PATH){$routeProvider.when(MOD_USER_ROUTER_PATH,{templateUrl:MOD_USER_ASSET_PATH+"views/main.html",controller:"UsersCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("UsersCtrl",["$rootScope","$scope","dfApplicationData","dfNotify","$location",function($rootScope,$scope,dfApplicationData,dfNotify,$location){$scope.$parent.title="Users",$scope.links=[{name:"manage-users",label:"Manage",path:"manage-users"},{name:"create-user",label:"Create",path:"create-user"}],$scope.emptySectionOptions={title:"You have no Users!",text:"Click the button below to get started adding users.  You can always create new users by clicking the tab located in the section menu to the left.",buttonText:"Create A User!",viewLink:$scope.links[1],active:!1},$scope.emptySearchResult={title:"You have no Users that match your search criteria!",text:""},$scope.apiData=null,$scope.loadTabData=function(){$scope.dataLoading=!0;var apis=["user","role","app"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData},function(error){var msg="There was an error loading data for the Users tab. Please try refreshing your browser and logging in again.";error&&error.error&&(401===error.error.code||403===error.error.code)&&(msg="To use the Users tab your role must allow GET access to system/user, system/role, and system/app. To create, update, or delete users you need POST, PUT, DELETE access to /system/user and/or /system/user/*.",$location.url("/home"));var messageOptions={module:"Users",provider:"dreamfactory",type:"error",message:msg};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData()}]).directive("dfUserDetails",["MOD_USER_ASSET_PATH","dfApplicationData","dfNotify","dfObjectService","INSTANCE_URL","$http","$cookies","UserDataService","$cookieStore","$rootScope","SystemConfigDataService",function(MOD_USER_ASSET_PATH,dfApplicationData,dfNotify,dfObjectService,INSTANCE_URL,$http,$cookies,UserDataService,$cookieStore,$rootScope,SystemConfigDataService){return{restrict:"E",scope:{userData:"=?",newUser:"=?",apiData:"=?"},templateUrl:MOD_USER_ASSET_PATH+"views/df-user-details.html",link:function(scope,elem,attrs){var User=function(userData){var _user={name:null,first_name:null,last_name:null,email:null,phone:null,confirmed:!1,is_active:!0,default_app_id:null,user_source:0,user_data:[],password:null,lookup_by_user_id:[],user_to_app_to_role_by_user_id:[]};return userData=userData||_user,{__dfUI:{selected:!1},record:angular.copy(userData),recordCopy:angular.copy(userData)}};scope.loginAttribute="email";var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=systemConfig.authentication.login_attribute),scope.user=null,scope.newUser&&(scope.user=new User),scope.sendEmailOnCreate=!1,scope._validateData=function(){if(scope.newUser){if(!scope.setPassword&&!scope.sendEmailOnCreate)return dfNotify.error({module:"Users",type:"error",message:"Please select email invite or set password."}),!1;if(scope.setPassword&&scope.sendEmailOnCreate)return dfNotify.error({module:"Users",type:"error",message:"Please select email invite or set password, but not both."}),!1}return!scope.setPassword||scope.password.new_password===scope.password.verify_password||(dfNotify.error({module:"Users",type:"error",message:"Passwords do not match."}),!1)},scope.saveUser=function(){scope._validateData()&&(scope.newUser?scope._saveUser():scope._updateUser())},scope.cancelEditor=function(){scope._prepareUserData(),(dfObjectService.compareObjectsAsJson(scope.user.record,scope.user.recordCopy)||dfNotify.confirmNoSave())&&scope.closeEditor()},scope.closeEditor=function(){scope.userData=null,scope.user=new User,scope.roleToAppMap={},scope.lookupKeys=[],scope._resetUserPasswordForm(),scope.$emit("sidebar-nav:view:reset")},scope._prepareUserData=function(){scope._preparePasswordData(),scope._prepareLookupKeyData()},scope._saveUser=function(){scope._prepareUserData();var requestDataObj={params:{fields:"*",related:"user_to_app_to_role_by_user_id,lookup_by_user_id",send_invite:scope.sendEmailOnCreate},data:scope.user.record};dfApplicationData.saveApiData("user",requestDataObj).$promise.then(function(result){var messageOptions={module:"Users",provider:"dreamfactory",type:"success",message:"User saved successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._updateUser=function(){scope._prepareUserData();var requestDataObj={params:{fields:"*",related:"user_to_app_to_role_by_user_id,lookup_by_user_id"},data:scope.user.record};dfApplicationData.updateApiData("user",requestDataObj).$promise.then(function(result){if(result.session_token){var existingUser=UserDataService.getCurrentUser();existingUser.session_token=result.session_token,UserDataService.setCurrentUser(existingUser)}var messageOptions={module:"Users",provider:"dreamfactory",type:"success",message:"User updated successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchUserData=scope.$watch("userData",function(newValue,oldValue){newValue&&(scope.user=new User(newValue))}),watchPassword=scope.$watch("setPassword",function(newValue){newValue?scope.password={new_password:"",verify_password:""}:(scope.password=null,scope.identical=!0)});scope.$on("$destroy",function(e){watchUserData(),watchPassword()}),scope.dfHelp={userRole:{title:"User Role Info",text:"Roles provide a way to grant or deny access to specific applications and services on a per-user basis. Each user who is not a system admin must be assigned a role. Go to the Roles tab to create and manage roles."},userConfirmation:{title:"User Confirmation Info",text:"Is the user confirmed? You can send an invite to unconfirmed users."},userLookupKeys:{title:"User Lookup Keys Info",text:'The DreamFactory administrator can create any number of "key value" pairs attached to a user. The key values are automatically substituted on the server. For example, key names can be used in the username and password fields required to hook up a SQL or NoSQL database. They can also be used in Email Templates or as parameters for external REST services. Any Lookup Key can be marked as private, and in this case the key value is securely encrypted on the server and is no longer accessible through the platform interface. Lookup keys for service configuration and credentials must be made private.'}}}}}]).directive("dfConfirmUser",["INSTANCE_URL","MOD_USER_ASSET_PATH","$http","dfNotify",function(INSTANCE_URL,MOD_USER_ASSET_PATH,$http,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-input-confirm-user.html",link:function(scope,elem,attrs){scope.sendEmailOnCreate=!1,scope.invite=function(){$http({url:INSTANCE_URL.url+"/system/user/"+scope.user.record.id,method:"PATCH",params:{send_invite:!0}}).then(function(result){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"User invite has been sent."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Users",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}}}}]).directive("dfUserRoles",["MOD_USER_ASSET_PATH",function(MOD_USER_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-user-roles.html",link:function(scope,elem,attrs){scope.roleToAppMap={},scope.$watch("user",function(){scope.user&&scope.user.record.user_to_app_to_role_by_user_id.forEach(function(item){scope.roleToAppMap[item.app_id]=item.role_id})}),scope.selectRole=function(){Object.keys(scope.roleToAppMap).forEach(function(item){scope.roleToAppMap[item]?scope._updateRoleApp(item,scope.roleToAppMap[item]):scope._removeRoleApp(item,scope.roleToAppMap[item])})},scope._removeRoleApp=function(appId){var existing=scope.user.record.user_to_app_to_role_by_user_id.filter(function(item){return item.app_id==appId})[0];existing&&(existing.user_id=null)},scope._updateRoleApp=function(appId,roleId){var existing=scope.user.record.user_to_app_to_role_by_user_id.filter(function(item){return item.app_id==appId})[0];existing?(existing.app_id=appId,existing.role_id=roleId):scope.user.record.user_to_app_to_role_by_user_id.push({app_id:appId,role_id:roleId,user_id:scope.user.record.id})}}}}]).directive("dfUserLookupKeys",["MOD_USER_ASSET_PATH",function(MOD_USER_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-input-lookup-keys.html",link:function(scope,elem,attrs){var LookupKey=function(lookupKeyData){var _new={name:"",value:"",private:!1,allow_user_update:!1};return{__dfUI:{unique:!0},record:angular.copy(lookupKeyData||_new),recordCopy:angular.copy(lookupKeyData||_new)}};scope.lookupKeys=[],scope.sameKeys=[],scope.newKey=function(){scope._newKey()},scope.removeKey=function(index){scope._removeKey(index)},scope._isUniqueKey=function(){scope.sameKeys=[],angular.forEach(scope.lookupKeys,function(value,index){angular.forEach(scope.lookupKeys,function(_value,_index){index!==_index&&value.record.name===_value.record.name&&scope.sameKeys.push(value)})})},scope._preparePasswordData=function(){scope.setPassword?scope.user.record.password=scope.password.new_password:scope.user.record.password&&delete scope.user.record.password},scope._prepareLookupKeyData=function(){var tempArr=[];angular.forEach(scope.lookupKeys,function(lk){tempArr.push(lk.record)}),scope.user.record.lookup_by_user_id=tempArr},scope._newKey=function(){scope.lookupKeys.push(new LookupKey)},scope._removeKey=function(index){void 0!==scope.lookupKeys[index].record.user_id?scope.lookupKeys[index].record.user_id=null:scope.lookupKeys.splice(index,1)};var watchUser=scope.$watch("user",function(newValue,oldValue){newValue&&(newValue.record.hasOwnProperty("lookup_by_user_id")&&newValue.record.lookup_by_user_id.length>0?(scope.lookupKeys=[],angular.forEach(newValue.record.lookup_by_user_id,function(lookupKeyData){scope.lookupKeys.push(new LookupKey(lookupKeyData))})):scope.lookupKeys=[])}),watchSameKeys=scope.$watch("sameKeys",function(newValue,oldValue){0!==newValue.length?angular.forEach(scope.lookupKeys,function(lk){angular.forEach(newValue,function(_lk){lk.record.name===_lk.record.name?lk.__dfUI.unique=!1:lk.__dfUI.unique=!0})}):angular.forEach(scope.lookupKeys,function(lk){lk.__dfUI.unique=!0})}),watchLookupKeys=scope.$watchCollection("lookupKeys",function(newValue,oldValue){newValue&&scope._isUniqueKey()});scope.$on("$destroy",function(e){watchUser(),watchSameKeys(),watchLookupKeys()})}}}]).directive("dfManageUsers",["$rootScope","MOD_USER_ASSET_PATH","dfApplicationData","dfNotify",function($rootScope,MOD_USER_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_USER_ASSET_PATH+"views/df-manage-users.html",link:function(scope,elem,attrs){var ManagedUser=function(userData){return userData&&(userData.confirm_msg="N/A",!0===userData.confirmed?userData.confirm_msg="Confirmed":!1===userData.confirmed&&(userData.confirm_msg="Pending"),!0===userData.expired&&(userData.confirm_msg="Expired")),{__dfUI:{selected:!1},record:userData}};scope.uploadFile={path:""},scope.users=null,scope.currentEditUser=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"email",label:"Email",active:!0},{name:"name",label:"Display Name",active:!0},{name:"first_name",label:"First Name",active:!0},{name:"last_name",label:"Last Name",active:!0},{name:"is_active",label:"Active",active:!0},{name:"confirmed",label:"Registration",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedUsers=[],scope.editUser=function(user){scope._editUser(user)},scope.deleteUser=function(user){dfNotify.confirm("Delete "+user.record.name+"?")&&scope._deleteUser(user)},scope.deleteSelectedUsers=function(){dfNotify.confirm("Delete selected users?")&&scope._deleteSelectedUsers()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(user){scope._setSelected(user)},scope._editUser=function(user){scope.currentEditUser=user},scope._deleteUser=function(user){var requestDataObj={params:{id:user.record.id}};dfApplicationData.deleteApiData("user",requestDataObj).$promise.then(function(result){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"User successfully deleted."};dfNotify.success(messageOptions),user.__dfUI.selected&&scope.setSelected(user),scope.$broadcast("toolbar:paginate:user:delete")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(user){for(var i=0;i<scope.selectedUsers.length;){if(user.record.id===scope.selectedUsers[i])return user.__dfUI.selected=!1,void scope.selectedUsers.splice(i,1);i++}user.__dfUI.selected=!0,scope.selectedUsers.push(user.record.id)},scope._deleteSelectedUsers=function(){var requestDataObj={params:{ids:scope.selectedUsers.join(","),rollback:!0}};dfApplicationData.deleteApiData("user",requestDataObj).$promise.then(function(result){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Users deleted successfully."};dfNotify.success(messageOptions),scope.selectedUsers=[],scope.$broadcast("toolbar:paginate:user:reset")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchApiData=scope.$watchCollection(function(){return dfApplicationData.getApiDataFromCache("user")},function(newValue,oldValue){var _users=[];newValue&&(angular.forEach(newValue,function(user){_users.push(new ManagedUser(user))}),scope.emptySectionOptions.active=0===_users.length),scope.users=_users});scope.$on("$destroy",function(e){watchApiData(),scope.$broadcast("toolbar:paginate:user:reset")})}}}]).directive("dfUserLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfImportUsers",["MOD_USER_ASSET_PATH","INSTANCE_URL","$http","dfTableEventService","dfNotify",function(MOD_USER_ASSET_PATH,INSTANCE_URL,$http,dfTableEventService,dfNotify){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.importType=null,scope.field=angular.element("#upload"),scope.importUsers=function(){scope._importUsers()},scope._importUsers=function(){scope.field.trigger("click")},scope._uploadFile=function(fileObj){return $http({method:"POST",url:INSTANCE_URL.url+"/system/user",headers:{"Content-Type":"csv"===scope.importType?"text/csv":"application/"+scope.importType},params:{},data:fileObj})},scope._checkFileType=function(fileObj){var extension=fileObj.name.split("."),value=!1;switch(extension=extension[extension.length-1]){case"csv":case"json":case"xml":scope.importType=extension,value=!0;break;default:value=!1}return value},scope.$watch("uploadFile.path",function(newValue,oldValue){if(!newValue)return!1;if(newValue=scope.uploadFile.path,!scope._checkFileType(newValue)){scope.uploadFile.path="";var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:"Acceptable file formats are csv, json, and xml."};return dfNotify.error(messageOptions),!1}scope._uploadFile(newValue).then(function(result){scope.importType=null,scope.uploadFile.path="",$("#upload").val("");var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Users imported successfully."};dfNotify.success(messageOptions),scope.$broadcast("toolbar:paginate:user:reset")},function(reject){scope.importType=null,scope.uploadFile.path="",$("#upload").val("");var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions),scope.$broadcast("toolbar:paginate:user:reset")})})}}}]).directive("dfExportUsers",["MOD_USER_ASSET_PATH","INSTANCE_URL","UserDataService","$http","$window","APP_API_KEY",function(MOD_USER_ASSET_PATH,INSTANCE_URL,UserDataService,$http,$window,APP_API_KEY){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.fileFormatStr=null,scope.exportUsers=function(fileFormatStr){scope._exportUsers(fileFormatStr)},scope._getFile=function(urlStr){return $http({method:"GET",url:urlStr})},scope._exportUsers=function(fileFormatStr){if("csv"===fileFormatStr||"json"===fileFormatStr||"xml"===fileFormatStr){scope.fileFormatStr=fileFormatStr;var params="file=user."+scope.fileFormatStr+"&api_key="+APP_API_KEY,currentUser=UserDataService.getCurrentUser();currentUser&&currentUser.session_token&&(params+="&session_token="+currentUser.session_token),$window.location.href=INSTANCE_URL.url+"/system/user?"+params}}}}}]),angular.module("dfApps",["ngRoute","dfUtility","dfApplication","dfHelp","dfTable"]).constant("MOD_APPS_ROUTER_PATH","/apps").constant("MOD_APPS_ASSET_PATH","admin_components/adf-apps/").config(["$routeProvider","MOD_APPS_ROUTER_PATH","MOD_APPS_ASSET_PATH",function($routeProvider,MOD_APPS_ROUTER_PATH,MOD_APPS_ASSET_PATH){$routeProvider.when(MOD_APPS_ROUTER_PATH,{templateUrl:MOD_APPS_ASSET_PATH+"views/main.html",controller:"AppsCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("AppsCtrl",["$rootScope","$scope","dfApplicationData","dfNotify","$location",function($rootScope,$scope,dfApplicationData,dfNotify,$location){$scope.$parent.title="Apps",$scope.links=[{name:"manage-apps",label:"Manage",path:"manage-apps"},{name:"create-app",label:"Create",path:"create-app"},{name:"import-app",label:"Import",path:"import-app"}],$scope.emptySectionOptions={title:"You have no Apps!",text:"Click the button below to get started building your first application. You can always create new applications by clicking the tab located in the section menu to the left.",buttonText:"Create An App!",viewLink:$scope.links[1],active:!1},$scope.$on("$destroy",function(e){$scope.$broadcast("toolbar:paginate:app:destroy")}),$scope.apiData=null,$scope.loadTabData=function(init){$scope.dataLoading=!0;var apis=["app","role","service"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index],"service"===value&&(newApiData[value]=newApiData[value].filter(function(obj){return["local_file","aws_s3","azure_blob","rackspace_cloud_files","openstack_object_storage","ftp_file","sftp_file","gridfs"].indexOf(obj.type)>=0}))}),$scope.apiData=newApiData,init&&$scope.$broadcast("toolbar:paginate:app:load")},function(error){var msg="There was an error loading data for the Apps tab. Please try refreshing your browser and logging in again.";error&&error.error&&(401===error.error.code||403===error.error.code)&&(msg="To use the Apps tab your role must allow GET access to system/app, system/role, and system/service. To create, update, or delete apps you need POST, PUT, DELETE access to /system/app and/or /system/app/*.",$location.url("/home"));var messageOptions={module:"Apps",provider:"dreamfactory",type:"error",message:msg};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData(!0)}]).directive("dfAppDetails",["MOD_APPS_ASSET_PATH","dfServerInfoService","dfApplicationData","dfNotify","dfObjectService",function(MOD_APPS_ASSET_PATH,dfServerInfoService,dfApplicationData,dfNotify,dfObjectService){return{restrict:"E",scope:{appData:"=?",newApp:"=?",apiData:"=?"},templateUrl:MOD_APPS_ASSET_PATH+"views/df-app-details.html",link:function(scope,elem,attrs){var getLocalFileStorageServiceId=function(){var localFileSvc=scope.apiData.service.filter(function(obj){return"local_file"===obj.type});return localFileSvc&&localFileSvc.length>0?localFileSvc[0].id:null},App=function(appData){var _app={name:"",description:"",type:0,storage_service_id:getLocalFileStorageServiceId(),storage_container:"applications",path:"",url:"",role_id:null};return appData=appData||_app,{__dfUI:{selected:!1},record:angular.copy(appData),recordCopy:angular.copy(appData)}};scope.currentServer=dfServerInfoService.currentServer(),scope.app=null,scope.locations=[{label:"No Storage Required - remote device, client, or desktop.",value:"0"},{label:"On a provisioned file storage service.",value:"1"},{label:"On this web server.",value:"3"},{label:"On a remote URL.",value:"2"}],scope.newApp&&(scope.app=new App),scope.saveApp=function(){scope.newApp?scope._saveApp():scope._updateApp()},scope.cancelEditor=function(){(dfObjectService.compareObjectsAsJson(scope.app.record,scope.app.recordCopy)||dfNotify.confirmNoSave())&&scope.closeEditor()},scope._prepareAppData=function(record){var _app=angular.copy(record);switch(parseInt(_app.record.type)){case 0:delete _app.record.storage_service_id,delete _app.record.storage_container,delete _app.record.path,delete _app.record.url;break;case 1:delete _app.record.url;break;case 2:delete _app.record.storage_service_id,delete _app.record.storage_container,delete _app.record.path;break;case 3:delete _app.record.storage_service_id,delete _app.record.storage_container,delete _app.record.url}return _app.record},scope.closeEditor=function(){scope.appData=null,scope.app=new App,scope.$emit("sidebar-nav:view:reset")},scope._saveApp=function(){var requestDataObj={params:{fields:"*",related:"role_by_role_id"},data:scope._prepareAppData(scope.app)};dfApplicationData.saveApiData("app",requestDataObj).$promise.then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:scope.app.record.name+" saved successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._updateApp=function(){var requestDataObj={params:{fields:"*",related:"role_by_role_id"},data:scope._prepareAppData(scope.app)};dfApplicationData.updateApiData("app",requestDataObj).$promise.then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:scope.app.record.name+" updated successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchAppStorageService=scope.$watch("app.record.storage_service_id",function(newValue,oldValue){scope.app&&scope.app.record&&scope.apiData.service&&(scope.selectedStorageService=scope.apiData.service.filter(function(item){return item.id==scope.app.record.storage_service_id})[0])}),watchAppData=scope.$watch("appData",function(newValue,oldValue){newValue&&(scope.app=new App(newValue))});scope.$on("$destroy",function(e){watchAppStorageService(),watchAppData()}),scope.dfHelp={applicationName:{title:"Application API Key",text:"This API KEY is unique per application and must be included with each API request as a query param (api_key=yourapikey) or a header (X-DreamFactory-API-Key: yourapikey)."},name:{title:"Display Name",text:"The display name or label for your app, seen by users of the app in the LaunchPad UI."},description:{title:"Description",text:"The app description, seen by users of the app in the LaunchPad UI."},appLocation:{title:"App Location",text:"Select File Storage if you want to store your app code on your DreamFactory instance or some other remote file storage. Select Native for native apps or running the app from code on your local machine (CORS required). Select URL to specify a URL for your app."},storageService:{title:"Storage Service",text:"Where to store the files for your app."},storageContainer:{title:"Storage Folder",text:"The folder on the selected storage service."},defaultPath:{title:"Default Path",text:"The is the file to load when your app is run. Default is index.html."},remoteUrl:{title:"Remote Url",text:"Applications can consist of only a URL. This could be an app on some other server or a web site URL."},assignRole:{title:"Assign a Default Role",text:"Unauthenticated or guest users of the app will have this role."}}}}}]).directive("dfManageApps",["$rootScope","MOD_APPS_ASSET_PATH","dfApplicationData","dfNotify","$window",function($rootScope,MOD_APPS_ASSET_PATH,dfApplicationData,dfNotify,$window){return{restrict:"E",scope:!1,templateUrl:MOD_APPS_ASSET_PATH+"views/df-manage-apps.html",link:function(scope,elem,attrs){var ManagedApp=function(appData){return{__dfUI:{selected:!1},record:appData}};scope.apps=null,scope.currentEditApp=null,scope.fields=[{name:"id",label:"ID",active:!0},{name:"name",label:"Name",active:!0},{name:"role_by_role_id",label:"Role",active:!0},{name:"api_key",label:"API Key",active:!0},{name:"description",label:"Description",active:!0},{name:"is_active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedApps=[],scope.removeFilesOnDelete=!1,scope.launchApp=function(app){scope._launchApp(app)},scope.editApp=function(app){scope._editApp(app)},scope.deleteApp=function(app){dfNotify.confirm("Delete "+app.record.name+"?")&&(app.record.native||null==app.record.storage_service_id||(scope.removeFilesOnDelete=dfNotify.confirm("Delete application files? Pressing cancel will retain the files in storage.")),scope._deleteApp(app))},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(app){scope._setSelected(app)},scope.deleteSelectedApps=function(){dfNotify.confirm("Delete selected apps?")&&(scope.removeFilesOnDelete=dfNotify.confirm("Delete application files?"),scope._deleteSelectedApps())},scope._launchApp=function(app){$window.open(app.record.launch_url)},scope._editApp=function(app){scope.currentEditApp=app},scope._deleteApp=function(app){var requestDataObj={params:{delete_storage:scope.removeFilesOnDelete,related:"role_by_role_id",fields:"*"},data:app.record};dfApplicationData.deleteApiData("app",requestDataObj).$promise.then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:"App successfully deleted."};dfNotify.success(messageOptions),scope.$broadcast("toolbar:paginate:app:delete")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(app){for(var i=0;i<scope.selectedApps.length;){if(app.record.id===scope.selectedApps[i])return app.__dfUI.selected=!1,void scope.selectedApps.splice(i,1);i++}app.__dfUI.selected=!0,scope.selectedApps.push(app.record.id)},scope._deleteSelectedApps=function(){var requestDataObj={params:{ids:scope.selectedApps.join(","),fields:"*",rollback:!0,delete_storage:scope.removeFilesOnDelete}};dfApplicationData.deleteApiData("app",requestDataObj).$promise.then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:"Apps deleted successfully."};dfNotify.success(messageOptions),scope.selectedApps=[],scope.$broadcast("toolbar:paginate:app:reset")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchApiData=scope.$watchCollection("apiData.app",function(newValue,oldValue){var _apps=[];newValue&&(angular.forEach(newValue,function(app){_apps.push(new ManagedApp(app))}),scope.emptySectionOptions.active=0===newValue.length),scope.apps=_apps});scope.$on("toolbar:paginate:app:update",function(e){scope.loadTabData()}),scope.$on("$destroy",function(e){watchApiData()})}}}]).directive("dfAppLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfImportApp",["MOD_APPS_ASSET_PATH","$http","dfApplicationData","dfNotify",function(MOD_APPS_ASSET_PATH,$http,dfApplicationData,dfNotify){return{restrict:"E",scope:{apiData:"=?"},templateUrl:MOD_APPS_ASSET_PATH+"views/df-import-app.html",link:function(scope,elem,attrs){scope.containers=[],scope.appPath=null,scope.storageService="",scope.storageContainer="",scope.field=angular.element("#upload"),scope.uploadFile=null,scope.sampleApps=[{name:"Address Book for Android",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/android-sdk/master/package/add_android.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/android-sdk"},{name:"Address Book for iOS Objective-C",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/ios-sdk/master/example-ios/package/add_ios.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/ios-sdk"},{name:"Address Book for iOS Swift",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/ios-swift-sdk/master/SampleAppSwift/package/add_ios_swift.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/ios-swift-sdk"},{name:"Address Book for JavaScript",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/javascript-sdk/master/add_javascript.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/javascript-sdk"},{name:"Address Book for AngularJS",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/angular-sdk/master/add_angular.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/angular-sdk"},{name:"Address Book for Angular 2",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/angular2-sdk/master/add_angular2.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/angular2-sdk"},{name:"Address Book for Ionic",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/ionic-sdk/master/package/add_ionic.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/ionic-sdk"},{name:"Address Book for Titanium",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/titanium-sdk/master/add_titanium.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/titanium-sdk"},{name:"Address Book for ReactJS",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/reactjs-sdk/master/add_reactjs.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/reactjs-sdk"},{name:"Address Book for .NET",description:"",package_url:"https://raw.github.com/dreamfactorysoftware/.net-sdk/master/DreamFactory.AddressBook/App_Package/add_dotnet.dfpkg",repo_url:"https://github.com/dreamfactorysoftware/.net-sdk"}],scope.submitApp=function(){if(!scope.appPath)return!1;scope._submitApp()},scope.browseFileSystem=function(){scope._resetImportApp(),scope.field.trigger("click")},scope.loadSampleApp=function(appObj){scope._loadSampleApp(appObj)},scope._isAppPathUrl=function(appPathStr){return"http://"===appPathStr.substr(0,7)||"https://"===appPathStr.substr(0,8)},scope._importAppToServer=function(requestDataObj){var _options={params:{},data:requestDataObj,dontWrapData:!0};return scope._isAppPathUrl(scope.appPath)?_options.headers={"Content-Type":"application/json"}:(_options.headers={"Content-Type":void 0},$http.defaults.transformRequest=angular.identity),dfApplicationData.saveApiData("app",_options).$promise},scope._isDFPackage=function(appPathStr){return".dfpkg"===appPathStr.substr(appPathStr.lastIndexOf("."))},scope._resetImportApp=function(){scope.appPath=null,scope.storageService="",scope.storageContainer="",scope.uploadFile=null,scope.field.val("")},scope._loadSampleApp=function(appObj){scope.appPath=appObj.package_url},scope._submitApp=function(){var requestDataObj={};if(scope._isAppPathUrl(scope.appPath))requestDataObj={import_url:scope.appPath,storage_service_id:scope.storageService.id,storage_container:scope.storageContainer};else{var fd=new FormData,storageId=scope.storageService&&void 0!==scope.storageService.id?scope.storageService.id:0,storageContainer=scope.storageContainer;fd.append("file",scope.uploadFile),fd.append("storage_service_id",storageId),fd.append("storage_container",storageContainer),requestDataObj=fd}scope._importAppToServer(requestDataObj).then(function(result){var messageOptions={module:"Apps",type:"success",provider:"dreamfactory",message:"App successfully imported."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(success){scope._resetImportApp(),$http.defaults.transformRequest=function(d,headers){if(angular.isObject(d))return angular.toJson(d)}})};var watchUploadFile=scope.$watch("uploadFile",function(n,o){n&&(scope.appPath=n.name)});scope.$on("$destroy",function(e){watchUploadFile()}),scope.dfHelp={applicationName:{title:"Application Name",text:"This is some help text that will be displayed in the help window"}}}}}]),angular.module("dfData",["ngRoute","dfUtility","dfTable"]).constant("MOD_DATA_ROUTER_PATH","/data").constant("MOD_DATA_ASSET_PATH","admin_components/adf-data/").config(["$routeProvider","MOD_DATA_ROUTER_PATH","MOD_DATA_ASSET_PATH",function($routeProvider,MOD_DATA_ROUTER_PATH,MOD_DATA_ASSET_PATH){$routeProvider.when(MOD_DATA_ROUTER_PATH,{templateUrl:MOD_DATA_ASSET_PATH+"views/main.html",controller:"DataCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("DataCtrl",["$scope","INSTANCE_URL","dfApplicationData","dfNotify","$location",function($scope,INSTANCE_URL,dfApplicationData,dfNotify,$location){$scope.$parent.title="Data",$scope.links=[{name:"manage-data",label:"Manage",path:"manage-data"}],$scope.services=null,$scope.selected={service:null,resource:null},$scope.options={service:$scope.selected.service,table:$scope.selected.resource,url:INSTANCE_URL.url+"/"+$scope.selected.service+"/_table/"+$scope.selected.resource,allowChildTable:!0,childTableAttachPoint:"#child-table-attach"},$scope.$watchCollection("selected",function(newValue,oldValue){var options={service:newValue.service,table:newValue.resource,url:INSTANCE_URL.url+"/"+newValue.service+"/_table/"+newValue.resource,allowChildTable:!0,childTableAttachPoint:"#child-table-attach"};$scope.options=options}),$scope.$watchCollection("apiData.service_list",function(newValue,oldValue){newValue&&($scope.services=newValue.filter(function(obj){return["mysql","pgsql","sqlite","sqlsrv","memsql","sqlanywhere","oracle","ibmdb2","informix","firebird","aws_redshift_db"].indexOf(obj.type)>=0}))}),$scope.apiData=null,$scope.loadTabData=function(){var apis=["service_list"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData},function(error){var messageOptions={module:"Data",provider:"dreamfactory",type:"error",message:"There was an error loading the Data tab. Please try refreshing your browser and logging in again."};dfNotify.error(messageOptions)})},$scope.loadTabData()}]),angular.module("dfServices",["ngRoute","dfUtility"]).constant("MOD_SERVICES_ROUTER_PATH","/services").constant("MOD_SERVICES_ASSET_PATH","admin_components/adf-services/").config(["$routeProvider","MOD_SERVICES_ROUTER_PATH","MOD_SERVICES_ASSET_PATH",function($routeProvider,MOD_SERVICES_ROUTER_PATH,MOD_SERVICES_ASSET_PATH){$routeProvider.when(MOD_SERVICES_ROUTER_PATH,{templateUrl:MOD_SERVICES_ASSET_PATH+"views/main.html",controller:"ServicesCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("ServicesCtrl",["$rootScope","$scope","dfApplicationData","dfNotify","$location",function($rootScope,$scope,dfApplicationData,dfNotify,$location){$scope.$parent.title="Services",$scope.links=[{name:"manage-services",label:"Manage",path:"manage-services"},{name:"create-service",label:"Create",path:"create-service"}],$scope.emptySectionOptions={title:"You have no Services!",text:'Click the button below to get started building your first Service.  You can always create new services by clicking the "Create" tab located in the section menu to the left.',buttonText:"Create A Service!",viewLink:$scope.links[1]},$scope.$on("$destroy",function(e){$scope.$broadcast("toolbar:paginate:service:destroy")}),$scope.apiData=null,$scope.loadTabData=function(init){$scope.dataLoading=!0;var apis=["service","service_link","service_type","environment"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData,init&&$scope.$broadcast("toolbar:paginate:service:load")},function(error){var msg="There was an error loading data for the Services tab. Please try refreshing your browser and logging in again.";error&&error.error&&(401===error.error.code||403===error.error.code)&&(msg="To use the Services tab your role must allow GET access to system/service and system/service_type. To create, update, or delete services you need POST, PUT, DELETE access to /system/service and/or /system/service/*.",$location.url("/home"));var messageOptions={module:"Services",provider:"dreamfactory",type:"error",message:msg};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData(!0)}]).directive("dfServiceLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfManageServices",["$rootScope","MOD_SERVICES_ASSET_PATH","dfApplicationData","dfNotify",function($rootScope,MOD_SERVICES_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-manage-services.html",link:function(scope,elem,attrs){var ManagedService=function(serviceData){return{__dfUI:{selected:!1},record:serviceData}};scope.services=[],scope.currentEditService=null,scope.selectedServices=[],scope.editService=function(service){scope.currentEditService=service},scope.deleteService=function(service){if(dfNotify.confirm("Delete "+service.record.label+"?")){var requestDataObj={params:{id:service.record.id}};dfApplicationData.deleteApiData("service",requestDataObj).$promise.then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service successfully deleted."};dfNotify.success(messageOptions),service.__dfUI.selected&&scope.setSelected(service),scope.$broadcast("toolbar:paginate:service:delete")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})}},scope.deleteSelectedServices=function(){if(dfNotify.confirm("Delete selected services?")){var requestDataObj={params:{ids:scope.selectedServices.join(","),rollback:!0}};dfApplicationData.deleteApiData("service",requestDataObj).$promise.then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Services deleted successfully."};dfNotify.success(messageOptions),scope.selectedServices=[],scope.$broadcast("toolbar:paginate:service:reset")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})}},scope.fields=[{name:"id",label:"ID",active:!0},{name:"name",label:"Name",active:!0},{name:"label",label:"Label",active:!0},{name:"description",label:"Description",active:!0},{name:"type",label:"Type",active:!0},{name:"is_active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope.setSelected=function(service){for(var i=0;i<scope.selectedServices.length;){if(service.record.id===scope.selectedServices[i])return service.__dfUI.selected=!1,void scope.selectedServices.splice(i,1);i++}service.__dfUI.selected=!0,scope.selectedServices.push(service.record.id)};var watchApiServiceData=scope.$watchCollection("apiData.service",function(newValue,oldValue){var _services=[];newValue&&(angular.forEach(newValue,function(service){_services.push(new ManagedService(service))}),scope.emptySectionOptions.active=0===newValue.length),scope.services=_services});scope.$on("toolbar:paginate:service:update",function(e){scope.loadTabData()}),scope.$on("$destroy",function(e){watchApiServiceData()})}}}]).directive("dfServiceDetails",["MOD_SERVICES_ASSET_PATH","$q","dfApplicationData","dfNotify","dfObjectService",function(MOD_SERVICES_ASSET_PATH,$q,dfApplicationData,dfNotify,dfObjectService){return{restrict:"E",scope:{serviceData:"=?",newService:"=?",apiData:"=?"},templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-details.html",link:function(scope,elem,attrs){var ServiceDetails=function(service){var newService={id:null,name:"",label:"",description:"",is_active:!0,type:"",config:{},service_doc_by_service_id:null};return(service=service||newService)&&service.config&&Object.keys(service.config).forEach(function(key){if(service.config[key]&&service.config[key].constructor===Object){var arr=[];Object.keys(service.config[key]).forEach(function(objKey){arr.push({key:objKey,value:service.config[key][objKey]})}),service.config[key]=arr}}),{__dfUI:{selected:!1},record:angular.copy(service),recordCopy:angular.copy(service)}};scope.serviceDetails=null,scope.editableServiceTypes=[],scope.creatableServiceTypes=[],scope.saveOrUpdateService=function(){scope.newService?scope.saveService():scope.updateService()},scope.cancelEditor=function(){if(scope.prepareServiceData(),!dfObjectService.compareObjectsAsJson(scope.serviceDetails.record,scope.serviceDetails.recordCopy)&&!dfNotify.confirmNoSave())return!1;scope.closeEditor()},scope.prepareServiceData=function(){scope.serviceDetails.record=scope.prepareServiceInfo(),scope.serviceDetails.record.config=scope.prepareServiceConfig(),scope.serviceDetails.record.service_doc_by_service_id=scope.prepareServiceDefinition()},scope.closeEditor=function(){scope.serviceData=null,scope.serviceDetails=new ServiceDetails,angular.element("#info-tab").trigger("click"),scope.$emit("sidebar-nav:view:reset")};var normalizeKeyValuePairs=function(){var data=angular.copy(scope.serviceDetails.record),convert=function(item){var arr=data.config[item.name];data.config[item.name]={},arr.forEach(function(arrItem){data.config[item.name][arrItem.key]=arrItem.value})};return scope.selectedSchema.hasOwnProperty("config_schema")&&null!==scope.selectedSchema.config_schema&&scope.selectedSchema.config_schema.forEach(function(item){item.type.indexOf("object")>-1&&data.config[item.name]&&data.config[item.name].length&&convert(item)}),data};scope.saveService=function(){scope.prepareServiceData();var requestDataObj={params:{fields:"*",related:"service_doc_by_service_id"},data:normalizeKeyValuePairs()};dfApplicationData.saveApiData("service",requestDataObj).$promise.then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service saved successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope.updateService=function(){scope.prepareServiceData();var requestDataObj={params:{fields:"*",related:"service_doc_by_service_id"},data:normalizeKeyValuePairs()};dfApplicationData.updateApiData("service",requestDataObj).$promise.then(function(result){var messageOptions={module:"Services",type:"success",provider:"dreamfactory",message:"Service updated successfully"};dfNotify.success(messageOptions),scope.selections.saveAndClose?scope.closeEditor():scope.serviceDetails=new ServiceDetails(result)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope.refreshServiceConfigEditor=function(){var editor=scope.serviceConfigEditorObj.editor;editor&&(editor.renderer.updateText(),editor.resize(!0),editor.focus())},scope.refreshServiceDefEditor=function(){var editor=scope.serviceDefEditorObj.editor;editor&&(editor.renderer.updateText(),editor.resize(!0),editor.focus())},scope.serviceTypeToSchema=function(type){var schema=(scope.newService?scope.creatableServiceTypes:scope.editableServiceTypes).filter(function(item){return item.name===type});return schema.length>0?schema[0]:null};var watchServiceData=scope.$watch("serviceData",function(newValue,oldValue){scope.serviceDetails=new ServiceDetails(newValue),scope.updateHelpText(newValue)});scope.$on("$destroy",function(e){watchServiceData()}),scope.dfHelp={createService:{title:"Create Service Information",text:"Create Service information help text"}},scope.updateHelpText=function(record){var details,configText,serviceDefText,serviceDefReadOnlyText;details=" this service ",record&&record.label&&(details="<b> "+record.label+" </b>"),configText="Specify any service-specific configuration for"+details+"below.",details="remote and script services",record&&record.label&&(details="<b> "+record.label+"</b>"),serviceDefText="For "+details+', you can specify a definition of the service below. Refer to the <a target="_blank" href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md" title="Link to Swagger">OpenAPI docs</a> for details, or build and export your own from <a target="_blank" href="http://editor.swagger.io/#/" title="Link to Swagger Editor">here</a>.',details=" this service ",record&&record.label&&(details="<b> "+record.label+" </b>"),serviceDefReadOnlyText="The service definition for "+details+"is pre-defined and can not be edited.",scope.dfLargeHelp={basic:{title:"Services Overview",text:"Services are where you set up REST API connections to databases, file storage, email, remote web services, and more."},config:{title:"Config Overview",text:configText},serviceDef:{title:"Service Definition Overview",text:serviceDefText},serviceDefReadOnly:{title:"Service Definition Overview",text:serviceDefReadOnlyText}}}}}}]).directive("dfServiceInfo",["MOD_SERVICES_ASSET_PATH","SystemConfigDataService",function(MOD_SERVICES_ASSET_PATH,SystemConfigDataService){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-info.html",link:function(scope,elem,attrs){scope.serviceTypes=[],scope.serviceInfo={},scope.prepareServiceInfo=function(){return scope.serviceInfo},scope.sortArray=function(groupsArray,orderArray){var result=[];if(orderArray.forEach(function(group){-1!==groupsArray.indexOf(group)&&result.push(group)}),groupsArray.length>orderArray.length){var unsortedGroups=groupsArray.filter(function(i){return result.indexOf(i)<0});result.push.apply(result,unsortedGroups)}return result},scope.updateAffectedFields=function(fieldValue,field){if("driver"===field.name&&field.values){var foundValue=field.values.filter(function(item){return item.name===fieldValue})[0]||{};scope.serviceConfig.dsn=foundValue.dsn}},scope.addMissingPaidServices=function(types){var silverServices=[{name:"adldap",label:"Active Directory",description:"A service for supporting Active Directory integration",group:"LDAP"},{name:"ldap",label:"Standard LDAP",description:"A service for supporting Open LDAP integration",group:"LDAP"},{name:"oidc",label:"OpenID Connect",description:"OpenID Connect service supporting SSO.",group:"OAuth"},{name:"oauth_azure_ad",label:"Azure Active Directory OAuth",description:"OAuth service for supporting Azure Active Directory authentication and API access.",group:"OAuth"},{name:"saml",label:"SAML 2.0",description:"SAML 2.0 service supporting SSO.",group:"SSO"},{name:"ibmdb2",label:"IBM DB2",description:"Database service supporting IBM DB2 SQL connections.",group:"Database"},{name:"informix",label:"IBM Informix",description:"Database service supporting IBM Informix SQL connections.",group:"Database"},{name:"oracle",label:"Oracle",description:"Database service supporting SQL connections.",group:"Database"},{name:"salesforce_db",label:"Salesforce",description:"Database service with SOAP and/or OAuth authentication support for Salesforce connections.",group:"Database"},{name:"soap",label:"SOAP Service",description:"A service to handle SOAP Services",group:"Remote Service"},{name:"sqlanywhere",label:"SAP SQL Anywhere",description:"Database service supporting SAP SQL Anywhere connections.",group:"Database"},{name:"sqlsrv",label:"SQL Server",description:"Database service supporting SQL Server connections.",group:"Database"},{name:"memsql",label:"MemSQL",description:"Database service supporting MemSQL connections.",group:"Database"},{name:"apns",label:"Apple Push Notification",description:"Apple Push Notification Service Provider.",group:"Notification"},{name:"gcm",label:"GCM Push Notification",description:"GCM Push Notification Service Provider.",group:"Notification"},{name:"mqtt",label:"MQTT Client",description:"MQTT Client based on Mosquitto.",group:"IoT"}],goldServices=[{name:"logstash",label:"Logstash",description:"Logstash service.",group:"Log"}],add=[];angular.forEach(silverServices,function(svc){0===types.filter(function(type){return svc.name===type.name}).length&&(svc.singleton=!1,svc.config_schema=null,svc.subscription_required="SILVER",add.push(svc))}),angular.forEach(goldServices,function(svc){0===types.filter(function(type){return svc.name===type.name}).length&&(svc.singleton=!1,svc.config_schema=null,svc.subscription_required="GOLD",add.push(svc))}),types=types.concat(add);var product="OPEN SOURCE",systemConfig=SystemConfigDataService.getSystemConfig();return systemConfig&&systemConfig.platform&&systemConfig.platform.hasOwnProperty("license")&&(product=systemConfig.platform.license),angular.forEach(types,function(svc){svc.available=!0,svc.subscription_required&&("GOLD"===svc.subscription_required&&"GOLD"!==product||"SILVER"===svc.subscription_required&&"GOLD"!==product&&"SILVER"!==product)&&(svc.available=!1,svc.config_schema=null)}),types},scope.changeServiceType=function(type){scope.serviceInfo.type=type,scope.serviceConfig={},scope.selectedSchema=scope.serviceTypeToSchema(type),scope.selectedSchema&&scope.decorateSchema(),scope.resetServiceDef()};var watchServiceDetails=scope.$watch("serviceDetails",function(newValue,oldValue){if(!newValue)return!1;scope.serviceInfo=angular.copy(newValue.record)}),watchServiceTypes=scope.$watchCollection("apiData.service_type",function(newValue,oldValue){if(newValue){scope.editableServiceTypes=scope.addMissingPaidServices(newValue),scope.creatableServiceTypes=scope.editableServiceTypes.filter(function(el){return!el.singleton});var typeObj={},groups=scope.creatableServiceTypes.map(function(obj){return typeObj.hasOwnProperty(obj.group)||(typeObj[obj.group]=[]),typeObj[obj.group].push({name:obj.name,label:obj.label}),obj.group});groups=groups.filter(function(v,i){return groups.indexOf(v)===i});var sortingArray=["Database","File","Email","Notification","Remote Service","Script","OAuth","LDAP"];groups=scope.sortArray(groups,sortingArray),scope.serviceTypesSingleColLimit=5;var newTypeObj={};angular.forEach(typeObj,function(types,group){var i,j,newTypes=angular.copy(types),limit=scope.serviceTypesSingleColLimit;if(types.length>limit){for(i=0,j=0;i<types.length;i+=2)newTypes[i]=types[j++];for(i=1;i<types.length;i+=2)newTypes[i]=types[j++]}newTypeObj[group]=newTypes});for(var _serviceTypes=[],i=0;i<groups.length;i++)_serviceTypes.push({group_name:groups[i],group_types:newTypeObj[groups[i]]});scope.serviceTypes=_serviceTypes}});scope.$on("$destroy",function(e){watchServiceDetails(),watchServiceTypes()}),scope.dfSimpleHelp={serviceType:{title:"Service Type ",text:"Select the type of service you're adding."},name:{title:"Name ",text:"Select a name for making API requests, such as 'db' in /api/v2/db."},label:{title:"Label ",text:"The display name or label for the service."},description:{title:"Description ",text:"Write a brief description of the API (optional)."}}}}}]).directive("dfServiceConfig",["MOD_SERVICES_ASSET_PATH","dfApplicationData","dfObjectService","$compile","$rootScope","dfNotify","$http","INSTANCE_URL",function(MOD_SERVICES_ASSET_PATH,dfApplicationData,dfObjectService,$compile,$rootScope,dfNotify,$http,INSTANCE_URL){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-config.html",link:function(scope,elem,attrs){scope.serviceConfig={},scope.isServiceConfigEditable=!0,scope.serviceConfigUpdateCounter=0,scope.eventList=[],scope.allowedConfigFormats=".json,.js,.php,.py,.python,.yaml,.yml",scope.allowedConfigGitFormats=["json","js","php","py","python","yaml","yml"],scope.serviceConfigGitHubTarget="configmodal",scope.serviceConfigEditorObj={editor:null},scope.isArray=angular.isArray,scope.disableServiceLinkRefresh=!0,scope.selections={service:null},scope.handleFiles=function(element){var file=element.files&&element.files[0];if(file){var reader=new FileReader;reader.readAsText(file,"UTF-8"),reader.onload=function(evt){scope.$apply(function(){scope.serviceConfig.content=evt.target.result,scope.serviceConfigUpdateCounter++})},reader.onerror=function(evt){}}},scope.getRefreshEnable=function(){var type,enable=!1;return scope.selections.service&&("github"===(type=scope.selections.service.type)||"gitlab"===type||"bitbucket"===type?scope.serviceConfig.scm_repository&&scope.serviceConfig.scm_reference&&scope.serviceConfig.storage_path&&(enable=!0):scope.serviceConfig.storage_path&&(enable=!0)),enable},scope.resetServiceLink=function(){scope.serviceConfig.scm_repository=null,scope.serviceConfig.scm_reference=null,scope.serviceConfig.storage_path=null},scope.pullLatestScript=function(){var serviceName=scope.selections.service.name,serviceRepo=scope.serviceConfig.scm_repository,serviceRef=scope.serviceConfig.scm_reference,servicePath=scope.serviceConfig.storage_path,url=INSTANCE_URL.url+"/"+serviceName;if(!scope.selections.service||"github"!==scope.selections.service.type&&"gitlab"!==scope.selections.service.type&&"bitbucket"!==scope.selections.service.type)url=url+"/"+servicePath;else{var params={path:servicePath,branch:serviceRef,content:1};url=url+"/_repo/"+serviceRepo}$http({method:"GET",url:url,params:params}).then(function(result){scope.serviceConfig.content=result.data,scope.serviceConfigUpdateCounter++;var messageOptions={module:"Services",provider:"dreamfactory",type:"success",message:"Successfully pulled the latest script from source."};dfNotify.error(messageOptions)},function(error){var messageOptions={module:"Services",provider:"dreamfactory",type:"error",message:"There was an error pulling the latest script from source. Please make sure your service, path and permissions are correct and try again."};dfNotify.error(messageOptions)}).finally(function(){})},scope.deleteScriptFromCache=function(){$http({method:"DELETE",url:INSTANCE_URL.url+"/system/cache/_event/"+scope.serviceInfo.name}).then(function(result){var messageOptions={module:"Services",provider:"dreamfactory",type:"success",message:"Successfully cleared script from cache."};dfNotify.error(messageOptions)},function(error){var messageOptions={module:"Services",provider:"dreamfactory",type:"error",message:"Failed to cleared script from cache."};dfNotify.error(messageOptions)}).finally(function(){})},scope.githubModalShowConfig=function(){$rootScope.$broadcast("githubShowModal",scope.serviceConfigGitHubTarget)},scope.addKeyValue=function(field){scope.serviceConfig[field]||(scope.serviceConfig[field]=[]),scope.serviceConfig[field].push({key:"new_key",value:"new_value"})},scope.deleteKeyValue=function(obj,$index){obj.splice($index,1)},scope.appendItemToArray=function(configObj,key){configObj[key]||(configObj[key]=[]);var schema=scope.selectedSchema.config_schema.filter(function(item){return item.name==key})[0]||{};schema.items instanceof Array?scope.serviceConfig[key].push({}):"string"===schema.items&&scope.serviceConfig[key].push("")},scope.deleteStringFromArray=function(arr,index){arr.splice(index,1)},scope.addObjectInArray=function(configObj,key,items){configObj[key]||(configObj[key]=[]);var newObj={};items.forEach(function(item){switch(item.type){case"text":case"string":newObj[item.name]="";break;case"boolean":newObj[item.name]=!1;break;case"verb_mask":newObj[item.name]=31}}),configObj[key].push(newObj)},scope.deleteObjectFromArray=function(arr,index){arr=arr.splice(index,1)},scope.decorateSchema=function(){scope.selectedSchema.hasOwnProperty("config_schema")&&null!==scope.selectedSchema.config_schema&&scope.selectedSchema.config_schema.forEach(function(schema){schema.default?scope.serviceConfig[schema.name]=scope.serviceConfig[schema.name]||schema.default:"content"===schema.name&&"Custom"===scope.selectedSchema.group&&(scope.serviceConfig.content=scope.serviceConfig.content||"")})},scope.getReferences=function(key,valueField){var dfApplicationObjApis=dfApplicationData.getApplicationObj().apis||[];if(dfApplicationObjApis&&dfApplicationObjApis[key]&&dfApplicationObjApis[key].record)return dfApplicationObjApis[key].record.map(function(item){return{name:item.name,value:item[valueField]||item.id}})},scope.getServiceById=function(id){var matches=scope.apiData.service_link.filter(function(service){return service.id===id});return 0===matches.length?null:matches[0]};var watchServiceDetails=scope.$watch("serviceDetails",function(newValue,oldValue){if(newValue){switch(scope.serviceConfig=angular.copy(newValue.record.config),newValue.record.type){case"nodejs":case"php":case"python":case"v8js":scope.selections.service=scope.getServiceById(scope.serviceConfig.storage_service_id)}scope.selectedSchema=scope.serviceTypeToSchema(newValue.record.type),scope.selectedSchema&&scope.decorateSchema()}}),watchSelectedSchema=scope.$watch("selectedSchema",function(newValue,oldValue){var loadEvents,i;if(newValue){switch(newValue.name){case"nodejs":scope.allowedConfigFormats=".js",scope.allowedConfigGitFormats=["js"];break;case"php":scope.allowedConfigFormats=".php",scope.allowedConfigGitFormats=["php"];break;case"python":scope.allowedConfigFormats=".py,.python",scope.allowedConfigGitFormats=["py","python"];break;case"v8js":scope.allowedConfigFormats=".js",scope.allowedConfigGitFormats=["js"];break;default:scope.allowedConfigFormats=".json,.js,.php,.yaml,.yml",scope.allowedConfigGitFormats=["json","js","php","yaml","yml"]}if(newValue.config_schema){for(loadEvents=!1,i=0;i<newValue.config_schema.length;i++)if("service_event_map"===newValue.config_schema[i].name){loadEvents=!0;break}loadEvents&&dfApplicationData.getApiData(["event_list"]).then(function(response){scope.apiData.event_list=response[0].resource},function(error){var messageOptions={module:"Services",provider:"dreamfactory",type:"error",message:"There was an error loading the service. Please try refreshing your browser and logging in again."};dfNotify.error(messageOptions)})}}}),watchEventList=scope.$watchCollection("apiData.event_list",function(newValue,oldValue){var temp={},serviceEvents=[];newValue&&(angular.forEach(newValue,function(event){var service=event,index=service.indexOf(".");index>=0&&(service=service.substr(0,index)),temp[service]||(temp[service]=[]),temp[service].push({label:event,name:event})}),angular.forEach(temp,function(items,service){items.unshift({label:"All "+service+" events",name:service+".*"}),serviceEvents.push({label:service,name:service,items:items})}),scope.eventList=serviceEvents)}),watchConfig=scope.$watchCollection("serviceConfig",function(newValue,oldValue){scope.disableServiceLinkRefresh=!scope.getRefreshEnable()}),watchSelections=scope.$watchCollection("selections",function(newValue,oldValue){scope.disableServiceLinkRefresh=!scope.getRefreshEnable(),newValue&&(scope.isServiceConfigEditable=null===newValue.service,null!==newValue.service&&(scope.serviceConfig.content="",scope.serviceConfigUpdateCounter++))});scope.$on("$destroy",function(e){watchServiceDetails(),watchSelectedSchema(),watchEventList(),watchConfig(),watchSelections()}),scope.prepareServiceConfig=function(){var config=scope.serviceConfig,type=scope.serviceInfo.type;return"nodejs"!==type&&"php"!==type&&"python"!==type&&"v8js"!==type||(scope.selections.service?(config.content="",scope.serviceConfigUpdateCounter++):config.content=scope.serviceConfigEditorObj.editor.getValue(),config.storage_service_id=scope.selections.service?scope.selections.service.id:null,!scope.selections.service||"github"!==scope.selections.service.type&&"gitlab"!==scope.selections.service.type&&"bitbucket"!==scope.selections.service.type?config.scm_repository=null:config.scm_repository=config.scm_repository?config.scm_repository:null,!scope.selections.service||"github"!==scope.selections.service.type&&"gitlab"!==scope.selections.service.type&&"bitbucket"!==scope.selections.service.type?config.scm_reference=null:config.scm_reference=config.scm_reference?config.scm_reference:null,scope.selections.service?config.storage_path=config.storage_path?config.storage_path:null:config.storage_path=null),config}}}}]).directive("dfServiceDefinition",["MOD_SERVICES_ASSET_PATH","$timeout","$rootScope",function(MOD_SERVICES_ASSET_PATH,$timeout,$rootScope){return{restrict:"E",scope:!1,templateUrl:MOD_SERVICES_ASSET_PATH+"views/df-service-definition.html",link:function(scope,elem,attrs){scope.serviceDefEditorObj={editor:null},scope.allowedDefinitionFormats=["json","yml","yaml"],scope.serviceDefGitHubTarget="definition",scope.serviceDefUpdateCounter=0,scope.serviceDefinition={content:"",format:"json"},scope.isServiceDefEditable=!1,scope.resetServiceDef=function(){switch(scope.serviceDefinition={content:"",format:"json"},scope.serviceInfo.type){case"rws":case"nodejs":case"php":case"python":case"v8js":scope.isServiceDefEditable=!0;break;default:scope.isServiceDefEditable=!1}},scope.prepareServiceDefinition=function(){var format,doc=null;switch(scope.serviceInfo.type){case"rws":case"nodejs":case"php":case"python":case"v8js":var content=scope.serviceDefEditorObj.editor.getValue();""!==content&&((doc=scope.serviceDetails.record.service_doc_by_service_id||{}).content=content,format=scope.serviceDefinition.format,doc.format="yaml"===format?1:0)}return doc},scope.handleDefinitionFiles=function(files){if(files&&files[0]){var reader=new FileReader;reader.readAsText(files[0],"UTF-8"),reader.onload=function(evt){var format;scope.serviceDefinition.content=evt.target.result,scope.serviceDefUpdateCounter++,format=-1!==files[0].name.indexOf("yml")||-1!==files[0].name.indexOf("yaml")?"yaml":"json",scope.serviceDefinition.format=format,scope.$apply()},reader.onerror=function(evt){}}},scope.$watch("serviceDetails",function(newValue,oldValue){if(newValue){var content="",format="json",editable=!1;switch(newValue.record.type){case"rws":case"nodejs":case"php":case"python":case"v8js":var doc=newValue.record.service_doc_by_service_id;doc&&(doc.hasOwnProperty("content")&&doc.content&&(content=doc.content),doc.hasOwnProperty("format")&&(format=1===doc.format?"yaml":"json")),editable=!0}scope.serviceDefinition={content:content,format:format},scope.isServiceDefEditable=editable}}),scope.githubModalShowDef=function(){$rootScope.$broadcast("githubShowModal",scope.serviceDefGitHubTarget)},$(window).on("resize",function(){var h=$(window).height();$('div[id^="ide_"]').css({height:h-400+"px"})})}}}]),angular.module("dfRoles",["ngRoute","dfUtility","dfTable"]).constant("MOD_ROLES_ROUTER_PATH","/roles").constant("MOD_ROLES_ASSET_PATH","admin_components/adf-roles/").config(["$routeProvider","MOD_ROLES_ROUTER_PATH","MOD_ROLES_ASSET_PATH",function($routeProvider,MOD_ROLES_ROUTER_PATH,MOD_ROLES_ASSET_PATH){$routeProvider.when(MOD_ROLES_ROUTER_PATH,{templateUrl:MOD_ROLES_ASSET_PATH+"views/main.html",controller:"RolesCtrl",resolve:{checkAdmin:["checkAdminService",function(checkAdminService){return checkAdminService.checkAdmin()}],checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("RolesCtrl",["$rootScope","$scope","$q","dfApplicationData","SystemConfigDataService","dfNotify","$location",function($rootScope,$scope,$q,dfApplicationData,SystemConfigDataService,dfNotify,$location){$scope.$parent.title="Roles",$scope.links=[{name:"manage-roles",label:"Manage",path:"manage-roles"},{name:"create-role",label:"Create",path:"create-role"}],$scope.adldap=0;var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("adldap")&&($scope.adldap=systemConfig.authentication.adldap.length),$scope.emptySectionOptions={title:"You have no Roles!",text:"Click the button below to get started creating your first role.  You can always create new roles by clicking the tab located in the section menu to the left.",buttonText:"Create A Role!",viewLink:$scope.links[1],active:!1},$scope.$on("$destroy",function(e){$scope.$broadcast("toolbar:paginate:role:destroy")}),$scope.apiData=null,$scope.loadTabData=function(init){$scope.dataLoading=!0;var apis=["role","service_list","service_type_list"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData,init&&$scope.$broadcast("toolbar:paginate:role:load")},function(error){error&&error.error&&(401===error.error.code||403===error.error.code)&&$location.url("/home");var messageOptions={module:"Roles",provider:"dreamfactory",type:"error",message:"To use the Roles tab your role must allow GET access to service 'system' and system/role/*. To create, update, or delete roles you need POST, PUT, DELETE access to /system/role/*."};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData(!0)}]).directive("dfRoleDetails",["MOD_ROLES_ASSET_PATH","dfApplicationData","dfNotify","dfObjectService","$q","SystemConfigDataService","dfSystemData",function(MOD_ROLES_ASSET_PATH,dfApplicationData,dfNotify,dfObjectService,$q,SystemConfigDataService,dfSystemData){return{restrict:"E",scope:{roleData:"=?",newRole:"=?",apiData:"=?"},templateUrl:MOD_ROLES_ASSET_PATH+"views/df-role-details.html",link:function(scope,elem,attrs){var Role=function(roleData){var newRole={name:null,description:null,is_active:!1,default_app_id:null,role_service_access_by_role_id:[],id:null,lookup_by_role_id:[]};return roleData=roleData||newRole,{__dfUI:{selected:!1},record:angular.copy(roleData),recordCopy:angular.copy(roleData)}};scope.basicInfoError=!1,scope.role=null,scope.newRole&&(scope.role=new Role),scope.saveRole=function(){scope.newRole?scope._saveRole():scope._updateRole()},scope.deleteRole=function(){scope._deleteRole()},scope.cancelEditor=function(){scope._prepareRoleData(),(dfObjectService.compareObjectsAsJson(scope.role.record,scope.role.recordCopy)||dfNotify.confirmNoSave())&&scope.closeEditor()},scope._prepareRoleData=function(){scope.role.record.name?(scope.basicInfoError=!1,scope.adldap&&scope.role.record.dn&&(scope.role.record.role_adldap_by_role_id=scope.role.record.id?[{role_id:scope.role.record.id,dn:scope.role.record.dn}]:[{dn:scope.role.record.dn}],delete scope.role.record.dn),scope._prepareServiceAccessData(),scope._prepareRoleLookUpKeysData()):scope.basicInfoError=!0},scope.closeEditor=function(){scope.roleData=null,scope.role=new Role,angular.element("#basic-tab").trigger("click"),scope.lookupKeysError=!1,scope.basicInfoError=!1,scope.$emit("sidebar-nav:view:reset")},scope._prepareServiceAccessData=function(){var preppedArr=[];angular.forEach(scope.roleServiceAccesses,function(obj){var _obj=angular.copy(obj.record);delete _obj.service,preppedArr.push(_obj)}),scope.role.record.role_service_access_by_role_id=preppedArr},scope._saveRole=function(){scope._prepareRoleData();var requestDataObj={params:{fields:"*",related:"role_service_access_by_role_id,lookup_by_role_id"},data:scope.role.record};dfApplicationData.saveApiData("role",requestDataObj).$promise.then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role saved successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._updateRole=function(){scope._prepareRoleData();var requestDataObj={params:{fields:"*",related:"role_service_access_by_role_id,lookup_by_role_id"},data:scope.role.record};dfApplicationData.updateApiData("role",requestDataObj).$promise.then(function(result){scope.adldap?dfSystemData.resource({params:{fields:"*",related:"role_adldap_by_role_id"}}).get({api:"role",id:result.id,related:"role_adldap_by_role_id"}).$promise.then(function(adResult){adResult.role_adldap_by_role_id&&adResult.role_adldap_by_role_id.length>0&&(result.dn=adResult.role_adldap_by_role_id[0].dn),scope.role=new Role(result)},function(reject){scope.role=new Role(result)}):scope.role=new Role(result);var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role updated successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){scope.role.record.role_adldap_by_role_id&&scope.role.record.role_adldap_by_role_id.length>0&&(scope.role.record.dn=scope.role.record.role_adldap_by_role_id[0].dn);var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._deleteRole=function(){var requestDataObj={params:{},data:scope.role.record};dfApplicationData.deleteApiData("role",requestDataObj).$promise.then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role successfully deleted."};dfNotify.success(messageOptions),scope.role=null},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchRoleData=scope.$watch("roleData",function(newValue,oldValue){newValue&&!scope.newRole&&(scope.role=new Role(newValue))}),watchServiceData=scope.$watchCollection("apiData.service_list",function(newValue,oldValue){newValue&&(scope.services=angular.copy(newValue),"All"!==scope.services[0].name&&scope.services.unshift({id:null,name:"All"}),angular.forEach(scope.services,function(svc){svc.components||(svc.components=["","*"])}))});scope.$on("$destroy",function(e){watchRoleData(),watchServiceData()}),scope.dfSimpleHelp={serviceAccess:{title:"Role Service Access Information",text:"Access rules for DreamFactory services. Use caution when allowing system access."}},scope.dfLargeHelp={basic:{title:"Roles Overview",text:"Roles provide a way to grant or deny API access to specific services or apps."},access:{title:"Access Overview",text:"This section allows you set set up rules for a role restricting what services and components users assigned to the role will have access to. Advanced Filters are for implementing additional server side filter logic on database transactions."},lookupkeys:{title:"Lookup Keys Overview",text:'The DreamFactory administrator can create any number of "key value" pairs attached to a role. The key values are automatically substituted on the server. For example, key names can be used in the username and password fields required to hook up a SQL or NoSQL database. They can also be used in Email Templates or as parameters for external REST services. Any Lookup Key can be marked as private, and in this case the key value is securely encrypted on the server and is no longer accessible through the platform interface.<span style="color: red;">  Lookup keys for service configuration and credentials must be made private.</span>'}}}}}]).directive("assignServiceAccess",["MOD_ROLES_ASSET_PATH","dfNotify",function(MOD_ROLES_ASSET_PATH,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_ROLES_ASSET_PATH+"views/df-assign-service-access.html",link:function(scope,elem,attrs){var ServiceAccess=function(){return{__dfUI:{allowFilters:!1,showFilters:!1,hasError:!1},record:{verb_mask:0,requestor_mask:1,component:"*",service:scope.services[0]||null,service_id:scope.services[0].id||null,filters:[],filter_op:"AND"}}};scope.roleServiceAccesses=[],scope.addServiceAccess=function(){scope._addServiceAccess()},scope.removeServiceAccess=function(serviceAccessObjIndex){scope._removeServiceAccess(serviceAccessObjIndex)},scope._addServiceAccess=function(){scope.roleServiceAccesses.push(new ServiceAccess)},scope._removeServiceAccess=function(serviceAccessObjIndex){scope.roleServiceAccesses[serviceAccessObjIndex].record.id?scope.roleServiceAccesses[serviceAccessObjIndex].record.role_id=null:scope.roleServiceAccesses.splice(serviceAccessObjIndex,1)},scope._getService=function(serviceId){for(var i=0;i<scope.services.length;){if(scope.services[i].id===serviceId)return scope.services[i];i++}var messageOptions={module:"DreamFactory Roles Module",type:"error",provider:"dreamfactory",message:'Service with id "'+serviceId+'" not found.'};dfNotify.error(messageOptions)};var watchRole=scope.$watch("role",function(newValue,oldValue){if(!newValue)return!1;scope.roleServiceAccesses=[],scope.newRole?scope.roleServiceAccesses=[]:angular.forEach(newValue.record.role_service_access_by_role_id,function(obj){var _newSA=new ServiceAccess;_newSA.record=obj,_newSA.record.service=scope._getService(obj.service_id),scope.roleServiceAccesses.push(_newSA)})});scope.$on("$destroy",function(newValue,oldValue){watchRole()})}}}]).directive("dfServiceAccess",["MOD_ROLES_ASSET_PATH","dfNotify","$http","INSTANCE_URL","serviceTypeToGroup",function(MOD_ROLES_ASSET_PATH,dfNotify,$http,INSTANCE_URL,serviceTypeToGroup){return{restrict:"E",replace:!0,scope:{serviceAccess:"=",index:"=",apiData:"="},templateUrl:MOD_ROLES_ASSET_PATH+"views/df-service-access.html",link:function(scope,elem,attrs){var ServiceAccessFilter=function(){return{name:"",operator:"=",value:""}};scope.filterOperators=["=","!=",">","<",">=","<=","in","not in","starts with","ends with","contains","is null","is not null"],scope.toggleServiceAccessFilters=function(){scope._toggleServiceAccessFilters()},scope.addServiceAccessFilter=function(){scope._addServiceAccessFilter()},scope.removeServiceAccessFilter=function(serviceAccessFilterIndex){scope._removeServiceAccessFilter(serviceAccessFilterIndex)},scope.toggleServiceFilterOp=function(){scope._toggleServiceFilterOp()},scope.allowFilters=function(){var type=scope.serviceAccess.record.service.type,group=serviceTypeToGroup(type,scope.apiData.service_type_list);scope.serviceAccess.__dfUI.allowFilters="Database"===group&&"couchdb"!==type},scope._toggleServiceAccessFilters=function(){scope.serviceAccess.__dfUI.show_filters=!scope.serviceAccess.__dfUI.show_filters},scope._addServiceAccessFilter=function(){scope.serviceAccess.record.filters.push(new ServiceAccessFilter)},scope._removeServiceAccessFilter=function(serviceAccessFilterIndex){scope.serviceAccess.record.filters.splice(serviceAccessFilterIndex,1)},scope._toggleServiceFilterOp=function(){scope.serviceAccess.record.filter_op="AND"===scope.serviceAccess.record.filter_op?"OR":"AND"},scope._getComponents=function(){var name=scope.serviceAccess.record.service.name;return $http.get(INSTANCE_URL.url+"/"+name+"/?as_access_list=true")};var watchServiceAccessRecordService=scope.$watch("serviceAccess.record.service",function(newValue,oldValue){if(!newValue)return!1;scope.serviceAccess.__dfUI.hasError=!1,scope.allowFilters(),scope.serviceAccess.record.service_id=newValue.id;var name=scope.serviceAccess.record.service.name,group=serviceTypeToGroup(scope.serviceAccess.record.service.type,scope.apiData.service_type_list);if("All"!==name&&null!==group&&"Email"!==group){var components=["","*"];scope._getComponents().then(function(result){components=result.data.resource},function(reject){scope.serviceAccess.__dfUI.hasError=!0,scope.serviceAccess.record.component=null;var messageOptions={module:"Roles",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){scope.serviceAccess.record.service.components=components})}});scope.$on("$destroy",function(e){watchServiceAccessRecordService()})}}}]).directive("dfManageRoles",["$rootScope","MOD_ROLES_ASSET_PATH","dfApplicationData","dfNotify","dfSystemData","SystemConfigDataService",function($rootScope,MOD_ROLES_ASSET_PATH,dfApplicationData,dfNotify,dfSystemData,SystemConfigDataService){return{restrict:"E",scope:!1,templateUrl:MOD_ROLES_ASSET_PATH+"views/df-manage-roles.html",link:function(scope,elem,attrs){var ManagedRole=function(roleData){return{__dfUI:{selected:!1},record:roleData}};scope.adldap=0;var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("adldap")&&(scope.adldap=systemConfig.authentication.adldap.length),scope.roles=null,scope.currentEditRole=null,scope.fields=[{name:"id",label:"Id",active:!0},{name:"name",label:"Name",active:!0},{name:"description",label:"Description",active:!0},{name:"is_active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedRoles=[],scope.editRole=function(role){scope.adldap?dfSystemData.resource({params:{fields:"*",related:"role_adldap_by_role_id"}}).get({api:"role",id:role.id,related:"role_adldap_by_role_id"}).$promise.then(function(result){result.role_adldap_by_role_id&&result.role_adldap_by_role_id.length>0&&(role.dn=result.role_adldap_by_role_id[0].dn),scope._editRole(role)},function(reject){scope._editRole(role)}):scope._editRole(role)},scope.deleteRole=function(role){dfNotify.confirm("Delete "+role.record.name+"?")&&scope._deleteRole(role)},scope.deleteSelectedRoles=function(){dfNotify.confirm("Delete selected roles?")&&scope._deleteSelectedRoles()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(role){scope._setSelected(role)},scope._editRole=function(role){scope.currentEditRole=role},scope._deleteRole=function(role){var requestDataObj={params:{},data:role.record};dfApplicationData.deleteApiData("role",requestDataObj).$promise.then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Role successfully deleted."};dfNotify.success(messageOptions),role.__dfUI.selected&&scope.setSelected(role),scope.$broadcast("toolbar:paginate:role:delete")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(role){for(var i=0;i<scope.selectedRoles.length;){if(role.record.id===scope.selectedRoles[i])return role.__dfUI.selected=!1,void scope.selectedRoles.splice(i,1);i++}role.__dfUI.selected=!0,scope.selectedRoles.push(role.record.id)},scope._deleteSelectedRoles=function(){var requestDataObj={params:{ids:scope.selectedRoles.join(","),rollback:!0}};dfApplicationData.deleteApiData("role",requestDataObj).$promise.then(function(result){var messageOptions={module:"Roles",type:"success",provider:"dreamfactory",message:"Roles deleted successfully."};dfNotify.success(messageOptions),scope.selectedRoles=[],scope.$broadcast("toolbar:paginate:role:reset")},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchApiData=scope.$watchCollection("apiData.role",function(newValue,oldValue){var _roles=[];newValue&&(angular.forEach(newValue,function(role){_roles.push(new ManagedRole(role))}),scope.emptySectionOptions.active=0===newValue.length),scope.roles=_roles});scope.$on("toolbar:paginate:role:update",function(e){scope.loadTabData()}),scope.$on("$destroy",function(e){watchApiData()})}}}]).directive("dfRoleLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfAssignLookUpKeys",["MOD_ROLES_ASSET_PATH",function(MOD_ROLES_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_ROLES_ASSET_PATH+"views/df-assign-lookup-keys.html",link:function(scope,elem,attrs){var LookUpKey=function(lookupKeyData){var _new={name:"",value:"",private:!1,allow_user_update:!1};return{__dfUI:{unique:!0},record:angular.copy(lookupKeyData||_new),recordCopy:angular.copy(lookupKeyData||_new)}};scope.roleLookUpKeys=[],scope.sameKeys=[],scope.lookupKeysError=!1,scope.addLookUpKey=function(){scope._addLookUpKey()},scope.deleteLookUpKey=function(keyObjIndex){scope._deleteLookUpKey(keyObjIndex)},scope._prepareRoleLookUpKeysData=function(){var tempArr=[];angular.forEach(scope.roleLookUpKeys,function(lk){tempArr.push(lk.record)}),scope.role.record.lookup_by_role_id=tempArr},scope._isUniqueKey=function(){scope.sameKeys=[],angular.forEach(scope.roleLookUpKeys,function(value,index){angular.forEach(scope.roleLookUpKeys,function(_value,_index){index!==_index&&value.record.name===_value.record.name&&scope.sameKeys.push(value)})})},scope._addLookUpKey=function(){scope.roleLookUpKeys.push(new LookUpKey)},scope._deleteLookUpKey=function(keyObjIndex){void 0!==scope.roleLookUpKeys[keyObjIndex].record.role_id?scope.roleLookUpKeys[keyObjIndex].record.role_id=null:scope.roleLookUpKeys.splice(keyObjIndex,1)};var watchRole=scope.$watch("role",function(newValue,oldValue){if(!newValue)return!1;scope.roleLookUpKeys=null,scope.newRole?scope.roleLookUpKeys=[]:(scope.roleLookUpKeys=[],angular.forEach(newValue.record.lookup_by_role_id,function(lkObj){scope.roleLookUpKeys.push(new LookUpKey(lkObj))}))}),watchSameKeys=scope.$watch("sameKeys",function(newValue,oldValue){0!==newValue.length||0!==scope.roleLookUpKeys.length?0===newValue.length&&scope.roleLookUpKeys.length>0?angular.forEach(scope.roleLookUpKeys,function(lk){lk.__dfUI.unique=!0,scope.lookupKeysError=!1}):(angular.forEach(scope.roleLookUpKeys,function(lk){angular.forEach(newValue,function(_lk){lk.record.name===_lk.record.name?lk.__dfUI.unique=!1:lk.__dfUI.unique=!0})}),scope.lookupKeysError=!0):scope.lookupKeysError=!1}),watchLookupKeys=scope.$watchCollection("roleLookUpKeys",function(newValue,oldValue){newValue&&scope._isUniqueKey()});scope.$on("$destroy",function(e){watchRole(),watchSameKeys(),watchLookupKeys()})}}}]),angular.module("dfSchema",["ngRoute","dfUtility"]).constant("MOD_SCHEMA_ROUTER_PATH","/schema").constant("MOD_SCHEMA_ASSET_PATH","admin_components/adf-schema/").config(["$routeProvider","MOD_SCHEMA_ROUTER_PATH","MOD_SCHEMA_ASSET_PATH",function($routeProvider,MOD_SCHEMA_ROUTER_PATH,MOD_SCHEMA_ASSET_PATH){$routeProvider.when(MOD_SCHEMA_ROUTER_PATH,{templateUrl:MOD_SCHEMA_ASSET_PATH+"views/main.html",controller:"SchemaCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).factory("TableListService",["INSTANCE_URL","$q","$timeout","dfApplicationData","StateService","dfNotify",function(INSTANCE_URL,$q,$timeout,dfApplicationData,StateService,dfNotify){return{getTableList:function(forceRefresh){var deferred=$q.defer(),currentService=StateService.get("dfservice");if(currentService)return dfApplicationData.getServiceComponents(currentService.name,INSTANCE_URL.url+"/"+currentService.name+"/_schema",{params:{refresh:!0,fields:"name,label"}},forceRefresh).then(function(result){currentService.updateComponents(result),StateService.set("dfservice",currentService);var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:currentService.label+" is refreshed."};forceRefresh&&dfNotify.success(messageOptions),deferred.resolve(currentService)},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions),deferred.reject()}),deferred.promise}}}]).factory("Table",["$q","$http","INSTANCE_URL","dfNotify",function($q,$http,INSTANCE_URL,dfNotify){function Table(tableData){tableData&&this.setData(tableData)}return Table.prototype={setData:function(tableData){angular.extend(this,tableData)},delete:function(params){return $http.delete(INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table)},update:function(params){return $http({method:"PATCH",url:INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table,data:this})},_saveField:function(params,fieldData){var data={resource:[fieldData.record]},verb=fieldData.__dfUI.newField?"POST":"PATCH";return $http({method:verb,url:INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table+"/_field",data:data})},_updateRelations:function(params){}},Table}]).factory("tableManager",["INSTANCE_URL","$http","$q","Table","StateService","dfNotify","TableObj",function(INSTANCE_URL,$http,$q,Table,StateService,dfNotify,TableObj){return{_pool:{},_retrieveInstance:function(tableName,tableData){if(!tableName)return!1;var instance=this._pool[tableName];return instance?instance.setData(tableData):(instance=new Table(tableData),this._pool[tableName]=instance),instance},_search:function(tableName){return this._pool[tableName]},_load:function(params,deferred){var scope=this,url=INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table+"?refresh=true";$http.get(url).then(function(response){var tableData=response.data,table=scope._retrieveInstance(tableData.name,tableData);deferred.resolve(table)},function(reject){deferred.reject()})},_delete:function(params){return $http.delete(INSTANCE_URL.url+"/"+params.service.name+"/_schema/"+params.table)},_deleteField:function(params){return $http.delete(INSTANCE_URL.url+"/"+params.service.name+"/_schema/"+params.table+"/_field/"+params.field)},_clearPool:function(){this._pool={}},getTable:function(params){var deferred=$q.defer(),table=this._search(params.table);return table?deferred.resolve(table):this._load(params,deferred),deferred.promise},loadAllTables:function(params){var deferred=$q.defer(),scope=this,url=INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table;return $http.get(url).then(function(response){var tables,tablesArray=response.data;Array.isArray(tablesArray)?tablesArray.forEach(function(tableData){var table=scope._retrieveInstance(tableData.name,tableData);tables.push(table)}):tables=tablesArray,deferred.resolve(tables)},function(reject){deferred.reject()}),deferred.promise},setTable:function(tableData,saveToServer){var tableName="";tableName=tableData.hasOwnProperty("record")?tableData.__dfUI.newTable?"__new":tableData.record.name:tableData.name;var scope=this,table=this._search(tableName);if(!table&&saveToServer){var param={resource:[tableData]};return $http.post(INSTANCE_URL.url+"/"+StateService.get("dfservice").name+"/_schema?fields=*",param)}if(table){if(table.setData(tableData),saveToServer)return table.update({service:StateService.get("dfservice").name,table:tableName})}else table=scope._retrieveInstance(tableName,tableData.record);return table},setDat:function(tableData){scope._retrieveInstance(tableData)},setField:function(tableName,fieldData,saveToServer){var table=this._search(tableName);if(void 0!==table){var index=table.field.findIndex(function(obj){return obj.name==fieldData.record.name});if(index<0?table.field.push(fieldData.record):table.field[index]=fieldData.record,table.field[index]=fieldData.record,table.setData(table),saveToServer){var params={service:StateService.get("dfservice").name,table:tableName};return table._saveField(params,fieldData)}}},getField:function(fieldName,tableName){var table=this._search(tableName);if(table.hasOwnProperty("field")){var index=table.field.findIndex(function(obj){return obj.name==fieldName});return index>-1?table.field[index]:void 0}return null},deleteField:function(params){return this._deleteField(params)},deleteTable:function(params){return this._delete(params)},_saveRelation:function(params,relationData){var data={resource:[relationData.record]};return relationData.__dfUI.newRelation?$http.post(INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table+"/_related",data):$http({method:"PATCH",url:INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table+"/_related",data:data})},saveRelation:function(params,relationData){return this._saveRelation(params,relationData)},_deleteRelation:function(params){return $http.delete(INSTANCE_URL.url+"/"+params.service+"/_schema/"+params.table+"/_related/"+params.relation)},deleteRelation:function(params){return this._deleteRelation(params)},updateRelations:function(params){var table=this._search(params.table),url=INSTANCE_URL.url+"/"+params.service.name+"/_schema/"+params.table+"/_related";return $http.get(url).then(function(response){var relationData=response.data;table.related=relationData.resource,table.setData(table)},function(reject){})},clearPool:function(){this._clearPool()}}}]).service("StateService",function(){var selectedService={};return{get:function(state){if(selectedService.hasOwnProperty(state))return selectedService[state]},set:function(state,value){selectedService[state]=value}}}).service("ServiceModel",function(){function getSchemaComponents(array){var service=[];return angular.forEach(array,function(component){var componentObj={__dfUI:{newTable:!1},name:component.name,label:component.label};service.push(componentObj)}),service}return function(schemaData){return{__dfUI:{unfolded:!1},name:schemaData.name,label:schemaData.label,components:getSchemaComponents(schemaData.components),updateComponents:function(array){this.components=getSchemaComponents(array)}}}}).service("TableObj",function(){return function(tableObj,currentService){var _new={alias:null,description:null,name:null,label:null,plural:null,primary_key:null,name_field:null,is_view:!1,related:[],field:[]},newTable=!tableObj;return tableObj=tableObj||_new,{__dfUI:{newTable:newTable},record:tableObj,recordCopy:angular.copy(tableObj)}}}).service("FieldObj",function(){return function(fieldData1){var _new={allow_null:!1,auto_increment:!1,db_function:null,db_type:null,default:null,fixed_length:!1,is_aggregate:!1,is_foreign_key:!1,is_primary_key:!1,is_unique:!1,is_virtual:!1,label:null,length:null,name:null,picklist:null,precision:null,ref_field:"",ref_table:"",required:!1,scale:0,supports_multibyte:!1,type:null,validation:null,value:[]},_newField=!fieldData1;return fieldData1=fieldData1||_new,{__dfUI:{newField:_newField},record:fieldData1,recordCopy:angular.copy(fieldData1)}}}).service("RelationObj",function(){return function(RelationObj){var _new={alias:null,always_fetch:!1,description:null,field:null,is_virtual:!0,junction_field:null,junction_ref_field:null,junction_service_id:null,junction_table:null,label:null,name:null,ref_field:null,ref_service_id:null,ref_table:null,type:null},_newRelation=!RelationObj;return RelationObj=RelationObj||_new,{__dfUI:{newRelation:_newRelation},record:RelationObj,recordCopy:angular.copy(RelationObj)}}}).service("TableDataModel",function(){this.model=null,this.setTableModel=function(data){this.model=data},this.setTableModel=function(data){this.model=data},this.updateTableModel=function(data){this.model=data},this.deleteTableModel=function(){this.model=null}}).service("NavigationService",function(){return this.currentStep=null,{getStep:function(){return this.currentStep},setStep:function(step){this.currentStep=step},nextStep:function(){},previousStep:function(){}}}).service("FieldOptions",function(){this.typeOptions=[{name:"I will manually enter a type",value:""},{name:"id",value:"id"},{name:"string",value:"string"},{name:"integer",value:"integer"},{name:"text",value:"text"},{name:"boolean",value:"boolean"},{name:"binary",value:"binary"},{name:"float",value:"float"},{name:"double",value:"double"},{name:"decimal",value:"decimal"},{name:"datetime",value:"datetime"},{name:"date",value:"date"},{name:"time",value:"time"},{name:"reference",value:"reference"},{name:"user_id",value:"user_id"},{name:"user_id_on_create",value:"user_id_on_create"},{name:"user_id_on_update",value:"user_id_on_update"},{name:"timestamp",value:"timestamp"},{name:"timestamp_on_create",value:"timestamp_on_create"},{name:"timestamp_on_update",value:"timestamp_on_update"}],this.returnTypeOptions=[{name:"string",value:"string"},{name:"integer",value:"integer"},{name:"boolean",value:"boolean"},{name:"binary",value:"binary"},{name:"float",value:"float"},{name:"double",value:"double"},{name:"decimal",value:"decimal"}],this.helpText={name:{title:"Name",text:"The field name used by the API."},alias:{title:"Alias",text:"If set, the alias is used in table access instead of the name."},label:{title:"Label",text:"A displayable name used by clients."},type:{title:"Type",text:"This is a simplified DreamFactory type."},database_type:{title:"Database Type",text:"If necessary, enter a type acceptable to the underlying database."},db_function:{title:"DB Function",text:'Enter valid syntax for a database function supported by this database vendor, like upper(fieldname), max(fieldname) or concat(field1, \'.\', field2), to apply to this field for various operations. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Database_Functions" target="_blank">here</a> for more info.'},validation:{title:"Validation",text:'A JSON object detailing required validations, if any. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Validations" target="_blank">here</a> for more info.'},aggregate_db_unction:{title:"Aggregate DB Function",text:'Supported DB functions to apply to this field. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Database_Functions" target="_blank">here</a> for more info.'}}}).service("SchemaJSONData",function(){this.schemaJSON={resource:[{name:"todo",label:"Todo",plural:"Todos",alias:null,field:[{name:"id",label:"Id",type:"id"},{name:"name",label:"Name",type:"string",size:80,allow_null:!1},{name:"complete",label:"Complete",type:"boolean",default:!1}]}]}}).controller("SchemaCtrl",["$scope","dfApplicationData","ServiceModel","dfNotify","$location",function($scope,dfApplicationData,ServiceModel,dfNotify,$location){$scope.$parent.title="Schema",$scope.links=[{name:"manage-schema",label:"Manage",path:"manage-schema"}],$scope.currentService=null,$scope.currentTable=null,$scope.lastTable="";var watchServices=$scope.$watchCollection("apiData.service_list",function(newValue,oldValue){if(newValue){var tempObj={};angular.forEach(newValue,function(service){tempObj[service.name]=new ServiceModel(service)}),$scope.schemaManagerData=tempObj}});$scope.$on("$destroy",function(e){watchServices()}),$scope.$on("refresh:table",function(e,resource){}),$scope.$on("update:components",function(e,resource){$scope.currentService.components.push({__dfUI:{newTable:!1},name:resource.name,label:resource.label}),$scope.currentTable=$scope.currentService.components[$scope.currentService.components.length-1].name}),$scope.dfLargeHelp={manageSchema:{title:"Schema Manager Overview",text:"Choose a database service from the list to view or edit the schema. You can create a new database service in the Services section of this Admin Console."}},$scope.apiData=null,$scope.loadTabData=function(){$scope.dataLoading=!0;var apis=["service_list"];dfApplicationData.getApiData(apis).then(function(response){var newApiData={};apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index],"service_list"===value&&(newApiData[value]=newApiData[value].filter(function(obj){return["mysql","pgsql","sqlite","sqlsrv","memsql","sqlanywhere","oracle","ibmdb2","informix","firebird","aws_redshift_db","mongodb"].indexOf(obj.type)>=0}))}),$scope.apiData=newApiData},function(error){var messageOptions={module:"Schema",provider:"dreamfactory",type:"error",message:"There was an error loading the Schema tab. Please try refreshing your browser and logging in again."};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData()}]).directive("dfSchemaLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfTableTemplate",["MOD_SCHEMA_ASSET_PATH","$q","$timeout","NavigationService","Table","TableDataModel","FieldObj","RelationObj","StateService","tableManager",function(MOD_SCHEMA_ASSET_PATH,$q,$timeout,NavigationService,Table,TableDataModel,FieldObj,RelationObj,StateService,tableManager){return{restrict:"E",scope:{tableData:"=",apiData:"="},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-table-template.html",transclude:!0,controllerAs:"ctrl",controller:["$scope",function($scope){$scope.selView="empty",this.selectedView="empty";var ctrl=this;ctrl.childCtrl=[],ctrl.register=function(child,childCtrl){ctrl.childCtrl[child]=childCtrl},ctrl.$onDestroy=function(){ctrl.childCtrl.length=0}}],link:function(scope,elem,attrs,ctrl){scope.$on("reload",function(event,args){scope.selView="empty"}),scope.$on("table",function(event,args){switch(args.notify){case"delete":ctrl.childCtrl.table_edit.deleteTable(args).then(function(){scope.selView="empty"},function(){});break;case"create:form":scope.selView="create",ctrl.childCtrl.table_create.getEmpty(args);break;case"create:upload":scope.selView="upload",ctrl.childCtrl.table_upload.setDefault();break;case"edit":null!==args.table?(scope.selView="edit",ctrl.childCtrl.table_edit.getTable(args)):scope.selView="empty";break;case"close":scope.selView="empty"}}),scope.$on("field",function(event,args){switch(args.notify){case"new:create":args.value.newTable=!0,scope.newTable=!0,scope.selView="field",scope.fieldEditData=new FieldObj,scope.tableStatus=args.newTable;break;case"edit:create":args.value.newTable=!1,scope.newTable=!1,scope.selView="field",scope.fieldEditData=new FieldObj,scope.tableStatus=args.newTable;break;case"new:close":scope.selView="create";break;case"edit:close":scope.selView="edit",ctrl.childCtrl.table_create.getEmpty(),ctrl.childCtrl.table_edit.syncRecord();break;case"edit":scope.selView="field",scope.fieldEditData=args.value.field,scope.tableStatus=args.value.newTable}}),scope.$on("relation",function(event,args){switch(args.notify){case"create":scope.selView="relation",scope.relationEditData=new RelationObj;break;case"edit":NavigationService.setStep("relation"),scope.selView="relation",scope.relationEditData=args.value.relation;break;case"close":scope.selView="edit",ctrl.childCtrl.table_edit.updateRelations(args.selected)}}),scope.$on("table:navigation:close",function(event,args){scope.selView="empty"})}}}]).directive("dfTableCreateView",["MOD_SCHEMA_ASSET_PATH","NavigationService","Table","TableDataModel","$http","dfNotify","dfObjectService","StateService","dfApplicationData","TableObj","tableManager",function(MOD_SCHEMA_ASSET_PATH,NavigationService,Table,TableDataModel,$http,dfNotify,dfObjectService,StateService,dfApplicationData,TableObj,tableManager){return{restrict:"E",scope:{tableData:"=",selectedView:"="},require:["dfTableCreateView","^^dfTableTemplate"],templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-table-create-view.html",controller:function($scope){$scope.viewMode="table",$scope.table={};var ctrl=this;ctrl.getEmpty=function(){$scope.table=new TableObj,tableManager.setTable($scope.table,!1)},ctrl.getCached=function(service){var requestDataObj={service:service.service,table:service.table};tableManager.getTable(requestDataObj).then(function(tables){$scope.table={__dfUI:{newTable:!0},record:tables,recordCopy:angular.copy(tables),currentService:service.service}})}},link:function(scope,elem,attrs,ctrls){var childCtrl=ctrls[0];ctrls[1].register("table_create",childCtrl),scope.saveTable=function(){if(-1===StateService.get("dfservice").components.findIndex(function(element,index,array){return element.name===scope.table.record.name}))scope._saveTable();else{var messageOptions={module:"Validation Error",type:"error",provider:"dreamfactory",message:"The name already exists"};dfNotify.error(messageOptions)}},scope.cancelTable=function(){scope._cancelTable()},scope._saveTable=function(){tableManager.clearPool(),scope.currentService=StateService.get("dfservice"),scope.table.currentService={name:scope.currentService.name},tableManager.setTable(scope.table.record,!0).then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Table saved successfully."},newTable=result.data.resource[0],component={__dfUI:{newTable:!1},name:scope.table.record.name,label:scope.table.record.label||result.data.resource[0].label};scope.currentService.components.push(component),dfApplicationData.updateServiceComponentsLocal(scope.currentService),scope.table.__dfUI.newTable=!1,scope.table.recordCopy=angular.copy(scope.table.record),StateService.set("dftable",scope.table.record.name),dfNotify.success(messageOptions);var naviObj={service:scope.currentService.name,table:scope.table.record.name,type:"form",data:newTable};scope.$emit("table:navigation:select",naviObj)},function(errMsg){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:errMsg.error.message};dfNotify.error(messageOptions)})},scope._cancelTable=function(){if(!dfObjectService.compareObjectsAsJson(scope.table.record,scope.table.recordCopy)&&!dfNotify.confirmNoSave())return!1;scope.table=null,scope.$emit("table",{notify:"close"})}}}}]).directive("dfTableEditView",["MOD_SCHEMA_ASSET_PATH","$q","NavigationService","Table","TableDataModel","$http","dfNotify","tableManager","TableObj","dfObjectService","dfApplicationData","StateService",function(MOD_SCHEMA_ASSET_PATH,$q,NavigationService,Table,TableDataModel,$http,dfNotify,tableManager,TableObj,dfObjectService,dfApplicationData,StateService){return{restrict:"E",scope:{tableData:"=",selectedView:"="},require:["dfTableEditView","^dfTableTemplate"],templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-table-edit-view.html",controller:function($scope){var ctrl=this;$scope.table=null,$scope.viewMode="table",$scope.schemaJsonEditorObj={editor:null},$scope.reset=function(){$scope.table=null,$scope.viewMode="table",$scope.table=null,$scope.currentTable=null},$scope.thisService=null,ctrl.syncRecord=function(){$scope.table.recordCopy=angular.copy($scope.table.record)},ctrl.getTable=function(service){var requestDataObj={service:service.service,table:service.table};tableManager.getTable(requestDataObj).then(function(tables){$scope.table={__dfUI:{newTable:!1},record:tables,recordCopy:angular.copy(tables),currentService:service.service}})},ctrl.updateRelations=function(obj){tableManager.updateRelations(obj).then(function(tables){})},ctrl.deleteTable=function(obj){if(dfNotify.confirm("Are you sure you want to drop table "+obj.table+"?"))return $scope._deleteTable(obj)},$scope._deleteTable=function(obj){var deferred=$q.defer(),requestDataObj={table:obj.table,service:obj.service};return tableManager.deleteTable(requestDataObj).then(function(result){for(var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Table deleted successfully."},currentService=requestDataObj.service,i=0;i<currentService.components.length;){if(currentService.components[i].name===requestDataObj.table){currentService.components.splice(i,1);break}i++}$scope.table.currentService=currentService,dfApplicationData.updateServiceComponentsLocal($scope.table.currentService),$scope.table=null,$scope.currentTable=null,$scope.reset(),dfNotify.success(messageOptions),deferred.resolve()},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions),deferred.reject()}),deferred.promise}},link:function(scope,elem,attrs,ctrls){var childCtrl=ctrls[0];ctrls[1].register("table_edit",childCtrl),scope.updTable=function(){scope._updTable()},scope._updTable=function(){scope.currentService=StateService.get("dfservice"),scope.table.currentService={name:scope.currentService.name},tableManager.setTable(scope.table.record,!0).then(function(result){for(var updatedTable={__dfUI:{newTable:!1},name:scope.table.record.name,label:scope.table.record.label},i=0;i<scope.currentService.components.length;){if(scope.currentService.components[i].name===scope.table.record.name){scope.currentService.components[i]=updatedTable;break}i++}dfApplicationData.updateServiceComponentsLocal(scope.currentService),StateService.set("dfservice",scope.currentService);var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Table saved successfully."};dfNotify.success(messageOptions),scope.table.recordCopy=angular.copy(scope.table.record)},function(errMsg){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:errMsg.error.message};dfNotify.error(messageOptions)})},scope.closeTable=function(){scope._closeTable()},scope._closeTable=function(){if(!dfObjectService.compareObjectsAsJson(scope.table.record,scope.table.recordCopy)&&!dfNotify.confirmNoSave())return!1;tableManager.clearPool();var closeObj={service:StateService.get("dfservice")};scope.$emit("table:navigation:close",closeObj)},scope.toggleViewMode=function(){if(scope._validateJSON())scope._toggleViewMode();else{var messageOptions={module:"JSON Error",type:"error",provider:"dreamfactory",message:"Invalid JSON.  Please correct any errors and validate to switch back to table view."};dfNotify.error(messageOptions)}},scope._toggleViewMode=function(){scope.viewMode="json"===scope.viewMode?"table":"json","table"===scope.viewMode&&(scope.table.record=angular.fromJson(scope.schemaJsonEditorObj.editor.getValue()))},scope._checkJSON=function(){if(scope._validateJSON()){messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Valid JSON."};dfNotify.success(messageOptions)}else{var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:"JSON Invalid."};dfNotify.error(messageOptions)}},scope.checkJSON=function(){scope._checkJSON()},scope._validateJSON=function(){try{var result=JSON.parse(scope.schemaJsonEditorObj.editor.getValue());if(result)return scope.schemaJsonEditorObj.editor.setValue(angular.toJson(result,!0),-1),!0}catch(e){return!1}},scope.$on("table:update",function(event,args){scope.table=args}),scope.$on("table:edit:clear",function(event,args){scope.table=null,scope.currentService=null,scope.showEditView=!1,scope.currentTable=null,scope.lastTable=null,NavigationService.setStep("empty"),scope.selView=NavigationService.getStep()}),scope.$on("table:navigation:edit",function(event,args){scope.currentService=args.value.service,scope.showEditView=!0,scope.selView="edit",scope.currentTable=args.value,scope.lastTable=angular.copy(scope.currentTable),scope._getTable(args.value)}),scope.$on("table:navigation:field",function(event,args){})}}}]).directive("dfTableFields",["MOD_SCHEMA_ASSET_PATH","NavigationService","tableManager","TableObj","StateService","dfNotify",function(MOD_SCHEMA_ASSET_PATH,NavigationService,tableManager,TableObj,StateService,dfNotify){return{restrict:"E",scope:{tableData:"=",currentService:"="},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-table-fields.html",controller:function($scope){$scope.propertyName="type",$scope.reverse=!0,$scope.sortBy=function(propertyName){$scope.reverse=$scope.propertyName===propertyName&&!$scope.reverse,$scope.propertyName=propertyName}},link:function(scope,elem,attrs){scope.tableStatus=null,scope.addField=function(newTable){scope.tableStatus=newTable.__dfUI.newTable,newTable.__dfUI.newTable&&tableManager.setTable(newTable,!1);var naviObj={type:"field",newTable:newTable.__dfUI.newTable,notify:null,value:{table:scope.$parent.table.record.name,service:StateService.get("dfservice").name}};StateService.set("dftable",scope.$parent.table.record.name),scope.$parent.table.__dfUI.newTable?(naviObj.notify="new:create",scope.$emit("field",naviObj)):(naviObj.notify="edit:create",scope.$emit("field",naviObj))},scope.editField=function(field,newTable){var naviObj={type:"field",notify:"edit",value:{field:field,table:scope.currentTable,newTable:scope.$parent.table.__dfUI.newTable}};scope.$emit("field",naviObj)},scope.deleteField=function(field){dfNotify.confirm("Are you sure you want to delete field "+field.name+"?")&&scope._deleteField(field)},scope._deleteField=function(field){if(scope.$parent.table.__dfUI.newTable)for(var i=0;i<scope.$parent.table.record.field.length;){if(scope.$parent.table.record.field[i].name===field.name){scope.$parent.table.record.field.splice(i,1);break}i++}else{var params={service:StateService.get("dfservice"),table:StateService.get("dftable"),field:field.name};tableManager.deleteField(params).then(function(){for(var i=0;i<scope.$parent.table.record.field.length;){if(scope.$parent.table.record.field[i].name===field.name){scope.$parent.table.record.field.splice(i,1);break}i++}var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Field deleted successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}},scope.setPrimaryField=function(field){for(var tableFields=scope.$parent.table.record.field,primaryKeyName=(tableFields.findIndex(function(element,index,array){return element.name===field.name}),null),i=0;i<tableFields.length;i++)tableFields[i].name===field.name?(tableFields[i].is_primary_key=!0,primaryKeyName=field.name):(tableFields[i].is_primary_key=!1,scope.$parent.table.record.primary_key=null);scope.$parent.table.record.field=tableFields,scope.$parent.table.record.primary_key=primaryKeyName}}}}]).directive("dfTableRelationships",["MOD_SCHEMA_ASSET_PATH","NavigationService","dfNotify","tableManager","StateService",function(MOD_SCHEMA_ASSET_PATH,NavigationService,dfNotify,tableManager,StateService){return{restrict:"E",scope:{tableData:"="},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-table-relationships.html",controller:function($scope){$scope.propertyName="type",$scope.reverse=!0,$scope.sortBy=function(propertyName){$scope.reverse=$scope.propertyName===propertyName&&!$scope.reverse,$scope.propertyName=propertyName}},link:function(scope,elem,attrs){scope.addRelation=function(){NavigationService.setStep("relation"),scope.viewMode="relation",scope.selView=NavigationService.getStep(),scope.$emit("relation",{notify:"create"})},scope.deleteRelation=function(relationData){dfNotify.confirm("Are you sure you want to delete relationship "+relationData.name+"?")&&scope._deleteRelation(relationData)},scope._deleteRelation=function(relation){var params={service:StateService.get("dfservice").name,table:StateService.get("dftable"),relation:relation.name};scope.$parent.table.record.related;tableManager.deleteRelation(params).then(function(result){for(var i=0;i<scope.$parent.table.record.related.length;){if(scope.$parent.table.record.related[i].name===relation.name){scope.$parent.table.record.related.splice(i,1);break}i++}var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Virtual Relationship deleted successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope.editRelation=function(relation){var naviObj={type:"relation",notify:"edit",value:{relation:relation,table:scope.currentTable}};scope.$emit("relation",naviObj)},scope.relationTableData=[];var relationshipDataSubscribe=scope.$watch("tableData",function(newValue,oldValue){scope.relationTableData=newValue});scope.$on("$destroy",function(){relationshipDataSubscribe()})}}}]).directive("dfFieldDetails",["MOD_SCHEMA_ASSET_PATH","INSTANCE_URL","$q","$http","dfNotify","dfObjectService","dfApplicationData","FieldOptions","tableManager","StateService","FieldObj",function(MOD_SCHEMA_ASSET_PATH,INSTANCE_URL,$q,$http,dfNotify,dfObjectService,dfApplicationData,FieldOptions,tableManager,StateService,FieldObj){return{restrict:"E",scope:{selectedView:"=",fieldData:"=",currentTable:"=",tableStatus:"="},require:["dfFieldDetails","^^dfTableTemplate"],templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-field-details.html",controller:function($scope){$scope.isNewTable=null},link:function(scope,elem,attrs,ctrls){var childCtrl=ctrls[0];ctrls[1].register("field_create",childCtrl),scope.addDbFunctionUse=function(){scope._addDbFunctionUse()},scope.removeDbFunctionUse=function(objIndex){scope._removeDbFunctionUse(objIndex)},scope.typeOptions=FieldOptions.typeOptions,scope.returnTypeOptions=FieldOptions.returnTypeOptions,scope.helpText=FieldOptions.helpText;var _setField=function(){if(scope.parentTable=null,scope.tableStatus?scope.parentTable="__new":scope.parentTable=StateService.get("dftable"),null!==scope.field.record.name&&null!==scope.field.record.type){var result=tableManager.setField(scope.parentTable,scope.field,!scope.tableStatus);scope.tableStatus||result.then(function(res){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Field saved successfully."};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:"Failed to save field"};dfNotify.error(messageOptions)}),scope.field.recordCopy=angular.copy(scope.field.record),scope._closeField()}else{var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:"Name and type are required fields"};dfNotify.error(messageOptions)}};scope.updField=function(value){if(scope.tableStatus)if(void 0===tableManager.getField(scope.field.record.name,"__new"))_setField();else{var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:"The field name already exists"};dfNotify.error(messageOptions)}else tableManager.getTable({table:StateService.get("dftable")}).then(function(result){if(-1!=result.field.map(function(obj){return obj.name}).indexOf(scope.field.record.name)&&value){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:"The field name already exists"};dfNotify.error(messageOptions)}else _setField()})},scope.closeField=function(noConfirm){if(!dfObjectService.compareObjectsAsJson(scope.field.record,scope.field.recordCopy)){if(!noConfirm&&!dfNotify.confirmNoSave())return!1;dfObjectService.mergeObjects(scope.field.recordCopy,scope.field.record)}scope._closeField()},scope._closeField=function(){if(scope.tableStatus){obj={notify:"new:close",field:scope.field};scope.$emit("field",obj)}else{var obj={notify:"edit:close",field:scope.field};scope.$emit("field",obj)}},scope._updateOnServer=function(table){var deferred=$q.defer(),result=tableManager.setTable(table);return result?deferred.resolve(result):deferred.reject(result),deferred.promise},scope._addDbFunctionUse=function(){scope.field.record.db_function||(scope.field.record.db_function=[]),scope.field.record.db_function.push({use:[],function:""})},scope._removeDbFunctionUse=function(objIndex){scope.field.record.db_function&&scope.field.record.db_function[objIndex]&&scope.field.record.db_function.splice(objIndex,1)},scope._loadReferenceTables=function(){var ref_service_name=StateService.get("dfservice").name;$http.get(INSTANCE_URL.url+"/"+ref_service_name+"/_schema/").then(function(result){scope.refTables=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._loadReferenceFields=function(){if(scope.field.record.ref_table){var ref_service_name=StateService.get("dfservice").name;$http.get(INSTANCE_URL.url+"/"+ref_service_name+"/_schema/"+scope.field.record.ref_table).then(function(result){scope.refFields=result.data.field},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}else scope.refFields=null};var watchFieldData=scope.$watch("fieldData",function(newValue,oldValue){newValue&&(newValue.hasOwnProperty("__dfUI")?scope.field=newValue:scope.field=new FieldObj(newValue))});scope.$on("$destroy",function(e){watchFieldData()})}}}]).directive("dfFunctionUse",["MOD_SCHEMA_ASSET_PATH",function(MOD_SCHEMA_ASSET_PATH){return{restrict:"E",scope:{functionUse:"=?",index:"=?"},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-function-use.html",link:function(scope,elem,attrs){}}}]).directive("dfRelationDetails",["MOD_SCHEMA_ASSET_PATH","INSTANCE_URL","$http","dfNotify","dfObjectService","dfApplicationData","StateService","RelationObj","tableManager",function(MOD_SCHEMA_ASSET_PATH,INSTANCE_URL,$http,dfNotify,dfObjectService,dfApplicationData,StateService,RelationObj,tableManager){return{restrict:"E",scope:{relationData:"=",currentTable:"=",schemaData:"&",apiData:"="},templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-relation-details.html",link:function(scope,elem,attrs){scope.relation=null,scope.typeOptions=[{name:"Belongs To",value:"belongs_to"},{name:"Has One",value:"has_one"},{name:"Has Many",value:"has_many"},{name:"Many To Many",value:"many_many"}],scope.fields=null,scope.refServices=null,scope.refTables=null,scope.refFields=null,scope.junctionTables=null,scope.junctionFields=null,scope.closeRelation=function(noConfirm){if(!dfObjectService.compareObjectsAsJson(scope.relation.record,scope.relation.recordCopy)){if(!noConfirm&&!dfNotify.confirmNoSave())return!1;dfObjectService.mergeObjects(scope.relation.recordCopy,scope.relation.record)}scope._closeRelation()},scope.saveRelation=function(newTable){if(dfObjectService.compareObjectsAsJson(scope.relation,new RelationObj)){var messageOptions={module:"Schema",type:"error",provider:"dreamfactory",message:"Required fields are blank"};dfNotify.error(messageOptions)}else scope._saveRelation(newTable)},scope.changeReferenceService=function(){scope.relation.record.ref_table=null,scope.relation.record.ref_field=null,scope._loadReferenceTables(),scope._loadReferenceFields()},scope._loadFields=function(){scope._loadReferenceServices(),$http.get(INSTANCE_URL.url+"/"+StateService.get("dfservice").name+"/_schema/"+StateService.get("dftable")+"/_field/").then(function(result){scope.fields=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._getServiceNameFromId=function(id){if(id){if(void 0!==scope.refServices)for(var i=0;i<scope.refServices.length;i++)if(scope.refServices[i].id===id)return scope.refServices[i].name;return null}return StateService.get("dfservice")},scope._loadReferenceServices=function(){scope.refServices=scope.apiData.service_list},scope._loadReferenceTables=function(){var ref_service_name=scope._getServiceNameFromId(scope.relation.record.ref_service_id);$http.get(INSTANCE_URL.url+"/"+ref_service_name+"/_schema/").then(function(result){scope.refTables=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._loadReferenceFields=function(){if(scope.relation.record.ref_table){var ref_service_name=scope._getServiceNameFromId(scope.relation.record.ref_service_id);$http.get(INSTANCE_URL.url+"/"+ref_service_name+"/_schema/"+scope.relation.record.ref_table).then(function(result){scope.refFields=result.data.field},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}else scope.refFields=null},scope.changeJunctionService=function(){scope.relation.record.junction_table=null,scope.relation.record.junction_field=null,scope.relation.record.junction_ref_field=null,scope._loadJunctionTables(),scope._loadJunctionFields()},scope._loadJunctionTables=function(){var ref_service_name=scope._getServiceNameFromId(scope.relation.record.junction_service_id);$http.get(INSTANCE_URL.url+"/"+ref_service_name+"/_schema/").then(function(result){scope.junctionTables=result.data.resource},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._loadJunctionFields=function(){if(scope.relation.record.ref_table){if(null!==scope.relation.record.junction_table){var ref_service_name=scope._getServiceNameFromId(scope.relation.record.junction_service_id);$http.get(INSTANCE_URL.url+"/"+ref_service_name+"/_schema/"+scope.relation.record.junction_table).then(function(result){scope.junctionFields=result.data.field},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}}else scope.junctionFields=null},scope._closeRelation=function(){var params={notify:"close",selected:{service:StateService.get("dfservice"),table:StateService.get("dftable")}};scope.$emit("relation",params)},scope._saveRelation=function(newTable){if(!0!==(newTable=newTable||!1)){var params={service:StateService.get("dfservice").name,table:StateService.get("dftable")};tableManager.saveRelation(params,scope.relation).then(function(){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Virtual Relationship saved successfully."};dfNotify.success(messageOptions),scope._closeRelation()},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}};var watchRelationData=scope.$watch("relationData",function(newValue,oldValue){if(newValue){newValue.hasOwnProperty("__dfUI")?scope.relation=newValue.__dfUI.newRelation?new RelationObj:new RelationObj(newValue.record):scope.relation=new RelationObj(newValue),scope.fields||scope._loadFields(),scope.relation.record.ref_table?(scope._loadReferenceTables(),scope._loadReferenceFields()):scope.refFields=null,scope.relation.record.junction_table?(scope._loadJunctionTables(),scope._loadJunctionFields()):scope.junctionFields=null}});scope.$on("$destroy",function(e){watchRelationData()}),scope.helpText={is_virtual:{title:"Is Virtual Relationship",text:'Is this a virtual relationship. See <a href="http://wiki.dreamfactory.com/DreamFactory/Features/Database/Schema#Database_Functions" target="_blank">here</a> for more info.'}}}}}]).directive("dfSchemaNavigator",["MOD_SCHEMA_ASSET_PATH","dfApplicationData","StateService","TableListService","NavigationService","tableManager","dfNotify",function(MOD_SCHEMA_ASSET_PATH,dfApplicationData,StateService,TableListService,NavigationService,tableManager,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-schema-navigator.html",link:function(scope,elem,attrs){scope.serviceSelect=function(){tableManager.clearPool(),scope.$broadcast("table",{notify:"close"}),scope.currentTable=null,StateService.set("dfservice",scope.currentService),TableListService.getTableList()},scope.navigationSelect=function(selected){var naviObj={type:selected,notify:"create:"+selected,value:{service:scope.currentService.name}};scope.currentTable=null,scope.$broadcast("table",naviObj)},scope.deleteTable=function(){var params={table:scope.currentTable,service:scope.currentService,notify:"delete"};scope.$broadcast("table",params)},scope.tableSelect=function(obj){var params={table:scope.currentTable,service:scope.currentService.name,notify:"edit"};StateService.set("dftable",scope.currentTable),scope.$broadcast("table",params)},scope.reload=function(){tableManager.clearPool(),TableListService.getTableList(!0).then(function(result){-1===result.components.findIndex(function(element,index,array){return element.name===scope.currentTable})?(scope.currentTable=null,StateService.set("dftable",scope.currentTable),scope.$broadcast("table",{notify:"close"})):scope.tableSelect()})},scope.$on("table:navigation:select",function(event,args){if(args.hasOwnProperty("service")&&args.hasOwnProperty("table")&&args.hasOwnProperty("type")){scope.currentTable=args.table;var params={table:args.table,service:args.service,notify:"edit"};scope.$broadcast("table",params)}}),scope.$on("table:navigation:close",function(event,args){scope.currentService=args.service,scope.currentTable=null})}}}]).directive("dfSchemaEditor",["MOD_SCHEMA_ASSET_PATH",function(MOD_SCHEMA_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-schema-editor.html",link:function(scope,elem,attrs){}}}]).directive("dfSchemaResizable",[function(){return{restrict:"A",scope:{},link:function(scope,elem,attrs){$(function(){$("#schema-navigator-resizable").resizable({alsoResize:"#schema-navigator-resizable-also"}),$("#schema-navigator-resizable-also").resizable()})}}}]).directive("dfUploadSchema",["INSTANCE_URL","MOD_SCHEMA_ASSET_PATH","$http","dfNotify","$timeout","SchemaJSONData","StateService","dfApplicationData",function(INSTANCE_URL,MOD_SCHEMA_ASSET_PATH,$http,dfNotify,$timeout,SchemaJSONData,StateService,dfApplicationData){return{restrict:"E",scope:!1,require:["dfUploadSchema","^dfTableTemplate"],templateUrl:MOD_SCHEMA_ASSET_PATH+"views/df-upload-schema.html",controller:function($scope){this.setDefault=function(){$scope.uploadSchemaData=SchemaJSONData.schemaJSON}},link:function(scope,elem,attrs,ctrls){var childCtrl=ctrls[0];ctrls[1].register("table_upload",childCtrl),scope.uploadObj={record:null,recordCopy:null},scope.schemaUploadEditorObj={editor:null},scope.uploadSchema=function(){var messageOptions;try{var editorData=angular.fromJson(scope.schemaUploadEditorObj.editor.getValue())}catch(e){return messageOptions={module:"Validation Error",type:"error",provider:"dreamfactory",message:"The schema JSON is not valid."},void dfNotify.error(messageOptions)}if(-1!==StateService.get("dfservice").components.findIndex(function(element,index,array){return element.name===editorData.resource[0].name}))return messageOptions={module:"Validation Error",type:"error",provider:"dreamfactory",message:"The table name already exists."},void dfNotify.error(messageOptions);scope._uploadSchema()},scope.closeUploadSchema=function(){scope._closeUploadSchema()},scope._uploadSchema=function(){var requestDataObj={params:{include_schema:!0},data:angular.fromJson(scope.schemaUploadEditorObj.editor.getValue())};scope._saveSchemaToServer(requestDataObj).then(function(result){var messageOptions={module:"Schema",type:"success",provider:"dreamfactory",message:"Tables created successfully."};angular.forEach(result.data.table,function(dataObj){scope.currentService.components.push({__dfUI:{newTable:!1},name:dataObj.name,path:"_schema/"+dataObj.name})});var curService=StateService.get("dfservice"),component={__dfUI:{newTable:!1},name:requestDataObj.data.resource[0].name,label:requestDataObj.data.resource[0].label};curService.components.push(component),dfApplicationData.updateServiceComponentsLocal(curService),scope.uploadSchemaData=null;var naviObj={service:curService.name,table:requestDataObj.data.resource[0].name,type:"upload"};scope.$emit("table:navigation:select",naviObj),dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})},scope._saveSchemaToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL.url+"/"+StateService.get("dfservice").name+"/_schema",data:requestDataObj.data})},scope._closeUploadSchema=function(){scope.$emit("table",{notify:"close"})}}}}]).directive("jsonEdit",function(){return{restrict:"A",require:"ngModel",template:'<textarea ng-model="jsonEditing"></textarea>',replace:!0,scope:{model:"=jsonEdit"},link:function(scope,element,attrs,ngModelCtrl){function setEditing(value){scope.jsonEditing=angular.copy(JSON2String(value))}function updateModel(value){scope.model=string2JSON(value)}function setValid(){ngModelCtrl.$setValidity("json",!0)}function setInvalid(){ngModelCtrl.$setValidity("json",!1)}function string2JSON(text){try{return angular.fromJson(text)}catch(err){return setInvalid(),text}}function JSON2String(object){return angular.toJson(object,!0)}function isValidJson(model){var flag=!0;try{angular.fromJson(model)}catch(err){flag=!1}return flag}setEditing(scope.model),scope.$watch("jsonEditing",function(newval,oldval){newval!=oldval&&(isValidJson(newval)?(setValid(),updateModel(newval)):setInvalid())},!0),scope.$watch("model",function(newval,oldval){newval!=oldval&&setEditing(newval)},!0)}}}),angular.module("dfScripts",["ngRoute","dfUtility"]).constant("MODSCRIPTING_ROUTER_PATH","/scripts").constant("MODSCRIPTING_ASSET_PATH","admin_components/adf-scripts/").constant("MODSCRIPTING_EXAMPLES_PATH","admin_components/adf-scripts/examples/").config(["$routeProvider","MODSCRIPTING_ROUTER_PATH","MODSCRIPTING_ASSET_PATH",function($routeProvider,MODSCRIPTING_ROUTER_PATH,MODSCRIPTING_ASSET_PATH){$routeProvider.when(MODSCRIPTING_ROUTER_PATH,{templateUrl:MODSCRIPTING_ASSET_PATH+"views/main.html",controller:"ScriptsCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("ScriptsCtrl",["INSTANCE_URL","SystemConfigDataService","$scope","$rootScope","$http","dfApplicationData","dfNotify","$location",function(INSTANCE_URL,SystemConfigDataService,$scope,$rootScope,$http,dfApplicationData,dfNotify,$location){$scope.$parent.title="Scripts",$scope.scriptGitHubTarget="scripts",$scope.newScript=!0,$scope.isEventScriptEditable=!0,$scope.eventScriptUpdateCounter=0,$scope.disableServiceLinkRefresh=!0,$scope.selections={service:null};var ScriptObj=function(name){return{name:name,type:"v8js",content:"",is_active:!1,allow_event_modification:!1,storage_service_id:null,scm_repository:null,scm_reference:null,storage_path:null}};$scope.handleFiles=function(element){var file=element.files&&element.files[0];if(file){var reader=new FileReader;reader.readAsText(file,"UTF-8"),reader.onload=function(evt){$scope.$apply(function(){$scope.currentScriptObj.content=evt.target.result,$scope.eventScriptUpdateCounter++})},reader.onerror=function(evt){}}},$scope.githubModalShow=function(){$rootScope.$broadcast("githubShowModal",$scope.scriptGitHubTarget)},$scope.isHostedSystem=!1,$scope.apiData=null,$scope.loadTabData=function(){$scope.dataLoading=!0;var primaryApis=["event_script"],secondaryApis=["service_list","script_type","service_link","environment"];dfApplicationData.getApiData(primaryApis,!0).then(function(response){var newApiData={};primaryApis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),dfApplicationData.getApiData(secondaryApis,null===$scope.apiData).then(function(response){secondaryApis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData},function(error){var msg="There was an error loading data for the Scripts tab. Please try refreshing your browser and logging in again.";error&&error.error&&(401===error.error.code||403===error.error.code)&&(msg="To use the Scripts tab your role must allow GET access to system/event_script, system/event, and system/script_type. To create, update, or delete scripts you need POST and DELETE access to /system/event_script.",$location.url("/home"));var messageOptions={module:"Scripts",provider:"dreamfactory",type:"error",message:msg};dfNotify.error(messageOptions)}).finally(function(){$scope.dataLoading=!1})},function(error){var msg="There was an error loading data for the Scripts tab. Please try refreshing your browser and logging in again.";error&&error.error&&(401===error.error.code||403===error.error.code)&&(msg="To use the Scripts tab your role must allow GET access to system/event_script, system/event, and system/script_type. To create, update, or delete scripts you need POST and DELETE access to /system/event_script.",$location.url("/home"));var messageOptions={module:"Scripts",provider:"dreamfactory",type:"error",message:msg};dfNotify.error(messageOptions),$scope.dataLoading=!1})},$scope.getRefreshEnable=function(){var type,enable=!1;return $scope.currentScriptObj&&$scope.selections.service&&("github"===(type=$scope.selections.service.type)||"gitlab"===type||"bitbucket"===type?$scope.currentScriptObj.scm_repository&&$scope.currentScriptObj.scm_reference&&$scope.currentScriptObj.storage_path&&(enable=!0):$scope.currentScriptObj.storage_path&&(enable=!0)),enable},$scope.resetServiceLink=function(){$scope.currentScriptObj.scm_repository=null,$scope.currentScriptObj.scm_reference=null,$scope.currentScriptObj.storage_path=null},$scope.pullLatestScript=function(){var serviceName=$scope.selections.service.name,serviceRepo=$scope.currentScriptObj.scm_repository,serviceRef=$scope.currentScriptObj.scm_reference,servicePath=$scope.currentScriptObj.storage_path,url=INSTANCE_URL.url+"/"+serviceName;if(!$scope.selections.service||"github"!==$scope.selections.service.type&&"gitlab"!==$scope.selections.service.type&&"bitbucket"!==$scope.selections.service.type)url=url+"/"+servicePath;else{var params={path:servicePath,branch:serviceRef,content:1};url=url+"/_repo/"+serviceRepo}$http({method:"GET",url:url,params:params}).then(function(result){$scope.currentScriptObj.content=result.data,$scope.eventScriptUpdateCounter++;var messageOptions={module:"Scripts",provider:"dreamfactory",type:"success",message:"Successfully pulled the latest script from source."};dfNotify.error(messageOptions)},function(error){var messageOptions={module:"Scripts",provider:"dreamfactory",type:"error",message:"There was an error pulling the latest script from source. Please make sure your service, path and permissions are correct and try again."};dfNotify.error(messageOptions)}).finally(function(){})},$scope.deleteScriptFromCache=function(){$http({method:"DELETE",url:INSTANCE_URL.url+"/system/cache/_event/"+$scope.currentScriptObj.name}).then(function(result){var messageOptions={module:"Scripts",provider:"dreamfactory",type:"success",message:"Successfully cleared script from cache."};dfNotify.error(messageOptions)},function(error){var messageOptions={module:"Scripts",provider:"dreamfactory",type:"error",message:"Failed to cleared script from cache."};dfNotify.error(messageOptions)}).finally(function(){})},$scope.loadTabData(),$scope.allowedScriptFormats=["js","php","py","txt"],$scope.currentServiceObj=null,$scope.currentResourceObj=null,$scope.currentEndpointObj=null,$scope.currentScriptObj=null,$scope.menuPathArr=[],$scope.eventLookup={},$scope.eventsLoading=!1,$scope.eventScriptEditorObj={editor:null},$scope.explodeEndpoint=function(endpointName,parameter){var endpoints=[endpointName];return null!==parameter&&endpointName.indexOf("{")>=0&&endpointName.indexOf("}")>=0&&angular.forEach(parameter,function(paramArray,paramName){angular.forEach(paramArray,function(itemName){endpoints.push(endpointName.replace("{"+paramName+"}",itemName))})}),endpoints},$scope.buildEventLookup=function(eventData){var lookupObj,newData=angular.copy(eventData),lookupData={};return angular.forEach(newData,function(resources,serviceName){angular.forEach(resources,function(resourceData,resourceName){angular.forEach(resourceData.endpoints,function(endpointName){lookupObj={service:serviceName,resource:resourceName,endpoint:endpointName},lookupData[endpointName]=lookupObj,null!==resourceData.parameter&&endpointName.indexOf("{")>=0&&endpointName.indexOf("}")>=0&&angular.forEach(resourceData.parameter,function(paramArray,paramName){angular.forEach(paramArray,function(itemName){lookupData[endpointName.replace("{"+paramName+"}",itemName)]=lookupObj})})})})}),lookupData},$scope.highlightService=function(serviceName){return $scope.apiData.event_script.some(function(scriptName){return 0===scriptName.indexOf(serviceName+".")})},$scope.highlightResource=function(resourceName){return $scope.apiData.event_script.some(function(scriptName){var event=$scope.eventLookup[scriptName];return!!event&&event.resource===resourceName})},$scope.highlightEndpoint=function(endpointName){return $scope.apiData.event_script.some(function(scriptName){var event=$scope.eventLookup[scriptName];return!!event&&event.endpoint===endpointName})},$scope.highlightExplodedEndpoint=function(endpointName){return $scope.apiData.event_script.some(function(scriptName){return scriptName===endpointName})},$scope.selectService=function(service){if(!$scope.eventsLoading){$scope.eventsLoading=!0;var serviceName=service.name;$http({method:"GET",url:INSTANCE_URL.url+"/system/event",params:{service:serviceName,scriptable:!0}}).then(function(result){$scope.menuPathArr.push(serviceName);var resources=result.data[serviceName];$scope.currentServiceObj={name:serviceName,resources:resources},$scope.eventLookup=$scope.buildEventLookup(result.data)},function(reject){var messageOptions={module:"Scripts",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){$scope.eventsLoading=!1})}},$scope.selectResource=function(resourceName,resource){$scope.menuPathArr.push(resourceName),$scope.currentResourceObj={name:resourceName,endpoints:resource.endpoints,parameter:resource.parameter}},$scope.selectEndpoint=function(endpointName){var endpoints;$scope.menuPathArr.push(endpointName),endpoints=$scope.explodeEndpoint(endpointName,$scope.currentResourceObj.parameter),$scope.currentEndpointObj={name:endpointName,endpoints:endpoints}},$scope.getServiceById=function(id){var matches=$scope.apiData.service_link.filter(function(service){return service.id===id});return 0===matches.length?null:matches[0]},$scope.getScript=function(scriptName){$scope.menuPathArr.push(scriptName);var requestDataObj={name:scriptName,params:{}};$http({method:"GET",url:INSTANCE_URL.url+"/system/event_script/"+requestDataObj.name,params:requestDataObj.params}).then(function(result){var obj=result.data;$scope.selections.service=$scope.getServiceById(obj.storage_service_id),$scope.selections.service&&(obj.content=""),$scope.currentScriptObj=obj,$scope.newScript=!1},function(reject){if(reject.data&&reject.data.error&&404===reject.data.error.code)$scope.currentScriptObj=new ScriptObj(scriptName),$scope.newScript=!0,$scope.selections.service=null;else{var messageOptions={module:"Scripts",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions),$scope.menuBack()}}).finally(function(){})},$scope.saveScript=function(){if($scope.currentScriptObj.name){$scope.currentScriptObj.storage_service_id=$scope.selections.service?$scope.selections.service.id:null,!$scope.selections.service||"github"!==$scope.selections.service.type&&"gitlab"!==$scope.selections.service.type&&"bitbucket"!==$scope.selections.service.type?$scope.currentScriptObj.scm_repository=null:$scope.currentScriptObj.scm_repository=$scope.currentScriptObj.scm_repository?$scope.currentScriptObj.scm_repository:null,!$scope.selections.service||"github"!==$scope.selections.service.type&&"gitlab"!==$scope.selections.service.type&&"bitbucket"!==$scope.selections.service.type?$scope.currentScriptObj.scm_reference=null:$scope.currentScriptObj.scm_reference=$scope.currentScriptObj.scm_reference?$scope.currentScriptObj.scm_reference:null,$scope.selections.service?$scope.currentScriptObj.storage_path=$scope.currentScriptObj.storage_path?$scope.currentScriptObj.storage_path:null:$scope.currentScriptObj.storage_path=null,$scope.selections.service?($scope.currentScriptObj.content="",$scope.eventScriptUpdateCounter++):$scope.currentScriptObj.content=$scope.eventScriptEditorObj.editor.getValue();var requestDataObj={name:$scope.currentScriptObj.name,params:{},data:$scope.currentScriptObj};$http({method:"POST",url:INSTANCE_URL.url+"/system/event_script/"+requestDataObj.name,params:requestDataObj.params,data:requestDataObj.data}).then(function(result){$scope.newScript=!1;var messageOptions={module:"Scripts",type:"success",provider:"dreamfactory",message:'Script "'+$scope.currentScriptObj.name+'" saved successfully.'};dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Scripts",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){$scope.loadTabData()})}},$scope.deleteScript=function(){if(dfNotify.confirm("Delete "+$scope.currentScriptObj.name+"?")){var requestDataObj={name:$scope.currentScriptObj.name,params:{}};$http({method:"DELETE",url:INSTANCE_URL.url+"/system/event_script/"+requestDataObj.name,params:requestDataObj.params}).then(function(result){var messageOptions={module:"Scripts",type:"success",provider:"dreamfactory",message:"Script deleted successfully."};dfNotify.success(messageOptions),$scope.menuPathArr.pop(),$scope.currentScriptObj=null},function(reject){var messageOptions={module:"Scripts",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)}).finally(function(){$scope.loadTabData()})}},$scope.menuOpen=!0,$scope.toggleMenu=function(){$scope.menuOpen=!$scope.menuOpen},$scope.menuBack=function(){$scope.menuPathArr.length>0&&($scope.menuPathArr.pop(),$scope.currentScriptObj=null,$scope.eventScriptEditorObj.editor.setValue(""))},$scope.jumpTo=function(index){for(;$scope.menuPathArr.length-1!==index;)$scope.menuBack()},$scope.$broadcast("script:loaded:success");var watchGithubCredUser=$scope.$watch("githubModal.username",function(newValue,oldValue){if(!newValue)return!1;$scope.modalError={visible:!1,message:""}}),watchGithubCredPass=$scope.$watch("githubModal.password",function(newValue,oldValue){if(!newValue)return!1;$scope.modalError={visible:!1,message:""}}),watchGithubURL=$scope.$watch("githubModal.url",function(newValue,oldValue){if(!newValue)return!1;if($scope.modalError={visible:!1,message:""},newValue.indexOf(".js")>0||newValue.indexOf(".py")>0||newValue.indexOf(".php")>0||newValue.indexOf(".txt")>0){var url=angular.copy($scope.githubModal.url),url_array=url.substr(url.indexOf(".com/")+5).split("/"),github_api_url="https://api.github.com/repos/"+url_array[0]+"/"+url_array[1];$http.get(github_api_url,{headers:{"X-DreamFactory-API-Key":void 0,"X-DreamFactory-Session-Token":void 0}}).then(function(response){$scope.githubModal.private=response.data.private,$scope.modalError={visible:!1,message:""}},function(response){404===response.status&&($scope.modalError={visible:!0,message:"Error: The repository could not be found."})})}}),watchCurrentScriptObj=$scope.$watchCollection("currentScriptObj",function(newValue,oldValue){newValue&&($scope.disableServiceLinkRefresh=!$scope.getRefreshEnable())}),watchSelections=$scope.$watchCollection("selections",function(newValue,oldValue){$scope.disableServiceLinkRefresh=!$scope.getRefreshEnable(),newValue&&($scope.isEventScriptEditable=null===newValue.service,null!==newValue.service&&($scope.currentScriptObj.content="",$scope.eventScriptUpdateCounter++))}),watchApiData=$scope.$watchCollection("apiData",function(newValue,oldValue){newValue&&newValue.environment&&newValue.environment.platform&&newValue.environment.platform.is_hosted&&($scope.isHostedSystem=!0)});$scope.$on("$destroy",function(e){watchGithubURL(),watchGithubCredUser(),watchGithubCredPass(),watchCurrentScriptObj(),watchSelections(),watchApiData()})}]).directive("scriptSidebarMenu",["MODSCRIPTING_ASSET_PATH",function(MODSCRIPTING_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MODSCRIPTING_ASSET_PATH+"views/script-sidebar-menu.html",link:function(scope,elem,attrs){}}}]).directive("dfAceSamplesSelect",["MODSCRIPTING_ASSET_PATH","MODSCRIPTING_EXAMPLES_PATH","$http",function(MODSCRIPTING_ASSET_PATH,MODSCRIPTING_EXAMPLES_PATH,$http){return{restrict:"E",scope:!1,templateUrl:MODSCRIPTING_ASSET_PATH+"views/df-ace-samples.html",link:function(scope,elem,attrs){scope.eventScriptSamplesEditorObj={editor:null},scope.eventScriptSamplesType="nodejs",scope.eventScriptSamplesContent="",scope.scriptSamplesSelect=function(type){var fileExt;switch(type){case"nodejs":fileExt="node.js";break;case"php":fileExt="php";break;case"python":fileExt="py";break;case"v8js":fileExt="v8.js";break;default:return}scope.eventScriptSamplesType=type,$http.get(MODSCRIPTING_EXAMPLES_PATH+"example.scripts."+fileExt).then(function(result){scope.eventScriptSamplesContent=result.data},function(reject){})},scope.scriptSamplesSelect("nodejs")}}}]).directive("dfScriptingLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]),angular.module("dfProfile",["ngRoute","dfUtility","dfUserManagement","dfApplication"]).constant("MOD_PROFILE_ROUTER_PATH","/profile").constant("MOD_PROFILE_ASSET_PATH","admin_components/adf-profile/").config(["$routeProvider","MOD_PROFILE_ROUTER_PATH","MOD_PROFILE_ASSET_PATH",function($routeProvider,MOD_PROFILE_ROUTER_PATH,MOD_PROFILE_ASSET_PATH){$routeProvider.when(MOD_PROFILE_ROUTER_PATH,{templateUrl:MOD_PROFILE_ASSET_PATH+"views/main.html",controller:"ProfileCtrl",resolve:{checkProfileRoute:["UserDataService","$location",function(UserDataService,$location){UserDataService.getCurrentUser()||$location.url("/login")}]}})}]).run([function(){}]).controller("ProfileCtrl",["$scope","UserDataService","dfApplicationData","dfNotify","$http","INSTANCE_URL",function($scope,UserDataService,dfApplicationData,dfNotify,$http,INSTANCE_URL){$scope.user=null,$scope.isAdminUser=UserDataService.getCurrentUser().is_sys_admin,$scope.resource=$scope.isAdminUser?"system/admin":"user",$http({method:"GET",url:INSTANCE_URL.url+"/"+$scope.resource+"/profile"}).then(function(result){$scope.user=result.data,($scope.user.adldap||$scope.user.oauth_provider)&&(angular.element("#set-password-section").hide(),angular.element("#set-security-question-section").hide())},function(error){var messageOptions={module:"Profile",provider:"dreamfactory",type:"error",message:"There was an error loading User Profile data. Please try refreshing your browser and logging in again."};dfNotify.error(messageOptions)}),$scope.$parent.title="",$scope.links=[{name:"edit-profile",label:"Profile",path:"edit-profile"}]}]).directive("dfEditProfile",["MOD_PROFILE_ASSET_PATH","INSTANCE_URL","dfNotify","dfApplicationData","UserDataService","dfObjectService","$http","$cookies","$cookieStore","SystemConfigDataService",function(MOD_APPS_ASSET_PATH,INSTANCE_URL,dfNotify,dfApplicationData,UserDataService,dfObjectService,$http,$cookies,$cookieStore,SystemConfigDataService){return{restrict:"E",scope:!1,templateUrl:MOD_APPS_ASSET_PATH+"views/df-edit-profile.html",link:function(scope,elem,attrs){var messageOptions,requestDataObj,session_token,existingUser;scope.loginAttribute="email",scope.bitnami_demo=!1;var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("login_attribute")&&(scope.loginAttribute=systemConfig.authentication.login_attribute),systemConfig&&systemConfig.platform&&systemConfig.platform.hasOwnProperty("bitnami_demo")&&(scope.bitnami_demo=systemConfig.platform.bitnami_demo),scope.updateUser=function(){scope.setPassword?scope.updatePassword():scope.updateProfile(!1)},scope.updatePassword=function(){if(scope.password.old_password&&scope.password.new_password&&scope.password.verify_password){if(scope.password.new_password!==scope.password.verify_password)return messageOptions={module:"Profile",type:"error",provider:"dreamfactory",message:"Passwords do not match."},void dfNotify.error(messageOptions);requestDataObj={params:{reset:!1,login:!0},data:{old_password:scope.password.old_password,new_password:scope.password.new_password}},scope.updateUserPasswordToServer(requestDataObj).then(function(result){(session_token=result.data.session_token)&&((existingUser=UserDataService.getCurrentUser()).session_token=session_token,UserDataService.setCurrentUser(existingUser)),scope.updateProfile(!0)},function(reject){var messageOptions={module:"Profile",type:"error",provider:"dreamfactory",message:reject};dfNotify.error(messageOptions)})}},scope.updateProfile=function(passwordUpdated){requestDataObj={params:{fields:"*"},data:scope.user,url:INSTANCE_URL.url+"/"+scope.resource+"/profile"},scope.updateUserToServer(requestDataObj).then(function(result){(session_token=result.data.session_token)&&((existingUser=UserDataService.getCurrentUser()).session_token=session_token,UserDataService.setCurrentUser(existingUser)),scope.user.hasOwnProperty("security_question")&&delete scope.user.security_question,scope.user.hasOwnProperty("security_answer")&&delete scope.user.security_answer,UserDataService.setCurrentUser(dfObjectService.mergeObjects(scope.user,UserDataService.getCurrentUser())),scope.isAdminUser&&dfApplicationData.deleteApiDataFromCache("admin"),scope.setPassword=!1,scope.setQuestion=!1,messageOptions={module:"Profile",type:"success",provider:"dreamfactory",message:(passwordUpdated?"Profile and password":"Profile")+" updated successfully."},dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Profile",type:"error",provider:"dreamfactory",message:passwordUpdated?"Password updated successfully but Profile could not be saved.":reject};dfNotify.error(messageOptions)})},scope.updateUserToServer=function(requestDataObj){return $http({method:"PUT",url:INSTANCE_URL.url+"/"+scope.resource+"/profile",data:requestDataObj.data})},scope.updateUserPasswordToServer=function(requestDataObj){return $http({method:"POST",url:INSTANCE_URL.url+"/"+scope.resource+"/password",params:requestDataObj.params,data:requestDataObj.data})},scope.$watch("setPassword",function(newValue){newValue?(scope.requireOldPassword=!0,scope.password={old_password:"",new_password:"",verify_password:""}):(scope.password=null,scope.identical=!0)})}}}]),angular.module("dfApplication",["dfUtility","dfUserManagement","ngResource"]).run([function(){}]).service("dfApplicationData",["$q","$http","INSTANCE_URL","dfObjectService","UserDataService","dfSystemData","$rootScope","$location",function($q,$http,INSTANCE_URL,dfObjectService,UserDataService,dfSystemData,$rootScope,$location){function _checkParams(options){options.params?angular.forEach(options.params,function(value,key){null==value&&delete options.params[key]}):options.params={}}function _getApiData(apis,forceRefresh){var deferred=$q.defer(),promises=apis.map(function(api){return _loadOne(api,forceRefresh)});return $q.all(promises).then(function(response){deferred.resolve(response)},function(response){deferred.reject(response)}),deferred.promise}function _loadOne(api,forceRefresh){var params,options,deferred=$q.defer();if(!0===forceRefresh&&delete dfApplicationObj.apis[api],dfApplicationObj.apis.hasOwnProperty(api))deferred.resolve(dfApplicationObj.apis[api]);else{switch((params=_getApiPrefs().data[api])||(params={}),options=null,api){case"system":params.api="";break;case"event_list":params.api="event";break;case"service_link":case"service_list":case"service_type_list":options={url:INSTANCE_URL.url};break;default:params.api=api}dfSystemData.resource(options).get(params).$promise.then(function(response){dfApplicationObj.apis[api]="service_link"===api||"service_list"===api?{resource:response.services}:"service_type_list"===api?{resource:response.service_types}:response,deferred.resolve(dfApplicationObj.apis[api])},function(error){deferred.reject(error.data)})}return deferred.promise}function _getApiDataSync(api,forceRefresh){if(!0===forceRefresh&&delete dfApplicationObj.apis[api],dfApplicationObj.apis.hasOwnProperty(api));else{var xhr,currentUser=UserDataService.getCurrentUser();(xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP")).open("GET",INSTANCE_URL.url+"/system/"+api,!1),xhr.setRequestHeader("X-DreamFactory-API-Key","6498a8ad1beb9d84d63035c5d1120c007fad6de706734db9689f8996707e0f7d"),currentUser&&currentUser.session_token&&xhr.setRequestHeader("X-DreamFactory-Session-Token",currentUser.session_token),xhr.setRequestHeader("Content-Type","application/json"),xhr.send(),4==xhr.readyState&&200==xhr.status&&(dfApplicationObj.apis[api]=angular.fromJson(xhr.responseText))}return dfApplicationObj.apis[api]}function _resetApplicationObj(){dfApplicationObj={apis:{}}}function _saveApiData(api,options){_checkParams(options);var params=options.params;return params.api=api,options.dontWrapData||(options.data={resource:[options.data]}),dfSystemData.resource(options).post(params,options.data,function(result){result&&result.resource&&"[object Array]"===Object.prototype.toString.call(result.resource)&&result.resource.length>0&&(result=result.resource[0]),__insertApiData(api,result)})}function _updateApiData(api,options){_checkParams(options);var params=options.params;return params.api=api,dfSystemData.resource({url:options.url})[options.method||"put"](params,options.data,function(result){__updateApiData(api,result)})}function _deleteApiData(api,options){_checkParams(options);var params=options.params;return params.api=api,params.rollback=_getApiPrefs().data[api].rollback,dfSystemData.resource().delete(params,options.data,function(result){__deleteApiData(api,result)})}function _getDataSetFromServer(api,options){options=options||{params:{}};var defaults=_getApiPrefs().data[api];options.params=dfObjectService.mergeObjects(defaults,options.params);var params=options.params;return params.api=api,dfSystemData.resource(options).get(params,function(result){__replaceApiData(api,result)})}function _getApiPrefs(){return{data:{app:{include_count:!0,limit:100,related:"role_by_role_id"},role:{include_count:!0,related:"role_service_access_by_role_id,lookup_by_role_id",limit:1e4},admin:{include_count:!0,limit:100,related:"lookup_by_user_id"},user:{include_count:!0,limit:100,related:"lookup_by_user_id,user_to_app_to_role_by_user_id"},service:{include_count:!0,limit:100,related:"service_doc_by_service_id"},service_link:{group:"source control,file"},service_list:{},service_type_list:{},cache:{fields:"*"},email_template:{include_count:!0},lookup:{include_count:!0},cors:{include_count:!0},event_list:{as_list:!0},event_script:{as_list:!0},limit:{include_count:!0,limit:100,related:"service_by_service_id,role_by_role_id,user_by_user_id,limit_cache_by_limit_id"}}}}function __insertApiData(api,dataObj){dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource)&&dfApplicationObj.apis[api].resource.push(dataObj),dfApplicationObj.apis.hasOwnProperty(api)&&dfApplicationObj.apis[api].hasOwnProperty("meta")&&"[object Object]"===Object.prototype.toString.call(dfApplicationObj.apis[api].meta)&&(dfApplicationObj.apis[api].meta.hasOwnProperty("count")?dfApplicationObj.apis[api].meta.count++:dfApplicationObj.apis[api].meta.count=1)}function __updateApiData(api,dataObj){if(dataObj.resource&&(dataObj=dataObj.resource),dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource))for(var found=!1,i=0;!found&&i<=dfApplicationObj.apis[api].resource.length-1;)dataObj.id===dfApplicationObj.apis[api].resource[i].id&&(found=!0,dfApplicationObj.apis[api].resource.splice(i,1,dataObj)),i++}function __deleteApiData(api,result){function removeRecord(record){for(var found=!1,i=0;!found&&i<dfApplicationObj.apis[api].resource.length;)record.id===dfApplicationObj.apis[api].resource[i].id&&(found=!0,dfApplicationObj.apis[api].resource.splice(i,1)),i++}function updateCount(){dfApplicationObj.apis.hasOwnProperty(api)&&dfApplicationObj.apis[api].hasOwnProperty("meta")&&"[object Object]"===Object.prototype.toString.call(dfApplicationObj.apis[api].meta)&&dfApplicationObj.apis[api].meta.hasOwnProperty("count")&&dfApplicationObj.apis[api].meta.count--}dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource)&&(result.hasOwnProperty("resource")?angular.forEach(result.resource,function(_record){removeRecord(_record),updateCount()}):(removeRecord(result),updateCount()))}function __replaceApiData(api,result){dfApplicationObj.apis.hasOwnProperty(api)&&"[object Array]"===Object.prototype.toString.call(dfApplicationObj.apis[api].resource)&&(dfApplicationObj.apis[api].resource=result.resource,dfApplicationObj.apis[api].meta=result.meta)}var dfApplicationObj={apis:{}};return{getApplicationObj:function(){return dfApplicationObj},resetApplicationObj:function(){_resetApplicationObj()},getApiRecordCount:function(api){var count=0;return dfApplicationObj.apis.hasOwnProperty(api)&&dfApplicationObj.apis[api].meta&&(count=dfApplicationObj.apis[api].meta.count),count},getApiDataFromCache:function(api){var result=void 0;return dfApplicationObj.apis.hasOwnProperty(api)&&(result=dfApplicationObj.apis[api].resource?dfApplicationObj.apis[api].resource:dfApplicationObj.apis[api]),result},deleteApiDataFromCache:function(api){dfApplicationObj.apis.hasOwnProperty(api)&&delete dfApplicationObj.apis[api]},saveApiData:function(api,options){if(dfApplicationObj.apis.hasOwnProperty(api))return _saveApiData(api,options)},updateApiData:function(api,options){if(dfApplicationObj.apis.hasOwnProperty(api))return _updateApiData(api,options)},deleteApiData:function(api,options){if(dfApplicationObj.apis.hasOwnProperty(api))return _deleteApiData(api,options)},getDataSetFromServer:function(api,options){if(dfApplicationObj.apis.hasOwnProperty(api))return _getDataSetFromServer(api,options)},getApiPrefs:function(){return _getApiPrefs()},getServiceComponents:function(serviceName,url,params,forceRefresh){var deferred=$q.defer(),service=this.getApiDataFromCache("service_list").filter(function(obj){return obj.name===serviceName})[0];return service.components&&!forceRefresh?deferred.resolve(service.components):$http.get(url,params||{}).then(function(result){service.components=result.data.resource||result.data,deferred.resolve(service.components),__updateApiData("service_list",service)},function(error){deferred.reject(error.data)}),deferred.promise},updateServiceComponentsLocal:function(svc){var serviceList=this.getApiDataFromCache("service_list");void 0!==serviceList&&(serviceList.filter(function(obj){return obj.name===svc.name})[0].components=svc.components)},getApiData:function(apis,forceRefresh){return _getApiData(apis,forceRefresh)},getApiDataSync:function(api,forceRefresh){return _getApiDataSync(api,forceRefresh)}}}]).service("dfSystemData",["INSTANCE_URL","$resource","dfObjectService",function(INSTANCE_URL,$resource,dfObjectService){return{resource:function(options){options=options||{};var defaults={headers:""},url=(options=dfObjectService.mergeObjects(options,defaults)).url||INSTANCE_URL.url+"/system/:api/:id",queryParams=options.queryParams||{api:"@api",id:"@id"};return $resource(url,queryParams,{get:{method:"GET",headers:options.headers},post:{method:"POST",headers:options.headers},put:{method:"PUT",headers:options.headers},patch:{method:"PATCH",headers:options.headers},delete:{method:"DELETE",headers:options.headers}})}}}]).factory("httpValidSession",["$q","$rootScope","$location","INSTANCE_URL","$injector",function($q,$rootScope,$location,INSTANCE_URL,$injector){var refreshSession=function(reject){var $http=$injector.get("$http"),UserDataService=$injector.get("UserDataService"),user=UserDataService.getCurrentUser(),deferred=$injector.get("$q").defer(),url=user.is_sys_admin?"/system/admin/session":"/user/session";return $http({method:"PUT",url:INSTANCE_URL.url+url}).then(function(result){UserDataService.setCurrentUser(result.data),retry(reject.config,deferred)},function(){newSession(reject,deferred)}),deferred.promise},retry=function(config,deferred){var request={method:config.method,url:config.url};return config.params&&(request.params=config.params),config.data&&(request.data=config.data),config.transformRequest&&(request.transformRequest=config.transformRequest),$injector.get("$http")(request).then(deferred.resolve,deferred.reject),deferred.promise},newSession=function(reject,deferred){$injector.get("UserDataService").unsetCurrentUser();$injector.get("UserEventsService");var deferred=deferred||$injector.get("$q").defer();return $rootScope.$$childHead.openLoginWindow(reject),$rootScope.$on("user:login:success",function(){retry(reject.config,deferred)}),deferred.promise};return{request:function(config){return config},requestError:function(reject){return $q.reject(reject)},response:function(response){return response},responseError:function(reject){switch($location.path()){case"/login":case"/user-invite":case"/register-confirm":case"/register":case"/register-complete":case"/apidocs":break;default:if(!reject.config.ignore401&&-1===reject.config.url.indexOf("/session")&&$injector.get("UserDataService").getCurrentUser()&&(401===reject.status||reject.data&&reject.data.error&&401===reject.data.error.code||(403===reject.status||reject.data&&reject.data.error&&403===reject.data.error.code)&&reject.data.error.message.indexOf("The token has been blacklisted")>=0))return reject.data.error.message.indexOf("Token has expired")>=0||-1!==reject.config.url.indexOf("/profile")?refreshSession(reject):newSession(reject)}return $q.reject(reject)}}}]),angular.module("dfHelp",[]).constant("MOD_HELP_ASSET_PATH","admin_components/adf-help/").directive("dfSimpleHelp",["MOD_HELP_ASSET_PATH",function(MOD_HELP_ASSET_PATH){return{restrict:"E",replace:!0,scope:{options:"=?"},templateUrl:MOD_HELP_ASSET_PATH+"views/simple-help.html",link:function(scope,elem,attrs){var helpDiv=$(elem).children(".help-box");scope.showHelp=function(){scope._showHelp()},scope.closeHelp=function(){scope._closeHelp()},scope._setVisible=function(){helpDiv.is(":hidden")&&helpDiv.show()},scope._setHidden=function(){helpDiv.is(":visible")&&helpDiv.hide()},scope._setWidth=function(){helpDiv.css({width:$(window).outerWidth()/3})},scope._showHelp=function(){if(helpDiv.is(":visible"))return scope.closeHelp(),!1;helpDiv.addClass("dfp-right-bottom"),scope._setWidth(),scope._setVisible()},scope._closeHelp=function(){if(helpDiv.is(":hidden"))return!1;helpDiv.removeClass("dfp-right-bottom"),scope._setHidden()}}}}]).directive("dfLargeHelp",["MOD_HELP_ASSET_PATH","$compile",function(MOD_HELP_ASSET_PATH,$compile){return{restrict:"E",replace:!0,scope:{options:"="},templateUrl:MOD_HELP_ASSET_PATH+"views/df-large-help.html",link:function(scope,elem,attrs){scope.$watch("options",function(newValue,oldValue){newValue&&(newValue.hasOwnProperty("title")&&$(elem).children(".df-large-help-title").html(newValue.title),newValue.hasOwnProperty("text")&&$(elem).children(".df-large-help-text").html(newValue.text))})}}}]),angular.module("dfLaunchPad",["ngRoute","dfUtility","dfTable"]).constant("MOD_LAUNCHPAD_ROUTER_PATH","/launchpad").constant("MOD_LAUNCHPAD_ASSET_PATH","admin_components/adf-launchpad/").config(["$routeProvider","MOD_LAUNCHPAD_ROUTER_PATH","MOD_LAUNCHPAD_ASSET_PATH",function($routeProvider,MOD_LAUNCHPAD_ROUTER_PATH,MOD_LAUNCHPAD_ASSET_PATH){$routeProvider.when(MOD_LAUNCHPAD_ROUTER_PATH,{templateUrl:MOD_LAUNCHPAD_ASSET_PATH+"views/main.html",controller:"LaunchpadCtrl",resolve:{loadApps:["SystemConfigDataService","UserDataService","$location","$q",function(SystemConfigDataService,UserDataService,$location,$q){var defer=$q.defer(),systemConfig=SystemConfigDataService.getSystemConfig();return location.search.substring(1)?($location.url("/login"),defer.reject()):systemConfig&&systemConfig.apps&&0!==systemConfig.apps.length||UserDataService.getCurrentUser()?defer.resolve(systemConfig):($location.url("/login"),defer.reject()),defer.promise}]}})}]).run([function(){}]).controller("LaunchpadCtrl",["$scope","UserDataService","SystemConfigDataService","loadApps",function($scope,UserDataService,SystemConfigDataService,loadApps){$scope.apps=[],$scope.error=!1,$scope.$watch(function(){return loadApps},function(newValue,oldValue){var apps=[],error=!0;newValue&&newValue.hasOwnProperty("apps")&&(error=!1,angular.forEach(newValue.apps,function(app){app.url&&apps.push(app)})),$scope.apps=apps,$scope.error=error},!0)}]).directive("dfApp",["MOD_LAUNCHPAD_ASSET_PATH","$window",function(MOD_LAUNCHPAD_ASSET_PATH,$window){return{restrict:"E",scope:{app:"="},replace:!0,templateUrl:MOD_LAUNCHPAD_ASSET_PATH+"views/df-app.html",link:function(scope,elem,attrs){scope.launchApp=function(app){scope._launchApp(app)},scope._launchApp=function(app){$window.open(app.url)}}}}]),angular.module("dfApiDocs",["ngRoute","dfUtility"]).constant("MOD_APIDOCS_ROUTER_PATH","/apidocs").constant("MOD_APIDOCS_ASSET_PATH","admin_components/adf-apidocs/").config(["$routeProvider","MOD_APIDOCS_ROUTER_PATH","MOD_APIDOCS_ASSET_PATH",function($routeProvider,MOD_APIDOCS_ROUTER_PATH,MOD_APIDOCS_ASSET_PATH){$routeProvider.when(MOD_APIDOCS_ROUTER_PATH,{templateUrl:MOD_APIDOCS_ASSET_PATH+"views/main.html",controller:"ApiDocsCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("ApiDocsCtrl",["$scope",function($scope){$scope.$parent.title="API Docs",$scope.links=[{name:"apidocs",label:"View",path:"apidocs"}]}]).directive("apiDocs",["MOD_APIDOCS_ASSET_PATH","INSTANCE_BASE_URL",function(MOD_APIDOCS_ASSET_PATH,INSTANCE_BASE_URL){return{restrict:"E",scope:{},templateUrl:MOD_APIDOCS_ASSET_PATH+"views/apidocs.html",link:function(scope,elem,attrs){scope.server=INSTANCE_BASE_URL+"/df-api-docs-ui/dist/index.html?admin_app=1",scope.$broadcast("apidocs:loaded")}}}]),angular.module("dfFileManager",["ngRoute","dfUtility"]).constant("MOD_FILE_MANAGER_ROUTER_PATH","/file-manager").constant("MOD_FILE_MANAGER_ASSET_PATH","admin_components/adf-file-manager/").config(["$routeProvider","MOD_FILE_MANAGER_ROUTER_PATH","MOD_FILE_MANAGER_ASSET_PATH",function($routeProvider,MOD_FILE_MANAGER_ROUTER_PATH,MOD_FILE_MANAGER_ASSET_PATH){$routeProvider.when(MOD_FILE_MANAGER_ROUTER_PATH,{templateUrl:MOD_FILE_MANAGER_ASSET_PATH+"views/main.html",controller:"FileCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("FileCtrl",["$scope",function($scope){$scope.$parent.title="Files",$scope.links=[{name:"manage-files",label:"Manage",path:"manage-files"}]}]).directive("dfFileManager",["MOD_FILE_MANAGER_ASSET_PATH","INSTANCE_BASE_URL",function(MOD_FILE_MANAGER_ASSET_PATH,INSTANCE_BASE_URL){return{restrict:"E",scope:!1,templateUrl:MOD_FILE_MANAGER_ASSET_PATH+"views/df-file-manager.html",link:function(scope,elem,attrs){$("#root-file-manager iframe").attr("src",INSTANCE_BASE_URL+"/filemanager/index.html?path=/&allowroot=true").show(),scope.$broadcast("filemanager:loaded")}}}]),angular.module("dfPackageManager",["ngRoute","dfUtility","ngclipboard"]).constant("MOD_PACKAGE_MANAGER_ROUTER_PATH","/package-manager").constant("MOD_PACKAGE_MANAGER_ASSET_PATH","admin_components/adf-package-manager/").config(["$routeProvider","MOD_PACKAGE_MANAGER_ROUTER_PATH","MOD_PACKAGE_MANAGER_ASSET_PATH",function($routeProvider,MOD_PACKAGE_MANAGER_ROUTER_PATH,MOD_PACKAGE_MANAGER_ASSET_PATH){$routeProvider.when(MOD_PACKAGE_MANAGER_ROUTER_PATH,{templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/main.html",controller:"PackageCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).directive("tabs",function(){return{restrict:"E",transclude:!0,scope:{},controller:["$scope",function($scope){var panes=$scope.panes=[];$scope.select=function(pane){angular.forEach(panes,function(pane){pane.selected=!1}),pane.selected=!0},this.addPane=function(pane){0==panes.length&&$scope.select(pane),panes.push(pane)}}],template:'<div class="tabbable"><ul class="nav nav-tabs"><li ng-repeat="pane in panes" ng-class="{active:pane.selected}"><a href="" ng-click="select(pane)">{{pane.title}}</a></li></ul><div class="tab-content" ng-transclude></div></div>',replace:!0}}).directive("pane",function(){return{require:"^tabs",restrict:"E",transclude:!0,scope:{title:"@"},link:function(scope,element,attrs,tabsCtrl){tabsCtrl.addPane(scope)},template:'<div class="tab-pane" ng-class="{active: selected}" ng-transclude></div>',replace:!0}}).controller("PackageCtrl",["$scope","$rootScope","dfApplicationData","dfNotify","$location",function($scope,$rootScope,dfApplicationData,dfNotify,$location){$scope.$parent.title="Packages",$scope.apiData=null,$scope.loadTabData=function(){$scope.dataLoading=!0;var primaryApis=["service_list","service_type_list","environment","package"],secondaryApis=["app"];dfApplicationData.getApiData(primaryApis,!0).then(function(response){var newApiData={};primaryApis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),dfApplicationData.getApiData(secondaryApis,!0).then(function(response){secondaryApis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]})},function(error){newApiData.app=[]}).finally(function(){$scope.apiData=newApiData,$scope.dataLoading=!1})},function(error){var msg="There was an error loading data for the Packages tab. Please try refreshing your browser and logging in again.";error&&error.error&&(401===error.error.code||403===error.error.code)&&(msg="To use the Packages tab your role must allow GET and POST access to system/package.",$location.url("/home"));var messageOptions={module:"Packages",provider:"dreamfactory",type:"error",message:msg};dfNotify.error(messageOptions),$scope.dataLoading=!1})},$scope.loadTabData(),$scope.dfLargeHelp={packageManager:{title:"Packages Overview",text:"Import and export users, apps, files, database schemas and more."},packageExport:{title:"",text:"<b>To create a DreamFactory package export file, follow these instructions.</b><br/><ul><li>Use the UI below to build a list of items to export.</li><li>You should enter a password if you'd like exported user passwords and service credentials to be encrypted. This password will be required if you decide to import this package file later.</li><li>Select a file service to store the exported zip file. Folder name is optional.</li><li>Click the Export button to save the zip file to the file storage location you selected.</li></ul>"}}}]).directive("file",function(){return{scope:{file:"="},link:function(scope,el,attrs){el.bind("change",function(event){var file=event.target.files[0];scope.file=file||void 0,scope.$apply()})}}}).directive("dfImportPackage",["MOD_PACKAGE_MANAGER_ASSET_PATH","INSTANCE_URL","UserDataService","dfApplicationData","dfNotify","$timeout","$http",function(MOD_PACKAGE_MANAGER_ASSET_PATH,INSTANCE_URL,UserDataService,dfApplicationData,dfNotify,$timeout,$http){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-import-package.html",link:function(scope,elem,attrs){scope.packageImportPassword="",scope.overwrite=!1,scope.fileSelector=angular.element("#fileSelect"),scope.fileImportPath=null,scope.uploadFile=null,scope.browseFileSystem=function(){scope.fileSelector.trigger("click")},scope.importPackageFile=function(){var file=scope.file;if(void 0===file&&(file=scope.fileImportPath),file){var currentUser=UserDataService.getCurrentUser();$http({method:"POST",url:INSTANCE_URL.url+"/system/package?password="+scope.packageImportPassword+"&overwrite="+scope.overwrite,headers:{"X-DreamFactory-Session-Token":currentUser.session_token,"Content-Type":void 0},data:{files:file,import_url:file},transformRequest:function(data){var formData=new FormData;return angular.forEach(data,function(value,key){formData.append(key,value)}),formData}}).then(function(result){if(result&&result.data)if(!0===result.data.success){var messageOptions={module:"Packages",provider:"dreamfactory",type:"success",message:"Package was imported successfully."};dfNotify.success(messageOptions),scope.importClear(),scope.loadTabData()}else{var notice="";angular.forEach(result.data.log.notice,function(value,key){notice+="* "+value+"\n"});var msg="Package import failed.\n\nReason:\n"+notice;$timeout(function(){alert(msg)})}},function(reject){var messageOptions={module:"Packages",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}),scope.packageImportPassword=""}else{var messageOptions={module:"Packages",provider:"dreamfactory",type:"error",message:"No package file selected."};dfNotify.error(messageOptions)}},scope.importClear=function(){scope.file&&delete scope.file,angular.element("input[type='file']").val(null),scope.packageImportPassword="",scope.fileImportPath=null};var watchUploadFile=scope.$watch("uploadFile",function(n,o){n&&(scope.fileImportPath=n.name)});scope.$on("$destroy",function(e){watchUploadFile()})}}}]).directive("dfViewContent",["MOD_PACKAGE_MANAGER_ASSET_PATH",function(MOD_PACKAGE_MANAGER_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-view-content.html",link:function(scope,elem,attrs){}}}]).directive("dfSelectContent",["$http","$timeout","MOD_PACKAGE_MANAGER_ASSET_PATH","dfApplicationData","dfNotify",function($http,$timeout,MOD_PACKAGE_MANAGER_ASSET_PATH,dfApplicationData,dfNotify){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-select-content.html",link:function(scope,elem,attrs){scope.initVars=function(){scope.types=[],scope.selectedType=null,scope.names=[],scope.selectedName=null,scope.selectedNameData=[],scope.tableData=[],scope.search={}},scope.resetVars=function(){scope.selectedType=null,scope.selectedName=null,scope.selectedNameData=[],scope.tableData=[],scope.search={}},scope.initVars();var filterTextTimeout,tempFilterText=null,TableData=function(tableData){return{__dfUI:{selected:!1},record:tableData}};scope.init=function(){scope.initVars();var env=scope.apiData.environment;scope.enablePassword=env.platform.secured_package_export;var _serviceTypes=scope.apiData.service_type_list,_services=scope.apiData.service_list;angular.forEach(scope.apiData.package.service,function(manifestValue,manifestKey){var _service=_services.filter(function(obj){return obj.name===manifestKey}),type=_serviceTypes.filter(function(obj){return obj.name==_service[0].type}),_typeObj={name:type[0].name,label:type[0].label,group:type[0].group};"Database"===_typeObj.group&&(_typeObj.label+=" Schema"),0===scope.types.filter(function(obj){return obj.name==_typeObj.name}).length&&scope.types.push(_typeObj)})},scope.anySelected=function(){return scope.selectedNameData.map(function(d){return d.__dfUI.selected}).indexOf(!0)>=0},scope.getAllNames=function(){return scope.selectedNameData.map(function(d){return d.record.display_label})},scope.getSelectedNames=function(){var selected;return selected=[],angular.forEach(scope.selectedNameData,function(value){!0===value.__dfUI.selected&&selected.push(value.record.display_label)}),selected},scope.removeRow=function(row){scope.tableData.splice(row,1)},scope.addToPackage=function(selectAll){var selectAllExists=!1;if(angular.forEach(scope.tableData,function(value){value.type.name===scope.selectedType.name&&value.name===scope.selectedName&&!0===value.selectAll&&(selectAllExists=!0)}),!selectAllExists||scope.addAppFiles(scope.getAllNames())){if(!0===selectAll){var tableRemoveArray=[];angular.forEach(scope.tableData,function(value,index){value.name===scope.selectedName&&value.type.name===scope.selectedType.name&&tableRemoveArray.push(index)}),tableRemoveArray.reverse(),angular.forEach(tableRemoveArray,function(value){scope.removeRow(value)});var allNames=scope.getAllNames();scope.tableData.push({type:scope.selectedType,name:scope.selectedName,selectAll:!0,selected:allNames,descr:"All"}),"system"===scope.selectedType.name&&"app"===scope.selectedName&&scope.addAppFiles(allNames)}else{var newSelected=scope.getSelectedNames();angular.forEach(newSelected,function(sel){0===scope.tableData.filter(function(obj){return obj.type.name===scope.selectedType.name&&obj.name===scope.selectedName&&obj.selected[0]===sel}).length&&scope.tableData.push({type:scope.selectedType,name:scope.selectedName,selectAll:!1,selected:[sel],descr:sel}),"system"===scope.selectedType.name&&"app"===scope.selectedName&&scope.addAppFiles([sel])})}angular.forEach(scope.selectedNameData,function(value){value.__dfUI.selected=!1}),console.log("tableData",scope.tableData)}else{var messageOptions={module:"Packages",provider:"dreamfactory",type:"error",message:"You have already selected all items for "+scope.selectedType.label+" / "+scope.selectedName+"."};dfNotify.error(messageOptions)}},scope.addAppFiles=function(appNames){var services,serviceId,serviceName,container,retVal=!1,apps=scope.apiData.app;return angular.forEach(appNames,function(value){if(1===(matches=apps.filter(function(obj){return obj.name===value})).length&&(serviceId=matches[0].storage_service_id,container=matches[0].storage_container+"/",services=scope.apiData.service_list,1===(matches=services.filter(function(obj){return obj.id===serviceId})).length)){var type={group:"File",label:matches[0].label,name:matches[0].type};serviceName=matches[0].name;var matches=scope.tableData.filter(function(obj){return obj.type.name===type.name&&obj.name===serviceName&&obj.selected.indexOf(container)>=0});0===matches.length&&(retVal=!0,scope.tableData.push({type:type,name:serviceName,selectAll:!1,selected:[container],descr:container}))}}),retVal},scope.loadTable=function(newValue,filter){var record,nameData=[],values=[];switch(newValue&&-1!==newValue.indexOf("[unavailable]")&&(alert("You have selected a service that is currently unavailable/unreachable. Please check DreamFactory log or client console for error details."),newValue=newValue.replace(" [unavailable]","")),scope.selectedType.group){case"System":values=scope.apiData.package.service.system[newValue];break;case"Database":values=scope.apiData.package.service[newValue]._schema;break;case"File":values=scope.apiData.package.service[newValue].filter(function(obj){return obj.indexOf("/")>0})}angular.forEach(values,function(value){record="System"!==scope.selectedType.group||"admin"!==scope.selectedName&&"user"!==scope.selectedName?{display_label:value}:{display_label:value.email,first_name:value.first_name,last_name:value.last_name},(!filter||value.indexOf(filter)>=0)&&nameData.push(new TableData(record))}),scope.selectedNameData=nameData},scope.$watch("search.text",function(newValue,oldValue){null!==newValue&&void 0!==newValue&&(filterTextTimeout&&$timeout.cancel(filterTextTimeout),tempFilterText=newValue,filterTextTimeout=$timeout(function(){scope.loadTable(scope.selectedName,tempFilterText)},500))},!0),scope.$watch("selectedType",function(newValue){var _type,_name,_services,_service,_names=[];scope.names=[],scope.selectedName=null,scope.selectedNameData=[],newValue&&newValue.name&&("system"===(_type=newValue.name)?angular.forEach(scope.apiData.package.service.system,function(manifestValue,manifestKey){_names.push(manifestKey)}):(_services=scope.apiData.service_list,angular.forEach(scope.apiData.package.service,function(manifestValue,manifestKey){(_service=_services.filter(function(obj){return obj.name===manifestKey}))[0].type===_type&&(_name=_service[0].name,!1===manifestValue.reachable&&(_name+=" [unavailable]"),_names.push(_name))})),scope.names=_names)}),scope.$watch("selectedName",function(newValue){newValue&&scope.loadTable(newValue,null)}),scope.$watchCollection("apiData",function(newValue){newValue&&scope.init()})}}}]).directive("dfSelectFolder",["MOD_PACKAGE_MANAGER_ASSET_PATH",function(MOD_PACKAGE_MANAGER_ASSET_PATH){return{restrict:"E",scope:!1,templateUrl:MOD_PACKAGE_MANAGER_ASSET_PATH+"views/df-select-folder.html",link:function(scope,elem,attrs){}}}]).directive("dfExportPackage",["INSTANCE_URL","INSTANCE_API_PREFIX","APP_API_KEY","dfNotify","$http","$window","$timeout","UserDataService",function(INSTANCE_URL,INSTANCE_API_PREFIX,APP_API_KEY,dfNotify,$http,$window,$timeout,UserDataService){return{restrict:"A",scope:!1,replace:!0,link:function(scope,elem,attrs){scope.availableFileServices=null,scope.selectedFileService=null,scope.folderName="",scope.fileName="",scope.packagePassword="",scope.showFilePath=!1,scope.publicFilePath="N/A",scope.publicPathNote="";var exportPath="",payload={};scope.folderInit=function(){var _services=scope.apiData.service_list,_searchTypes=scope.apiData.service_type_list.filter(function(obj){return"File"===obj.group}).map(function(type){return type.name}),_fileServices=[];angular.forEach(_services,function(value){_searchTypes.indexOf(value.type)>-1&&_fileServices.push(value)}),scope.selectedFileService=null,scope.availableFileServices=_fileServices},scope.exportPackage=function(){var name,type,group,selected;if(0===scope.tableData.length){messageOptions={module:"Packages",provider:"dreamfactory",type:"error",message:"No package content is selected."};dfNotify.error(messageOptions)}else if(scope.selectedFileService){payload={secured:scope.packagePassword.length>0,password:scope.packagePassword,storage:{name:scope.selectedFileService.name,folder:scope.folderName,filename:scope.fileName},service:{}};var tableData=scope.tableData;angular.forEach(tableData,function(value){switch(selected=value.selected,type=value.type.name,name=value.name,group=value.type.group){case"System":void 0===payload.service[type]&&(payload.service[type]={}),void 0===payload.service[type][name]&&(payload.service[type][name]=[]),payload.service[type][name]=payload.service[type][name].concat(selected);break;case"Database":void 0===payload.service[name]&&(payload.service[name]={}),void 0===payload.service[name]._schema&&(payload.service[name]._schema=[]),payload.service[name]._schema=payload.service[name]._schema.concat(selected);break;case"File":void 0===payload.service[name]&&(payload.service[name]=[]),payload.service[name]=payload.service[name].concat(selected)}}),console.log("manifest",payload),$http({method:"POST",url:INSTANCE_URL.url+"/system/package",data:payload}).then(function(response){exportPath=response.data.path;var path=response.data.path;path=path.replace(INSTANCE_API_PREFIX,""),scope.publicFilePath=path,scope.showFilePath=!0;var msg="The package has been exported. Click the Download button to download the file.\n\nThe path to the exported package is: \n"+path+"\n";if(!1===response.data.is_public){var subFolder=""===scope.folderName?"__EXPORTS":scope.folderName,pathNote='\nTo make your exported file publicly accessible/downloadable, edit your "'+scope.selectedFileService.label+'" service configuration to add "'+subFolder+'" under "Public Path".';msg+=pathNote,scope.publicPathNote=pathNote}$timeout(function(){alert(msg)})},function(response){var msg="An error occurred!\n\nReason:\n"+response.data.error.message+"\n";$timeout(function(){alert(msg)})})}else{var messageOptions={module:"Packages",provider:"dreamfactory",type:"error",message:"No file service is selected."};dfNotify.error(messageOptions)}},scope.exportDownload=function(){if(""!==exportPath){var params="?api_key="+APP_API_KEY,currentUser=UserDataService.getCurrentUser();currentUser&&currentUser.session_token&&(params+="&session_token="+currentUser.session_token),window.location.href=exportPath+params}},scope.exportClear=function(){scope.resetVars(),exportPath="",scope.folderName="",scope.fileName="",scope.packagePassword="",scope.showFilePath=!1,scope.publicFilePath="N/A",scope.publicPathNote=""},scope.$watchCollection("apiData",function(newValue){newValue&&scope.folderInit()})}}}]).directive("dfPackageLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]),angular.module("dfTable",["dfUtility"]).constant("DF_TABLE_ASSET_PATH","admin_components/adf-table/").run(["$templateCache",function($templateCache){$templateCache.put("df-input-text.html",'<input type="{{templateData.type}}"  class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-ref-text.html",'<input type="{{templateData.type}}"  class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-number.html",'<input type="{{templateData.type}}" step="any" class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-int.html",'<input type="{{templateData.type}}" step="1" class="form-control" placeholder="{{templateData.placeholder}}" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required">'),$templateCache.put("df-input-textarea.html",'<textarea class="form-control" rows="3" data-ng-model="currentEditRecord[field.name]" data-ng-disabled="!templateData.editable" data-ng-required="field.required"></textarea>'),$templateCache.put("df-input-binary.html","<p>BINARY DATA</p>"),$templateCache.put("df-input-datetime.html","<p>DATETIME</p>"),$templateCache.put("df-input-reference.html",'<div class="well"><df-table data-options="relatedOptions" data-parent-record="currentEditRecord" data-export-field="field"></df-table></div>'),$templateCache.put("df-input-checkbox.html",'<label><input type="checkbox" data-ng-model="currentEditRecord[field.name]" data-ng-checked="currentEditRecord[field.name]" data-ng-required="field.required"></label>'),$templateCache.put("df-input-bool-picklist.html",'<div class="form-group"><select class="form-control" data-ng-model="currentEditRecord[field.name]" data-ng-options="bool.value as bool.name for bool in __dfBools" data-ng-required="field.required"></select></div>'),$templateCache.put("df-input-select.html",'<select class="form-control" data-ng-model="currentEditRecord[field.name]" data-ng-options="obj[overrideFields[templateData.prop].display.value] as obj[overrideFields[templateData.prop].display.label] for obj in overrideFields[templateData.prop].records" data-ng-required="field.required" data-ng-disabled="currentEditRecord[templateData.dependent]"><option value="">-- None --</option></select>'),$templateCache.put("df-input-values-picklist.html",'<div class="row"><div class="col-xs-12 col-md-6"><div class="input-group"><input type="text" class="form-control" data-ng-model="currentEditRecord[field.name]" placeholder="Enter Value or Choose from list" data-ng-required="field.required"><div class="input-group-btn"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button><ul class="dropdown-menu pull-right df-dropdown-height"><li data-ng-click="assignValue(item)" data-ng-repeat="item in data"><a>{{item}}</a></li></ul></div>\x3c!-- /btn-group --\x3e</div>\x3c!-- /input-group --\x3e</div>\x3c!-- /.col-lg-6 --\x3e</div>'),$templateCache.put("df-input-values-only-picklist.html",'<div class="form-group"><select class="form-control" data-ng-model="currentEditRecord[field.name]" data-ng-options="item for item in data" data-ng-required="field.required"></select></div>'),$templateCache.put("df-input-date-time-picker.html",'<div class="form-group col-xs-12">\n <div class="input-group col-sm-6 col-md-4">\n<span class="input-group-btn">\n<button type="button" data-ng-disabled="!templateData.editable" class="btn btn-default btn-small" data-ng-click="open($event)"><i class="fa fa-calendar fa-fw"></i></button><button type="button" class="btn btn-default" data-ng-disabled="!templateData.editable" data-ng-click="setNow()">Now</button>\n</span>\n<input type="text" class="form-control" data-ng-disabled="!templateData.editable" data-datepicker-popup="{{format}}" data-ng-model="dt" data-is-open="opened"  data-date-disabled="disabled(date, mode)" data-ng-required="field.required" data-close-text="Close" /></div>\n<div class="col-sm-6 col-md-2">\n<timepicker style="display: inline-block" data-ng-model="mytime" data-ng-change="changed()" show-meridian="ismeridian"></timepicker>\n</div>\n</div>')}]).filter("typeFilter",[function(){return function(object){var array=[];return angular.forEach(object,function(option){"boolean"!=option.type&&"integer"!=option.type&&"string"!=option.type&&"text"!=option.type&&"float"!=option.type&&"double"!=option.type&&"decimal"!=option.type||array.push(option)}),array}}]).directive("dfTable",["DF_TABLE_ASSET_PATH","$http","$q","$filter","$compile","dfObjectService","dfTableEventService","dfTableCallbacksService",function(DF_TABLE_ASSET_PATH,$http,$q,$filter,$compile,dfObjectService,dfTableEventService,dfTableCallbacksService){return{restrict:"E",scope:{userOptions:"=options",parentRecord:"=?",exportField:"=?"},templateUrl:DF_TABLE_ASSET_PATH+"views/dreamfactory-table.html",link:function(scope,elem,attrs){scope.es=dfTableEventService,scope.defaults={service:"",table:"",url:"",normalizeData:!1,normalizeSchema:!0,autoClose:!0,params:{filter:null,limit:50,offset:0,fields:"*",include_schema:!0,include_count:!0},defaultFields:null,overrideFields:[],extendFieldTypes:[],extendData:[],extendSchema:[],relatedData:[],excludeFields:[],groupFields:[],exportValueOn:!1,allowChildTable:!1,childTableAttachPoint:null,isChildTable:!1},scope.options={},scope.disableTableBtns=!1,scope.record=null,scope.schema=null,scope.overrideFields={},scope.tableFields={onStartTotalActiveFields:0},scope.tableFieldsAll=!1,scope.tableFilterOn=!0,scope.defaultFieldsShown={},scope.numAutoSelectFields=8,scope.selectedAll=!1,scope.filterOn=!1,scope.filter={viewBy:"",prop:"",props:"",type:"",value:null},scope.operators={integer:["<",">","="],boolean:[],string:[],text:[],float:["<",">","="],double:["<",">","="],decimal:["<",">","="]},scope.filterType={operator:null},scope.order={orderBy:"",orderByReverse:!1},scope.filteredRecords=!1,scope.orderedRecords=!1,scope.activeTab=null,scope.activeView="table",scope.pagesArr=[],scope.currentPage={},scope.currentEditRecord=null,scope.extendFieldTypes={},scope.inProgress=!1,scope.count=0,scope._exportValue=null,scope.newRecord=null,scope.relatedExpand=!1,scope.extendedData={},scope.extendedSchema={},scope.excludedFields={},scope.filteredSchema=[],scope.groupedSchema=[],scope.childTableActive=!1,scope.childTableOptions={},scope.childTableParentRecord=null,scope.setTab=function(tabStr){scope._setTab(tabStr)},scope.toggleSelected=function(dataObj){if(scope.childTableActive)return!1;scope._toggleSelected(dataObj)},scope.getPrevious=function(){if(scope._isFirstPage()||scope._isInProgress())return!1;scope._checkForUnsavedRecords(scope.record)?scope._confirmAction("You have Unsaved records.  Continue without saving?",scope._getPrevious):scope._getPrevious()},scope.getNext=function(){if(scope._isLastPage()||scope._isInProgress())return!1;scope._checkForUnsavedRecords(scope.record)?scope._confirmAction("You have Unsaved records.  Continue without saving?",scope._getNext):scope._getNext()},scope.editRecord=function(dataObj){scope._editRecord(dataObj)},scope.createRecord=function(){scope._createRecord()},scope.saveRecords=function(){scope._saveRecords()},scope.revertRecords=function(){scope._revertRecords()},scope.deleteRecords=function(){scope._confirmAction("You are about to delete records. Continue?",scope._deleteRecords)},scope.applyFilter=function(){scope._applyFilter()},scope.removeFilter=function(){scope._removeFilter()},scope.refreshResults=function(){scope._refreshResults()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setExportValue=function(dataObj){scope._setExportValue(dataObj)},scope.toggleExpandEditor=function(){scope._toggleExpandEditor()},scope.editExportRecord=function(dataObj){scope._editExportRecord(dataObj)},scope.filterRecords=function(){scope._filterRecords()},scope.toggleAllFields=function(){scope._toggleAllFields()},scope.resetAllFields=function(){scope._resetAllFields()},scope.toggleAllRecords=function(){scope._toggleAllRecords()},scope.showChildTable=function(parentRecordObj){scope._showChildTable(parentRecordObj)},scope._addSelectedProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("selected")||(dataObj.__dfUI.selected=!1)},scope._addUnsavedProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("unsaved")||(dataObj.__dfUI.unsaved=!1)},scope._addExportProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("export")||(dataObj.__dfUI.export=!1)},scope._addHideProp=function(dataObj){dataObj.__dfUI.hasOwnProperty("hide")||(dataObj.__dfUI.hide=!1)},scope._addStateProps=function(dataObj){dataObj.hasOwnProperty.__dfUI||(dataObj.__dfUI={}),scope._addSelectedProp(dataObj),scope._addUnsavedProp(dataObj),scope._addExportProp(dataObj),scope._addHideProp(dataObj)},scope._removeStateProps=function(dataObj){dataObj.hasOwnProperty.__dfUI&&delete dataObj.__dfUI},scope._toggleSelectedState=function(dataObj){dataObj.__dfUI.selected=!dataObj.__dfUI.selected},scope._toggleUnsavedState=function(dataObj){dataObj.__dfUI.unsaved=!dataObj.__dfUI.unsaved},scope._setSelectedState=function(dataObj,stateBool){dataObj.__dfUI.selected=stateBool},scope._setUnsavedState=function(dataObj,stateBool){dataObj.__dfUI.unsaved=stateBool},scope._setExportState=function(dataObj,stateBool){dataObj&&(dataObj.__dfUI.export=stateBool)},scope._setHideState=function(dataObj,stateBool){dataObj&&(dataObj.__dfUI.hide=stateBool)},scope._isUnsaved=function(dataObj){return dataObj.__dfUI.unsaved},scope._isSelected=function(dataObj){return dataObj.__dfUI.selected},scope._isExport=function(dataObj){return dataObj.__dfUI.export},scope._checkForUnsavedRecords=function(data){if(!data)return!1;var unsavedRecords=!1,i=0;do{if(i>=data.length)break;data[i].__dfUI.unsaved&&(unsavedRecords=!0),i++}while(0==unsavedRecords);return unsavedRecords},scope._checkForParams=function(){return scope.options.hasOwnProperty("params")?scope.options.params:scope.defaults.params},scope._getRecordsFromServer=function(requestDataObj){var params=scope._checkForParams();return(requestDataObj=requestDataObj||null)&&(params=dfObjectService.mergeObjects(requestDataObj.params,params)),scope.options.relatedData.length>0&&(params.related=scope.options.relatedData.join(",")),$http({method:"GET",url:scope.options.url,params:params})},scope._getRecordsFromData=function(dataObj){var limit=scope._checkForParams().limit,records=[];return dataObj.hasOwnProperty("resource")?records=dataObj.resource:dataObj.hasOwnProperty("data")&&(records=dataObj.data.hasOwnProperty("resource")?dataObj.data.resource:dataObj.data.data.resource),records.length>limit?records.slice(0,limit):records},scope._getMetaFromData=function(dataObj){var meta={};return dataObj.hasOwnProperty("meta")?meta=dataObj.meta:dataObj.hasOwnProperty("data")&&(meta=dataObj.data.hasOwnProperty("meta")?dataObj.data.meta:dataObj.data.data.meta),meta},scope._getSchemaFromData=function(dataObj){return scope._getMetaFromData(dataObj).schema},scope._getCountFromMeta=function(dataObj){var count=scope._getMetaFromData(dataObj).count;return scope._setCount(count),count},scope._setCount=function(countInt){scope.count=countInt},scope._getOptionFromParams=function(keyStr){return scope._checkForParams()[keyStr]},scope._setOptionFromParams=function(keyStr,valueStr){},scope._buildField=function(fieldNameStr){console.log(fieldNameStr)},scope._createRevertCopy=function(dataObj){dataObj.__dfData={},dataObj.__dfData.revert=angular.copy(dataObj),dataObj.__dfData.revert.hasOwnProperty("_exportValue")||(dataObj.__dfData.revert._exportValue={})},scope._getRevertCopy=function(dataObj){return dataObj.__dfData.revert},scope._hasRevertCopy=function(dataObj){return!!dataObj.hasOwnProperty("__dfData")&&!!dataObj.__dfData.hasOwnProperty("revert")},scope._removeRevertCopy=function(dataObj){dataObj.__dfData.revert&&delete dataObj.__dfData.revert},scope._removeAllDFData=function(dataObj){dataObj.__dfData&&delete dataObj.__dfData},scope._removeAllUIData=function(dataObj){delete dataObj.__dfUI},scope._compareObjects=function(dataObj1,dataObj2){for(var key in dataObj1)if("dfUISelected"!==key&&"dfUIUnsaved"!==key&&"__dfUI"!==key&&"__dfData"!=key&&"created_date"!=key&&"last_modified_date"!=key&&"$$hashKey"!==key&&dataObj1[key]!==dataObj2[key])return(null!=dataObj1[key]&&""!=dataObj1[key]||null!=dataObj2[key]&&""!=dataObj2[key])&&!(dataObj1[key]instanceof Array&&dataObj2[key]instanceof Array&&dataObj1[key].length==dataObj2[key].length);return!1},scope._getRecordsWithState=function(recordsDataArr,stateStr,removeDFDataBool,removeUIDataBool){var records=[];return removeDFDataBool=void 0!==removeDFDataBool&&removeDFDataBool,removeUIDataBool=void 0!==removeUIDataBool&&removeUIDataBool,angular.forEach(recordsDataArr,function(_obj){_obj.__dfUI[stateStr]&&(removeDFDataBool&&scope._removeAllDFData(_obj),removeUIDataBool&&scope._removeAllUIData(_obj),records.push(_obj))}),records},scope._saveRecordsToServer=function(recordsDataArr){if(0==recordsDataArr.length){var defer=$q.defer();return defer.reject("No records selected for save."),defer.promise}return $http({method:"PATCH",url:scope.options.url,data:{resource:recordsDataArr}})},scope._deleteRecordsFromServer=function(recordsDataArr){if(0==recordsDataArr.length){var defer=$q.defer();return defer.reject("No records selected for delete."),defer.promise}return $http({method:"DELETE",url:scope.options.url,data:{resource:recordsDataArr}})},scope._isInProgress=function(){return scope.inProgress},scope._setInProgress=function(stateBool){scope.inProgress=stateBool},scope._createNewRecordObj=function(){var newRecord={};return angular.forEach(scope.schema.field,function(_obj){scope.excludedFields.hasOwnProperty(_obj.name)&&scope.excludedFields[_obj.name].fields.create||(newRecord[_obj.name]=_obj.default)}),scope._addStateProps(newRecord),newRecord},scope._setCurrentEditRecord=function(dataObj){scope.currentEditRecord=dataObj},scope._setNewRecordObj=function(){scope.newRecord=scope._createNewRecordObj()},scope._confirmAction=function(_message,_action){confirm(_message)&&_action.call()},scope._filterFormSchema=function(formNameStr){if(0==scope.excludedFields.length)return!1;angular.forEach(scope.schema.field,function(_obj){scope.excludedFields.hasOwnProperty(_obj.name)&&scope.excludedFields[_obj.name].fields[formNameStr]||scope.filteredSchema.push(_obj)})},scope._buildSchemaGroups=function(){if(0==scope.options.groupFields.length)return!1;var _schema=scope.filteredSchema.length>0?scope.filteredSchema:scope.schema.field;angular.forEach(scope.options.groupFields,function(fobj){var group={};group.name=fobj.name,group.fields=[],group.dividers=fobj.dividers,angular.forEach(_schema,function(item){angular.forEach(fobj.fields,function(field,index){item.name===field&&(group.fields[index]=item)})}),scope.groupedSchema.push(group)})},scope._checkForGroupedSchema=function(groupNameStr){0==scope.groupedSchema.length&&scope.groupedSchema.push({name:groupNameStr,fields:scope.schema.field})},scope._clearFilteredSchema=function(){scope.filteredSchema=[]},scope._clearGroupedSchema=function(){scope.groupedSchema=[]},scope._getDefaultFields=function(dataObj){return dataObj.hasOwnProperty("defaultFields")?dataObj.defaultFields:null},scope._removePrivateFields=function(dataObj){dataObj&&angular.forEach(scope.record,function(_obj){for(var _key in _obj)dataObj[_key]&&"private"==dataObj[_key]&&delete _obj[_key]})},scope._setElementActive=function(tabStr){scope.activeTab=tabStr},scope._setDisableTableBtnsState=function(stateBool){scope.disableTableBtns=stateBool},scope._createFieldsObj=function(schemaDataObj){if(scope.tableFields={onStartTotalActiveFields:0},!scope.defaultFieldsShown){var allKeys=Object.keys(schemaDataObj);return allKeys.length<scope.numAutoSelectFields&&(scope.numAutoSelectFields=allKeys.length),angular.forEach(schemaDataObj,function(value,index){if(scope.tableFields.onStartTotalActiveFields<scope.numAutoSelectFields&&index!=allKeys.length)switch(value.name){case"name":case"title":case"fname":case"lname":case"f_name":case"l_name":case"firstname":case"lastname":case"first_name":case"last_name":case"email":case"phone":scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!0,scope.tableFields.onStartTotalActiveFields++;break;default:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1}}),scope.tableFields.onStartTotalActiveFields<scope.numAutoSelectFields&&angular.forEach(scope.tableFields,function(_obj){if(scope.tableFields.onStartTotalActiveFields==scope.numAutoSelectFields)return!1;if(0==_obj.active)switch(_obj.type){case"date":case"time":case"datetime":_obj.active=!0,scope.tableFields.onStartTotalActiveFields++}}),scope.tableFields.onStartTotalActiveFields<scope.numAutoSelectFields&&angular.forEach(scope.tableFields,function(_obj){if(scope.tableFields.onStartTotalActiveFields==scope.numAutoSelectFields)return!1;0==_obj.active&&(_obj.active=!0,scope.tableFields.onStartTotalActiveFields++)}),!1}angular.forEach(schemaDataObj,function(value,index){if(scope.defaultFieldsShown.hasOwnProperty(value.name))switch(scope.defaultFieldsShown[value.name]){case!0:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!0;break;case!1:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1;break;case"private":break;default:scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1}else scope.tableFields[value.name]=value,scope.tableFields[value.name].active=!1}),scope.tableFieldsAll=!1},scope._init=function(data){scope._prepareExtendedData(scope.options),scope._prepareExtendedSchema(scope.options),scope._prepareExcludedFields(scope.options),scope._prepareRecords(data)&&scope._prepareOverrideFields(scope.options),scope._prepareSchema(data),scope._prepareExtendedFieldTypes(scope.options),scope.defaultFieldsShown=scope._getDefaultFields(scope.options),scope._createFieldsObj(scope.schema.field),scope.activeTab=scope.schema.name+"-table",scope._calcPagination(data),scope.pagesArr[0].stopPropagation=!0,scope._setCurrentPage(scope.pagesArr[0])},scope._prepareRecords=function(data){return scope.record=scope._getRecordsFromData(data),scope.record?(scope._removePrivateFields(scope._getDefaultFields(scope.options)),angular.forEach(scope.record,function(_obj){scope._addStateProps(_obj),scope._addExtendedData(_obj),scope.options.exportValueOn&&scope._exportValue&&scope._checkExportValue(_obj)&&(scope._setExportState(_obj,!0),scope._exportValue=_obj)}),scope.options.normalizeData&&(scope.record=scope._normalizeData(scope.record)),!0):(scope.record=null,!1)},scope._checkExportValue=function(dataObj){return dataObj[scope.exportField.ref_field]===scope._exportValue[scope.exportField.ref_field]},scope._prepareSchema=function(data){scope.schema=scope._getSchemaFromData(data),scope.options.normalizeSchema&&scope.record.length>0&&(scope.schema=scope._normalizeSchema(scope.schema,scope.record)),angular.forEach(scope.extendedSchema,function(_obj){scope.schema.field.push(_obj)})},scope._prepareExtendedSchema=function(data){if(null==data.extendSchema)return!1;angular.forEach(data.extendSchema,function(_obj){scope.extendedSchema[_obj.name]={},scope.extendedSchema[_obj.name].name=_obj.name,scope.extendedSchema[_obj.name].type=_obj.type,scope.extendedSchema[_obj.name].label=_obj.label})},scope._prepareOverrideFields=function(data){if(null==data.overrideFields)return!1;angular.forEach(data.overrideFields,function(_obj){scope.overrideFields[_obj.field]={},_obj.hasOwnProperty("record")&&(scope.overrideFields[_obj.field].records=scope._getRecordsFromData(_obj.record)),scope.overrideFields[_obj.field].display=_obj.display})},scope._prepareExtendedFieldTypes=function(data){if(null==data.extendFieldTypes)return!1;angular.forEach(data.extendFieldTypes,function(_obj){scope.extendFieldTypes[_obj.db_type]={};for(var _key in _obj)scope.extendFieldTypes[_obj.db_type][_key]=_obj[_key]})},scope._prepareExtendedData=function(data){if(null==data.extendData)return!1;angular.forEach(data.extendData,function(_obj){scope.extendedData[_obj.name]={},scope.extendedData[_obj.name].name=_obj.name,scope.extendedData[_obj.name].value=_obj.value||null})},scope._addExtendedData=function(dataObj){angular.forEach(scope.extendedData,function(_obj){dataObj[_obj.name]=_obj.value})},scope._setActiveView=function(viewStr){scope.activeView=viewStr},scope._setExportValueToParent=function(dataObj){scope._exportValue=dataObj||null},scope._prepareExcludedFields=function(data){if(null==data.extendSchema)return!1;angular.forEach(data.excludeFields,function(_obj){scope.excludedFields[_obj.name]={},scope.excludedFields[_obj.name].fields=_obj.fields})},scope._calcTotalPages=function(totalCount,numPerPage){return Math.ceil(totalCount/numPerPage)},scope._createPageObj=function(_pageNum){return{number:_pageNum+1,value:_pageNum,offset:_pageNum*scope._getOptionFromParams("limit"),stopPropagation:!1}},scope._createPagesArr=function(_totalCount){scope.pagesArr=[];for(var i=0;i<_totalCount;i++)scope.pagesArr.push(scope._createPageObj(i))},scope._setCurrentPage=function(pageDataObj){scope.currentPage=pageDataObj},scope._getCurrentPage=function(){return!scope.currentPage&&scope.pagesArr.length>0?scope.currentPage=scope.pagesArr[0]:scope.currentPage||scope.pagesArr.length||(scope.pagesArr.push(scope._createPageObj(0)),scope.currentPage=scope.pagesArr[0]),scope.currentPage},scope._isFirstPage=function(){return 0===scope._getCurrentPage().value},scope._isLastPage=function(){return scope.currentPage.value===scope.pagesArr.length-1},scope._previousPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value-1]},scope._nextPage=function(){scope.currentPage=scope.pagesArr[scope.currentPage.value+1]},scope._calcPagination=function(newValue){scope.pagesArr=[];var count=scope._getCountFromMeta(newValue);if(0==count)return scope.pagesArr.push(scope._createPageObj(0)),!1;scope._createPagesArr(scope._calcTotalPages(count,scope._getOptionFromParams("limit")))},scope._resetFilter=function(schemaDataObj){if(!schemaDataObj)return!1;scope.filter={viewBy:schemaDataObj.field[0].name||"",prop:schemaDataObj.field[0].name||"",type:schemaDataObj.field[0].type||"",props:schemaDataObj.field[0],value:null}},scope._isFiltered=function(){return scope.filteredRecords},scope._createFilterParams=function(){var param="";switch(scope.filter.prop.type){case"boolean":param=scope.filter.prop.name+" = "+scope.filter.value;break;case"text":case"string":param=scope.filter.prop.name+' like "%'+scope.filter.value+'%"';break;case"integer":case"float":case"double":case"decimal":param=scope.filter.prop.name+" "+scope.filterType.operator+" "+scope.filter.value}return param},scope._unsetFilterInOptions=function(){scope.options.params.hasOwnProperty("filter")&&delete scope.options.params.filter},scope._setFilterInOptions=function(){return!!scope._checkForFilterValue()&&(scope.options.params.hasOwnProperty("filter"),scope.options.params.filter=scope._createFilterParams(),!0)},scope._checkForFilterValue=function(){return!!scope.filter.value},scope._resetOrder=function(schemaDataObj){if(!schemaDataObj)return!1;scope.order={orderBy:schemaDataObj.field[0].name||"",orderByReverse:!1}},scope._isOrdered=function(){return scope.orderedRecords},scope._createOrderParams=function(){var orderStr=scope.order.orderBy+" ";return orderStr+=scope.order.orderByReverse?"DESC":"ASC"},scope._unsetOrderInOptions=function(){scope.options.params.hasOwnProperty("order")&&delete scope.options.params.order},scope._setOrderInOptions=function(){scope.options.params.hasOwnProperty("order"),scope.options.params.order=scope._createOrderParams()},scope._setChildTableActive=function(stateBool){scope.childTableActive=stateBool},scope._setChildTableParentRecord=function(recordObj){scope.childTableParentRecord=recordObj},scope._buildChildTableOptions=function(){scope.childTableOptions={isChildTable:!0,allowChildTable:!1},scope.childTableOptions=dfObjectService.deepMergeObjects(scope.childTableOptions,angular.copy(scope.defaults))},scope._addChildTable=function(){angular.element(scope.options.childTableAttachPoint).append($compile('<df-child-table data-child-options="childTableOptions" data-parent-schema="schema" data-child-table-parent-record="childTableParentRecord"></df-child-table>')(scope))},scope._setTab=function(tabStr){scope._setElementActive(tabStr)},scope._toggleSelected=function(dataObj){scope._toggleSelectedState(dataObj)},scope._normalizeData=function(dataObj){return angular.forEach(dataObj,function(_obj){for(var _key in _obj)null==_obj[_key]&&(_obj[_key]="NULL")}),dataObj},scope._normalizeSchema=function(schemaDataObj,recordsDataArr){var normalizedSchema=[];for(var _key in schemaDataObj.field)recordsDataArr[0].hasOwnProperty(schemaDataObj.field[_key].name)&&normalizedSchema.push(schemaDataObj.field[_key]);return delete schemaDataObj.field,schemaDataObj.field=normalizedSchema,schemaDataObj},scope._getPrevious=function(){scope._previousPage()},scope._getNext=function(){scope._nextPage()},scope._editRecord=function(dataObj){scope._setCurrentEditRecord(dataObj)},scope._saveRecords=function(){scope._setInProgress(!0);var recordsToSave=scope._getRecordsWithState(scope.record,"unsaved",!0);scope._saveRecordsToServer(recordsToSave).then(function(result){angular.forEach(scope.record,function(_obj){scope._isUnsaved(_obj)&&scope._toggleUnsavedState(_obj),scope._isSelected(_obj)&&scope._toggleSelectedState(_obj),scope._hasRevertCopy(_obj)&&scope._removeRevertCopy(_obj)}),scope.$emit(scope.es.alertSuccess,{message:"Records saved."})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._revertRecords=function(){angular.forEach(scope.record,function(_obj,_index){scope._isUnsaved(_obj)&&scope._hasRevertCopy(scope.record[_index])&&(scope.record[_index]=scope._getRevertCopy(_obj))}),scope.$emit(scope.es.alertSuccess,{message:"Records reverted."})},scope._deleteRecords=function(){var recordsToDelete=scope._getRecordsWithState(scope.record,"selected");scope._deleteRecordsFromServer(recordsToDelete).then(function(result){var requestDataObj={},curPage=scope._getCurrentPage().value,curOffset=scope._getCurrentPage().offset;scope._isLastPage()&&scope.record.length===scope._getRecordsFromData(result).length&&(curOffset-=scope._getOptionFromParams("limit")),requestDataObj.params=dfObjectService.mergeObjects({offset:curOffset},scope.options.params),scope._getRecordsFromServer(requestDataObj).then(function(_result){scope.$emit(scope.es.alertSuccess,{message:"Records deleted."}),scope._prepareRecords(_result),scope._createPagesArr(scope._calcTotalPages(scope._getCountFromMeta(_result),scope._getOptionFromParams("limit"))),curPage>scope.pagesArr.length-1&&0!==curPage&&(curPage-=1,scope.pagesArr[curPage].stopPropagation=!0),scope._setCurrentPage(scope.pagesArr[curPage])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._getRecordsWithFilter=function(){var requestDataObj={};requestDataObj.params=dfObjectService.mergeObjects({filter:scope._createFilterParams()},scope.options.params),scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._init(dfObjectService.mergeObjects({data:result},scope.options))},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._refreshResults=function(checkUnsavedBool){if((checkUnsavedBool=checkUnsavedBool||!0)&&scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return!1;var requestDataObj={};requestDataObj.params={offset:0},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result),scope._calcPagination(result),scope._setCurrentPage(scope.pagesArr[0])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._applyFilter=function(){if(scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return!1;scope._setFilterInOptions()&&(scope.filteredRecords=!0),scope._setOrderInOptions(),scope.orderedRecords=!0;var requestDataObj={};requestDataObj.params={offset:0},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result),scope._calcPagination(result),scope._setCurrentPage(scope.pagesArr[0])},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._removeFilter=function(){if(scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return!1;scope._unsetFilterInOptions(),scope._unsetOrderInOptions(),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema),scope.filteredRecords=!1,scope.orderedRecords=!1;var requestDataObj={};requestDataObj.params={offset:0},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result),scope._calcPagination(result),scope._setCurrentPage(scope.pagesArr[0]),scope.filter.prop=scope.schema.field[0]},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._createRecord=function(){scope._setNewRecordObj()},scope._setExportValue=function(dataObj){scope._setExportValueToParent(dataObj)},scope._toggleExpandEditor=function(){scope.relatedExpand=!scope.relatedExpand},scope._editExportRecord=function(dataObj){scope.options.exportValueOn&&scope.parentRecord&&(scope.relatedExpand?scope.relatedExpand&&!scope.currentEditRecord&&scope._setCurrentEditRecord(dataObj):(scope._setCurrentEditRecord(dataObj),scope._toggleExpandEditor()))},scope._filterRecords=function(){scope.filterOn=!scope.filterOn},scope._toggleAllFields=function(){scope.tableFieldsAll=!scope.tableFieldsAll,angular.forEach(scope.tableFields,function(_obj){"[object Object]"===Object.prototype.toString.call(_obj)&&_obj.hasOwnProperty("active")&&(_obj.active=scope.tableFieldsAll)})},scope._resetAllFields=function(){scope._createFieldsObj(scope.schema.field)},scope._toggleAllRecords=function(){scope.selectedAll=!scope.selectedAll,angular.forEach(scope.record,function(_obj){scope._setSelectedState(_obj,scope.selectedAll)})},scope._showChildTable=function(parentRecordObj){if(scope.childTableActive)return!1;scope._setChildTableActive(!0),scope._setChildTableParentRecord(parentRecordObj),scope._buildChildTableOptions(),scope._addChildTable(),scope._setDisableTableBtnsState(!0)};var watchUserOptions=scope.$watchCollection("userOptions",function(newValue,oldValue){if(!newValue)return!1;scope.options=dfObjectService.deepMergeObjects(newValue,scope.defaults),scope._setActiveView("table"),dfTableCallbacksService.reset()}),watchOptions=scope.$watchCollection("options",function(newValue,oldValue){if(!newValue)return!1;if(!newValue.service)return!1;if(scope.options.exportValueOn&&!scope._exportValue&&scope.parentRecord[scope.exportField.name]){var requestDataObj={};requestDataObj.params={filter:scope.exportField.ref_field+" = "+scope.parentRecord[scope.exportField.name]},scope._getRecordsFromServer(requestDataObj).then(function(result){var record=scope._getRecordsFromData(result)[0];scope._addStateProps(record),scope._exportValue=record,scope.options.params.filter&&delete scope.options.params.filter,newValue.data?(scope._init(newValue),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)):scope._getRecordsFromServer().then(function(_result){scope._init(_result),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)},function(_reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:_reject}})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})}else newValue.data?(scope._init(newValue),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)):(scope.options.params.offset=newValue.table!==oldValue.table?0:scope.options.params.offset,scope._getRecordsFromServer().then(function(_result){scope._init(_result),scope._resetFilter(scope.schema),scope._resetOrder(scope.schema)},function(_reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:_reject}}))}),watchCurrentPage=scope.$watch("currentPage",function(newValue,oldValue){if(newValue.value==oldValue.value)return!1;if(newValue.stopPropagation)return newValue.stopPropagation=!1,!1;if(scope._checkForUnsavedRecords(scope.record)&&!confirm("You have Unsaved records.  Continue without saving?"))return oldValue.stopPropagation=!0,scope._setCurrentPage(oldValue),!1;var requestDataObj={};requestDataObj.params={offset:newValue.offset},scope._setInProgress(!0),scope._getRecordsFromServer(requestDataObj).then(function(result){scope._prepareRecords(result)},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})}),watchCurrentEditRecord=scope.$watch("currentEditRecord",function(newValue,oldValue){newValue?(scope._hasRevertCopy(newValue)||scope._createRevertCopy(newValue),scope._filterFormSchema("edit"),scope._buildSchemaGroups(),scope._checkForGroupedSchema("Edit "+scope.schema.name.charAt(0).toUpperCase()+scope.schema.name.slice(1)),scope._setActiveView("edit")):(scope._setActiveView("table"),scope._clearGroupedSchema(),scope._clearFilteredSchema())}),watchCurrentEditRecordState=scope.$watchCollection("currentEditRecord",function(newValue,oldValue){oldValue&&null==newValue&&scope._hasRevertCopy(oldValue)&&(scope._compareObjects(oldValue,oldValue.__dfData.revert)?scope._setUnsavedState(oldValue,!0):scope._setUnsavedState(oldValue,!1))}),watchParentRecord=scope.$watchCollection("parentRecord",function(newValue,oldValue){if(!newValue)return!1;if(!newValue&&!scope._exportValue)return!1;if(null==(!scope._exportValue&&newValue[scope.exportField.name]))return!1;if(!newValue[scope.exportField.name])return scope._exportValue=null,!1;if(!scope._exportValue&&newValue[scope.exportField.name]||scope._exportValue[scope.exportField.ref_field]!==newValue[scope.exportField.name]){var requestDataObj={};return requestDataObj.params={filter:scope.exportField.ref_field+" = "+newValue[scope.exportField.name],offset:0},scope._getRecordsFromServer(requestDataObj).then(function(result){var record=scope._getRecordsFromData(result);if(!record)throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:"Revert related data record not found."};scope._addStateProps(record[0]),scope._exportValue=record[0],scope.options.params.filter&&delete scope.options.params.filter},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}),!1}}),watchExportValue=scope.$watch("_exportValue",function(newValue,oldValue){if(!newValue&&!oldValue)return!1;if(!newValue&&oldValue){scope._setExportState(oldValue,!1);var found=!1,i=0;if(scope.record)for(;!found&&i<scope.record.length;)null===(record=scope.record[i])[scope.exportField.name]&&(scope._setExportState(scope.record[i],!1),found=!0),i++;return scope.parentRecord[scope.exportField.name]=newValue,!1}if(!oldValue&&newValue){var found=!1,i=0;if(scope.record)for(;!found&&i<scope.record.length;)(record=scope.record[i])[scope.exportField.name]===scope._exportValue[scope.exportField.name]&&(scope._setExportState(scope.record[i],!0),found=!0),i++}if(oldValue&&newValue){scope._setExportState(oldValue,!1);var found=!1,i=0;if(scope.record)for(;!found&&i<scope.record.length;)(record=scope.record[i])[scope.exportField.ref_field]===newValue[scope.exportField.ref_field]&&(scope._setExportState(scope.record[i],!0),found=!0),i++;if(found=!1,i=0,scope.record)for(;!found&&i<scope.record.length;)(record=scope.record[i])[scope.exportField.ref_field]===oldValue[scope.exportField.ref_field]&&(scope._setExportState(scope.record[i],!1),found=!0),i++}if(scope.parentRecord[scope.exportField.name]===newValue[scope.exportField.ref_field])return newValue&&scope._setExportState(newValue,!0),oldValue&&scope._setExportState(oldValue,!1),!1;for(var found=!1,i=0;!found&&i<scope.record.length;){var record=scope.record[i];record[scope.exportField.name]===scope._exportValue[scope.exportField.name]&&(scope._setExportState(scope.record[i],!1),found=!0),i++}scope.parentRecord[scope.exportField.name]=newValue[scope.exportField.ref_field],scope._setExportState(oldValue,!1),scope._setExportState(newValue,!0)}),watchNewRecord=scope.$watch("newRecord",function(newValue,oldValue){newValue?(scope._setActiveView("new"),scope._filterFormSchema("create"),scope._buildSchemaGroups(),scope._checkForGroupedSchema("Create "+scope.schema.name.charAt(0).toUpperCase()+scope.schema.name.slice(1))):(scope._setActiveView("table"),scope._clearGroupedSchema())}),watchChildTableParentRecord=scope.$watch("childTableParentRecord",function(newValue,oldValue){if(!newValue)return!1;angular.forEach(scope.record,function(obj){obj.$$hashKey!=newValue.$$hashKey&&scope._setHideState(obj,!0)})});scope.$watch("filter.prop.type ",function(newValue,oldValue){if(!newValue)return!1;"boolean"===newValue?scope.filter.value="TRUE":"text"===newValue||"string"===newValue?scope.filter.value=null:(scope.filter.value=null,scope.filterType.operator="<")});scope.$on(scope.es.refreshTable,function(e){scope._refreshResults(!1)}),scope.$on(scope.es.closeChildTable,function(e){scope._setChildTableParentRecord(null),angular.forEach(scope.record,function(obj){scope._setHideState(obj,!1)}),scope._setDisableTableBtnsState(!1),scope._setChildTableActive(!1)}),scope.$on("$destroy",function(e){watchUserOptions(),watchOptions(),watchCurrentPage(),watchCurrentEditRecord(),watchCurrentEditRecordState(),watchParentRecord(),watchExportValue(),watchNewRecord(),watchChildTableParentRecord()})}}}]).directive("editRecord",["DF_TABLE_ASSET_PATH","$http","dfObjectService","dfTableEventService","dfTableCallbacksService",function(DF_TABLE_ASSET_PATH,$http,dfObjectService,dfTableEventService,dfTableCallbacksService){return{restrict:"E",scope:!1,templateUrl:DF_TABLE_ASSET_PATH+"views/edit-record.html",link:function(scope,elem,attrs){scope.es=dfTableEventService,scope.closeRecord=function(){scope._closeEdit()},scope.revertRecord=function(){scope._revertRecord()},scope.deleteRecord=function(){scope._deleteRecord()},scope.saveRecord=function(){scope._saveRecord()},scope._closeEdit=function(){scope.currentEditRecord=null},scope._revertRecordData=function(){var recordCopy=scope._getRevertCopy(scope.currentEditRecord);for(var _key in recordCopy)scope.currentEditRecord.hasOwnProperty(_key)&&"__dfData"!==_key&&(scope.currentEditRecord[_key]=angular.copy(recordCopy[_key]))},scope._deleteRecordFromServer=function(recordDataObj){return $http({method:"POST",url:scope.options.url,data:{resource:[recordDataObj]},headers:{"X-HTTP-METHOD":"DELETE"}})},scope._saveRecordToServer=function(recordDataObj){return $http({method:"PATCH",url:scope.options.url,data:{resource:[recordDataObj]}})},scope._revertRecord=function(){scope._revertRecordData(),scope.$emit(scope.es.alertSuccess,{message:"Record reverted."})},scope._deleteRecord=function(){scope._setInProgress(!0),dfTableCallbacksService.run("onDelete","pre",scope.currentEditRecord),scope._deleteRecordFromServer(scope.currentEditRecord).then(function(result){dfTableCallbacksService.run("onDelete","post",result),scope.$emit(scope.es.alertSuccess,{message:"Record deleted."});var requestDataObj={},curPage=scope._getCurrentPage().value,curOffset=scope._getCurrentPage().offset;scope._isLastPage()&&"object"==typeof result&&1===scope.record.length&&(curOffset-=scope._getOptionFromParams("limit")),requestDataObj.params=dfObjectService.mergeObjects({offset:curOffset},scope.options.params),scope._getRecordsFromServer(requestDataObj).then(function(_result){scope._prepareRecords(_result),scope._createPagesArr(scope._calcTotalPages(scope._getCountFromMeta(_result),scope._getOptionFromParams("limit"))),curPage>scope.pagesArr.length-1&&0!==curPage&&(curPage-=1,scope.pagesArr[curPage].stopPropagation=!0),scope._setCurrentPage(scope.pagesArr[curPage]),scope._setCurrentEditRecord(null)},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}})},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})},scope._saveRecord=function(){scope._setInProgress(!0),dfTableCallbacksService.run("onUpdate","pre",scope.currentEditRecord),scope._saveRecordToServer(scope.currentEditRecord).then(function(result){scope._removeRevertCopy(scope.currentEditRecord),scope._setUnsavedState(scope.currentEditRecord,!1),dfTableCallbacksService.run("onUpdate","pre",result),scope.$emit(scope.es.alertSuccess,{message:"Record saved."}),scope.options.autoClose?scope._closeEdit():scope._createRevertCopy(scope.currentEditRecord)},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})}}}}]).directive("createRecord",["DF_TABLE_ASSET_PATH","$http","dfTableEventService","dfTableCallbacksService",function(DF_TABLE_ASSET_PATH,$http,dfTableEventService,dfTableCallbacksService){return{restrict:"E",scope:!1,templateUrl:DF_TABLE_ASSET_PATH+"views/create-record.html",link:function(scope,elem,attrs){scope.es=dfTableEventService,scope.closeCreateRecord=function(){scope._closeCreateRecord()},scope.saveNewRecord=function(){scope._saveNewRecord()},scope._setCreateNewRecordNull=function(){scope.newRecord=null},scope._saveNewRecordToServer=function(){return $http({method:"POST",url:scope.options.url,data:{resource:[scope.newRecord]},params:{fields:"*"}})},scope._closeCreateRecord=function(){scope._setCreateNewRecordNull()},scope._saveNewRecord=function(){var dataField,schemaField;for(dataField in scope.newRecord)if(scope.newRecord.hasOwnProperty(dataField)&&null===scope.newRecord[dataField])for(schemaField in scope.tableFields)scope.tableFields.hasOwnProperty(schemaField)&&dataField===schemaField&&scope.tableFields[schemaField].hasOwnProperty("allow_null")&&!scope.tableFields[schemaField].allow_null&&scope.tableFields[schemaField].hasOwnProperty("auto_increment")&&scope.tableFields[schemaField].auto_increment&&delete scope.newRecord[dataField];scope._setInProgress(!0),dfTableCallbacksService.run("onCreate","pre",scope.newRecord),scope._saveNewRecordToServer().then(function(result){dfTableCallbacksService.run("onCreate","post",result),0===scope.record.length?scope._refreshResults():scope.record.length<scope.options.params.limit?(scope._addStateProps(result.data.resource[0]),scope.record.push(result.data.resource[0])):scope.record.length*scope.pagesArr.length<scope.count+1&&scope.pagesArr.push(scope._createPageObj(scope.pagesArr.length)),scope.$emit(scope.es.alertSuccess,{message:"Record created."}),scope._closeCreateRecord()},function(reject){throw{module:"DreamFactory Table Module",type:"error",provider:"dreamfactory",exception:reject}}).finally(function(){scope._setInProgress(!1)},function(){scope._setInProgress(!1)})}}}}]).directive("dreamfactoryBuildField",["$templateCache","$compile","dfObjectService","INSTANCE_URL",function($templateCache,$compile,dfObjectService,INSTANCE_URL){return{restrict:"A",scope:{field:"=?",service:"=?",table:"=?",extendFieldTypes:"=?",overrideFields:"=?",currentEditRecord:"=?",activeView:"=?"},link:function(scope,elem,attrs){if(scope._parseEditable=function(fieldObj){return!fieldObj||!fieldObj.hasOwnProperty("validation")||null==fieldObj.validation||!fieldObj.validation.hasOwnProperty("api_read_only")},scope.defaultFieldTypes={id:{template:"df-input-text.html",placeholder:"Id",type:"text",editable:!1},string:{template:"df-input-text.html",placeholder:"Enter String Value",type:"text",editable:!0},text:{template:"df-input-textarea.html",placeholder:"",type:"textarea",editable:!0},integer:{template:"df-input-int.html",placeholder:"Enter Integer Value",type:"number",editable:!0},boolean:{template:"df-input-checkbox.html",placeholder:"",type:"",editable:!0},binary:{template:"df-input-binary.html",placeholder:"Enter String Value",type:"text",editable:!1},float:{template:"df-input-number.html",placeholder:"Enter Float Value",type:"number",editable:!0},double:{template:"df-input-number.html",placeholder:"Enter Double Value",type:"number",editable:!0},decimal:{template:"df-input-number.html",placeholder:"Enter Decimal Value",type:"number",editable:!0},datetime:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},date:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},time:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},timestamp:{template:"df-input-text.html",placeholder:"",type:"text",editable:!0},reference:{template:"df-input-reference.html",placeholder:"",type:"",editable:!1},user_id:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},user_id_on_update:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},user_id_on_create:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},timestamp_on_update:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1},timestamp_on_create:{template:"df-input-text.html",placeholder:"Enter Text Value",type:"text",editable:!1}},scope.fieldTypes=dfObjectService.mergeObjects(scope.extendFieldTypes,scope.defaultFieldTypes),scope.overrideFields[scope.field.name])switch(scope.templateData={prop:scope.field.name,template:"",placeholder:scope.overrideFields[scope.field.name].display.type||"",type:scope.overrideFields[scope.field.name].display.type||"text",editable:scope.overrideFields[scope.field.name].editable,field:scope.field||"",dependent:scope.overrideFields[scope.field.name].display.dependent||!1},scope.overrideFields[scope.field.name].display.type){case"select":scope.templateData.template="df-input-select.html";break;case"checkbox":scope.templateData.template="df-input-checkbox.html";break;case"text":case"textarea":scope.templateData.template="df-input-text.html";break;case"custom":scope.templateData.template=scope.overrideFields[scope.field.name].display.template;break;default:scope.templateData.template="df-input-text.html"}else scope.templateData=scope.fieldTypes[scope.field.type],scope.templateData.editable=scope._parseEditable(scope.field);switch(scope.field.type){case"string":scope.field.hasOwnProperty("picklist")&&null!==scope.field.picklist&&scope.field.picklist.length>0&&(scope.field.hasOwnProperty("validation")&&null!==scope.field.validation&&scope.field.validation.hasOwnProperty("picklist")?scope.templateData.template="df-input-values-only-picklist.html":scope.templateData.template="df-input-values-picklist.html",scope.data=scope.field.picklist,scope.assignValue=function(itemStr){scope.currentEditRecord[scope.field.name]=itemStr});break;case"boolean":scope.templateData.template="df-input-bool-picklist.html",scope.__dfBools=[{value:!0,name:"TRUE"},{value:!1,name:"FALSE"}],scope.field.allow_null&&scope.__dfBools.unshift({value:"",name:"NULL"});break;case"reference":scope._parseSystemTableName=function(tableNameStr){return"df_sys_"===tableNameStr.substr(0,"df_sys_".length)?tableNameStr.substr("df_sys_".length):tableNameStr},scope._buildURL=function(serviceNameStr,tableNameStr){return INSTANCE_URL.url+"/"+serviceNameStr+"/_table/"+tableNameStr},scope.relatedOptions={service:scope.service,table:scope._parseSystemTableName(scope.field.ref_table),url:scope._buildURL(scope.service,scope._parseSystemTableName(scope.field.ref_table)),params:{filter:null,limit:10,offset:0,fields:"*",include_schema:!0,include_count:!0},defaultFields:{},exportValueOn:!0},scope.relatedOptions.defaultFields[scope.field.ref_field]=!0}elem.append($compile($templateCache.get(scope.templateData.template))(scope))}}}]).directive("dfChildTable",["DF_TABLE_ASSET_PATH","INSTANCE_URL","dfObjectService","dfTableEventService",function(DF_TABLE_ASSET_PATH,INSTANCE_URL,dfObjectService,dfTableEventService){return{restrict:"E",scope:{childOptions:"=",parentSchema:"=",childTableParentRecord:"="},templateUrl:DF_TABLE_ASSET_PATH+"views/df-child-table.html",link:function(scope,elem,attrs){scope.options={},scope.childRecordsBy="",scope.service=scope.childOptions.service,scope.closeChildTable=function(){scope._closeChildTable()},scope._parseSystemTableName=function(tableNameStr){return"df_sys_"===tableNameStr.substr(0,"df_sys_".length)?tableNameStr.substr("df_sys_".length):tableNameStr},scope._setSystemService=function(tableNameStr){return"df_sys_"===tableNameStr.substr(0,"df_sys_".length)?"system":scope.service},scope._closeChildTable=function(){scope.$emit(dfTableEventService.closeChildTable),angular.element(elem).remove()};var watchChildRecordsBy=scope.$watch("childRecordsBy",function(newValue,oldValue){if(!newValue)return!1;var options={service:scope._setSystemService(newValue.ref_table),table:newValue.ref_table,url:INSTANCE_URL.url+"/"+scope._setSystemService(newValue.ref_table)+"/_table/"+scope._parseSystemTableName(newValue.ref_table),params:{filter:newValue.ref_field+" = "+scope.childTableParentRecord[newValue.field]}};scope.options=dfObjectService.deepMergeObjects(options,scope.childOptions)});scope.$on("$destroy",function(e){watchChildRecordsBy()})}}}]).service("dfTableEventService",[function(){return{alertSuccess:"alert:success",refreshTable:"refresh:table",closeChildTable:"close:childtable"}}]).service("dfTableCallbacksService",[function(){var callbacks={onCreate:{pre:[],post:[]},onDelete:{pre:[],post:[]},onUpdate:{pre:[],post:[]}};return{add:function(actionStr,processStr,method){callbacks[actionStr][processStr].push(method)},run:function(actionStr,processStr,inputRecord){if(0==callbacks[actionStr][processStr].length)return!1;angular.forEach(callbacks[actionStr][processStr],function(value,index){value.call(void 0,inputRecord)})},reset:function(){callbacks={onCreate:{pre:[],post:[]},onDelete:{pre:[],post:[]},onUpdate:{pre:[],post:[]}}}}}]),angular.module("dfHome",["ngRoute","dfUtility","dfApplication","dfHelp"]).constant("MOD_HOME_ROUTER_PATH","/home").constant("MOD_HOME_ASSET_PATH","admin_components/adf-home/").config(["$routeProvider","MOD_HOME_ROUTER_PATH","MOD_HOME_ASSET_PATH",function($routeProvider,MOD_HOME_ROUTER_PATH,MOD_HOME_ASSET_PATH){$routeProvider.when(MOD_HOME_ROUTER_PATH,{templateUrl:MOD_HOME_ASSET_PATH+"views/main.html",controller:"HomeCtrl",resolve:{checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).controller("HomeCtrl",["$q","$scope","$sce","dfApplicationData","SystemConfigDataService",function($q,$scope,$sce,dfApplicationData,SystemConfigDataService){$scope.trustUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.$parent.title="Home";var links=[{name:"welcome-home",label:"Welcome",href:"//www.dreamfactory.com/in_product_v2/welcome.html",attributes:[]},{name:"quickstart-home",label:"Quickstart",href:"//www.dreamfactory.com/in_product_v2/quickstart.html",attributes:[]},{name:"resource-home",label:"Resources",href:"//www.dreamfactory.com/in_product_v2/resources.html",attributes:[]},{name:"download-home",label:"Download",href:"//www.dreamfactory.com/in_product_v2/downloads.html",attributes:[]}],systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.hasOwnProperty("home_links")&&(links=angular.copy(systemConfig.home_links)),$scope.links=links,angular.forEach($scope.links,function(link){link.label||(link.label=link.name)})}]),angular.module("dfLimit",["ngRoute","dfUtility"]).constant("MOD_LIMIT_ROUTER_PATH","/limits").constant("MOD_LIMIT_ASSET_PATH","admin_components/adf-limit/").config(["$routeProvider","MOD_LIMIT_ROUTER_PATH","MOD_LIMIT_ASSET_PATH",function($routeProvider,MOD_LIMIT_ROUTER_PATH,MOD_LIMIT_ASSET_PATH){$routeProvider.when(MOD_LIMIT_ROUTER_PATH,{templateUrl:MOD_LIMIT_ASSET_PATH+"views/main.html",controller:"LimitCtl",resolve:{checkAdmin:["checkAdminService",function(checkAdminService){return checkAdminService.checkAdmin()}],checkUser:["checkUserService",function(checkUserService){return checkUserService.checkUser()}]}})}]).run([function(){}]).factory("editLimitService",[function(){return{record:{},recordCopy:{}}}]).controller("LimitCtl",["$rootScope","$scope","$http","dfApplicationData","dfNotify","dfObjectService",function($rootScope,$scope,$http,dfApplicationData,dfNotify,dfObjectService){$scope.$parent.title="Limits",$scope.links=[{name:"manage-limits",label:"Manage",path:"manage-limits"},{name:"create-limit",label:"Create",path:"create-limit"}],$scope.instanceTypes=[{value:"instance",name:"Instance"},{value:"instance.user",name:"User"},{value:"instance.each_user",name:"Each User"},{value:"instance.service",name:"Service"},{value:"instance.role",name:"Role"},{value:"instance.user.service",name:"Service by User"},{value:"instance.each_user.service",name:"Service by Each User"},{value:"instance.service.endpoint",name:"Endpoint"},{value:"instance.user.service.endpoint",name:"Endpoint by User"},{value:"instance.each_user.service.endpoint",name:"Endpoint by Each User"}],$scope.limitPeriods=[{value:"minute",name:"Minute"},{value:"hour",name:"Hour"},{value:"day",name:"Day"},{value:"7-day",name:"Week"},{value:"30-day",name:"30 Days"}],$scope.emptySectionOptions={title:"You have no Limits!",text:"Click the button below to get started adding limits.  You can always create new limits by clicking the tab located in the section menu to the left.",buttonText:"Create A Limit!",viewLink:$scope.links[1],active:!1},$scope.hidden={users:!0,roles:!0,services:!0,endpoint:!0},$scope.selectType=function(recordType){if(angular.isObject(recordType))switch(recordType.value){case"instance":$scope.hidden={users:!0,roles:!0,services:!0,endpoint:!0};break;case"instance.user":$scope.hidden={users:!1,roles:!0,services:!0,endpoint:!0};break;case"instance.each_user":$scope.hidden={users:!0,roles:!0,services:!0,endpoint:!0};break;case"instance.service":$scope.hidden={users:!0,roles:!0,services:!1,endpoint:!0};break;case"instance.role":$scope.hidden={users:!0,roles:!1,services:!0,endpoint:!0};break;case"instance.user.service":$scope.hidden={users:!1,roles:!0,services:!1,endpoint:!0};break;case"instance.each_user.service":$scope.hidden={users:!0,roles:!0,services:!1,endpoint:!0};break;case"instance.service.endpoint":$scope.hidden={users:!0,roles:!0,services:!1,endpoint:!1};break;case"instance.user.service.endpoint":$scope.hidden={users:!1,roles:!0,services:!1,endpoint:!1};break;case"instance.each_user.service.endpoint":$scope.hidden={users:!0,roles:!0,services:!1,endpoint:!1}}},$scope.$on("$destroy",function(e){$scope.$broadcast("toolbar:paginate:limit:destroy")}),$scope.limitEnabled=!1,$scope.subscription_required=!1,$scope.apiData=null,$scope.loadTabData=function(init){$scope.dataLoading=!0;var apis,newApiData,errorFunc=function(error){var messageOptions={module:"Limits",provider:"dreamfactory",type:"error",message:"There was an error loading data for the Limits tab. Please try refreshing your browser and logging in again."};dfNotify.error(messageOptions)};dfApplicationData.getApiData(["system"]).then(function(response){angular.forEach(response[0].resource,function(value){"limit"===value.name&&($scope.limitEnabled=!0)}),$scope.limitEnabled?(apis=["limit","role","service","user"],dfApplicationData.getApiData(apis).then(function(response){newApiData={},apis.forEach(function(value,index){newApiData[value]=response[index].resource?response[index].resource:response[index]}),$scope.apiData=newApiData,init&&$scope.$broadcast("toolbar:paginate:limit:load")},errorFunc)):($scope.subscription_required=!0,$scope.links[1].path=$scope.links[0].path)},errorFunc).finally(function(){$scope.dataLoading=!1})},$scope.loadTabData(!0)}]).directive("dfManageLimits",["$rootScope","MOD_LIMIT_ASSET_PATH","dfApplicationData","dfNotify","$timeout","editLimitService","$http","INSTANCE_URL",function($rootScope,MOD_LIMIT_ASSET_PATH,dfApplicationData,dfNotify,$timeout,editLimitService,$http,INSTANCE_URL){return{restrict:"E",scope:!1,templateUrl:MOD_LIMIT_ASSET_PATH+"views/df-manage-limits.html",link:function(scope,elem,attrs){var ManagedLimit=function(limitData){return{__dfUI:{selected:!1},record:limitData,recordCopy:limitData}};scope.limits=null,scope.currentEditLimit=editLimitService,scope.fields=[{name:"id",label:"ID",active:!0},{name:"name",label:"Limit Name",active:!0},{name:"type",label:"Limit Type",active:!0},{name:"rate",label:"Limit Rate",active:!0},{name:"percent",label:"Limit Counter",active:!0},{name:"user_id",label:"User",active:!0},{name:"service_id",label:"Service",active:!0},{name:"role_id",label:"Role",active:!0},{name:"active",label:"Active",active:!0}],scope.order={orderBy:"id",orderByReverse:!1},scope.selectedLimits=[],scope.editLimit=function(limit){scope._editLimit(limit)},scope.deleteLimit=function(limit){dfNotify.confirm("Delete "+limit.record.name+"?")&&(scope._deleteLimit(limit),scope.selectAll(!1))},scope.resetCounter=function(limit){dfNotify.confirm("Clear counter for "+limit.record.name+"?")&&scope._deleteLimitCache(limit)},scope.deleteSelectedLimits=function(){dfNotify.confirm("Delete selected limits?")&&scope._deleteSelectedLimits()},scope.resetSelectedLimits=function(){dfNotify.confirm("Reset selected limits?")&&scope._resetSelectedLimits()},scope.orderOnSelect=function(fieldObj){scope._orderOnSelect(fieldObj)},scope.setSelected=function(limit){scope._setSelected(limit)},scope.selectAll=function(checkStatus){scope.selectedLimits.length&&!1===checkStatus&&(scope.selectedLimits=[]),angular.forEach(scope.limits,function(limit){!1===checkStatus?(limit.__dfUI.selected=!1,scope.selectedLimits.splice(limit.record.id,1)):(limit.__dfUI.selected=!0,scope.selectedLimits.push(limit.record.id))})},scope._deleteCacheFromServer=function(requestDataObj){return $http({method:"DELETE",url:INSTANCE_URL.url+"/system/limit_cache",params:requestDataObj.params})},scope._editLimit=function(limit){angular.copy(limit,scope.currentEditLimit);var limitType=limit.record.type,limitPeriod=limit.record.period,userId=limit.record.user_id;scope.currentEditLimit.record.typeObj=scope.instanceTypes.filter(function(obj){return obj.value==limitType})[0],scope.currentEditLimit.recordCopy.typeObj=scope.currentEditLimit.record.typeObj,scope.currentEditLimit.record.periodObj=scope.limitPeriods.filter(function(obj){return obj.value==limitPeriod})[0],scope.currentEditLimit.recordCopy.periodObj=scope.currentEditLimit.record.periodObj,angular.isObject(scope.users)&&(scope.currentEditLimit.record.user_id=scope.users.filter(function(obj){return obj.id==userId})[0],scope.currentEditLimit.recordCopy.user_id=scope.currentEditLimit.record.user_id),scope.selectType(scope.currentEditLimit.record.typeObj)},scope._deleteLimitCache=function(limit){var requestDataObj={params:{ids:limit.record.id}};scope._deleteCacheFromServer(requestDataObj).then(function(result){var messageOptions={module:"Limits",type:"success",provider:"dreamfactory",message:"Limit counter successfully reset."};angular.forEach(limit.record.limit_cache_by_limit_id,function(cache){cache.attempts=0,cache.percent=0}),dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._deleteLimit=function(limit){var requestDataObj={params:{id:limit.record.id}};dfApplicationData.deleteApiData("limit",requestDataObj).$promise.then(function(result){var messageOptions={module:"Limits",type:"success",provider:"dreamfactory",message:"Limit successfully deleted."};dfNotify.success(messageOptions),limit.__dfUI.selected&&scope.setSelected(limit),scope.$broadcast("toolbar:paginate:limit:delete")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._orderOnSelect=function(fieldObj){scope.order.orderBy===fieldObj.name?scope.order.orderByReverse=!scope.order.orderByReverse:(scope.order.orderBy=fieldObj.name,scope.order.orderByReverse=!1)},scope._setSelected=function(limit){for(var i=0;i<scope.selectedLimits.length;){if(limit.record.id===scope.selectedLimits[i])return limit.__dfUI.selected=!1,void scope.selectedLimits.splice(i,1);i++}limit.__dfUI.selected=!0,scope.selectedLimits.push(limit.record.id)},scope._resetSelectedLimits=function(){var requestDataObj={params:{ids:scope.selectedLimits.join(",")}};scope._deleteCacheFromServer(requestDataObj).then(function(result){var messageOptions={module:"Limits",type:"success",provider:"dreamfactory",message:"Limit counters successfully reset."};angular.forEach(scope.selectedLimits,function(value){scope.limits.filter(function(obj){obj.record.id==value&&angular.forEach(obj.record.limit_cache_by_limit_id,function(cache){cache.attempts=0,cache.percent=0})})}),dfNotify.success(messageOptions)},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._deleteSelectedLimits=function(){var requestDataObj={params:{ids:scope.selectedLimits.join(","),rollback:!0}};dfApplicationData.deleteApiData("limit",requestDataObj).$promise.then(function(result){var messageOptions={module:"Limits",type:"success",provider:"dreamfactory",message:"Limits deleted successfully."};dfNotify.success(messageOptions),scope.selectedLimits=[],scope.$broadcast("toolbar:paginate:limit:reset")},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})};var watchLimitApiData=scope.$watchCollection("apiData.limit",function(newValue,oldValue){var _limits=[];newValue&&(angular.forEach(newValue,function(limit){_limits.push(new ManagedLimit(limit))}),scope.emptySectionOptions.active=0===newValue.length),scope.limits=_limits});scope.$on("toolbar:paginate:limit:update",function(e){scope.loadTabData()}),scope.$on("$destroy",function(e){watchLimitApiData()})}}}]).directive("dfLimitLoading",[function(){return{restrict:"E",template:"<div class='col-lg-12' ng-if='dataLoading'><span style='display: block; width: 100%; text-align: center; color: #A0A0A0; font-size: 50px; margin-top: 100px'><i class='fa fa-refresh fa-spin'></i></div>"}}]).directive("dfLimitDetails",["MOD_LIMIT_ASSET_PATH","dfApplicationData","dfNotify","dfObjectService","$http","$cookies","UserDataService","$cookieStore","$rootScope","editLimitService",function(MOD_LIMIT_ASSET_PATH,dfApplicationData,dfNotify,dfObjectService,$http,$cookies,UserDataService,$cookieStore,$rootScope,editLimitService){return{restrict:"E",scope:{limitData:"=?",newLimit:"=newLimit",selectType:"=?",activeView:"=?",apiData:"=?"},templateUrl:MOD_LIMIT_ASSET_PATH+"views/df-limit-details.html",link:function(scope,elem,attrs){var Limit=function(limitData){var _limit={is_active:!0,key_text:null,description:null,name:null,period:null,rate:null,role_id:null,service_id:null,type:null,endpoint:null,user_id:null,cacheData:{}};return limitData=limitData||_limit,{__dfUI:{selected:!1},record:angular.copy(limitData),recordCopy:angular.copy(limitData)}};scope.limit=null,scope.saveData={},scope.currentEditLimit=editLimitService,scope.newLimit&&(scope.currentEditLimit=new Limit),scope.verbs=["GET","POST","PATCH","PUT","DELETE"],scope.dfSimpleHelp={verb:{title:"Limit by Verb ",text:"By default, all verbs will be limited unless a specific verb is selected for the limit type."},endpoint:{title:"Endpoint Limits ",text:'Endpoint limits are combined with a service and follow the same conventions in the API Docs for endpoints. The endpoint created must follow a simple form, such as with db service, <strong><i>"_schema/{table_name}"</i></strong>. Anything more detailed will still filter at the table level.'}},scope.saveLimit=function(){scope._validateData()&&(scope.newLimit?scope._saveLimit():scope._updateLimit())},scope.cancelEditor=function(){(dfObjectService.compareObjectsAsJson(scope.currentEditLimit.record,scope.currentEditLimit.recordCopy)||dfNotify.confirmNoSave())&&scope.closeEditor()},scope.closeEditor=function(){scope.currentEditLimit.record={},scope.limit=new Limit,scope.$emit("sidebar-nav:view:reset")},scope._validateData=function(){var checkData=scope.currentEditLimit.record;if(null==checkData.typeObj){options={module:"Limit Create Error",message:"Please select a limit type.",type:"error"};return dfNotify.error(options),!1}if(null===checkData.name||""==checkData.name){options={module:"Limit Create Error",message:"The limit name cannot be blank.",type:"error"};return dfNotify.error(options),!1}if(!angular.isDefined(checkData.typeObj)){options={module:"Limit Create Error",message:"A Limit type must be selected.",type:"error"};return dfNotify.error(options),!1}if(null===checkData.rate||""==checkData.rate){options={module:"Limit Create Error",message:"The limit rate cannot be blank.",type:"error"};return dfNotify.error(options),!1}if(!/^\d+$/.test(checkData.rate)){var options={module:"Limit Create Error",message:"The limit rate must be an integer.",type:"error"};return dfNotify.error(options),!1}return!0},scope._saveLimit=function(){if(scope.saveData=scope._prepareLimitData(),!scope.saveData)return!1;var requestDataObj={params:{fields:"*",related:"service_by_service_id,role_by_role_id,user_by_user_id,limit_cache_by_limit_id"},data:scope.saveData};dfApplicationData.saveApiData("limit",requestDataObj).$promise.then(function(result){var messageOptions={module:"Limits",provider:"dreamfactory",type:"success",message:"Limit saved successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._updateLimit=function(){scope.saveData=scope._prepareLimitData();var requestDataObj={params:{fields:"*",related:"service_by_service_id,role_by_role_id,user_by_user_id,limit_cache_by_limit_id"},data:scope.saveData};dfApplicationData.updateApiData("limit",requestDataObj).$promise.then(function(result){var messageOptions={module:"Limit",provider:"dreamfactory",type:"success",message:"Limit updated successfully."};dfNotify.success(messageOptions),scope.closeEditor()},function(reject){var messageOptions={module:"Api Error",provider:"dreamfactory",type:"error",message:reject};dfNotify.error(messageOptions)}).finally(function(){})},scope._prepareLimitData=function(){var saveData=angular.copy(scope.currentEditLimit.record);angular.isObject(saveData.periodObj)&&(saveData.period=saveData.periodObj.value),angular.isObject(saveData.typeObj)&&(saveData.type=saveData.typeObj.value),angular.isObject(saveData.user_by_user_id)&&(saveData.user_id=saveData.user_by_user_id.id),angular.isObject(saveData.role_by_role_id)&&(saveData.role_id=saveData.role_by_role_id.id),angular.isObject(saveData.service_by_service_id)&&(saveData.service_id=saveData.service_by_service_id.id);var endpointTypes=["instance.service.endpoint","instance.user.service.endpoint","instance.each_user.service.endpoint"];return saveData.endpoint&&-1!==endpointTypes.indexOf(saveData.type)||(saveData.endpoint=null),delete saveData.key_text,delete saveData.periodObj,delete saveData.typeObj,delete saveData.user_by_user_id,delete saveData.role_by_role_id,delete saveData.service_by_service_id,delete saveData.limit_cache_by_limit_id,saveData};var watchLimitData=scope.$watch("limitData",function(newValue,oldValue){if(!newValue)return!1;scope.limit=new Limit(newValue)});scope.$on("$destroy",function(e){scope.currentEditLimit.record={},scope.limit=new Limit,watchLimitData()}),scope.dfHelp={}}}}]),angular.module("dreamfactoryApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","dfUtility","dfHome","dfSystemConfig","dfAdmins","dfUsers","dfApps","dfData","dfServices","dfRoles","dfSchema","dfUserManagement","dfScripts","dfProfile","dfApplication","dfHelp","dfLaunchPad","dfApiDocs","dfFileManager","dfPackageManager","dfLimit"]).factory("checkUserService",function($location,$q,SystemConfigDataService){return{checkUser:function(){var deferred=$q.defer(),systemConfig=SystemConfigDataService.getSystemConfig(),result=!1;return systemConfig&&(result=systemConfig.apps&&systemConfig.apps.filter(function(item){return"admin"===item.name}).length>0),result?deferred.resolve():($location.url("/launchpad"),deferred.reject()),deferred.promise}}}).factory("checkAdminService",function($q,UserDataService,$location){return{checkAdmin:function(){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();return currentUser&&currentUser.is_sys_admin?deferred.resolve():($location.url("/launchpad"),deferred.reject()),deferred.promise}}}).factory("allowAdminAccess",function(SystemConfigDataService){return{get:function(){var result=!1,systemConfig=SystemConfigDataService.getSystemConfig();return systemConfig&&(result=systemConfig.apps&&systemConfig.apps.filter(function(item){return"admin"===item.name}).length>0),result}}}).constant("APP_VERSION","2.16.1").constant("INSTANCE_BASE_URL","").constant("INSTANCE_API_PREFIX","/api/v2").service("INSTANCE_URL",["INSTANCE_BASE_URL","INSTANCE_API_PREFIX",function(INSTANCE_BASE_URL,INSTANCE_API_PREFIX){this.url=INSTANCE_BASE_URL+INSTANCE_API_PREFIX}]).constant("APP_API_KEY","6498a8ad1beb9d84d63035c5d1120c007fad6de706734db9689f8996707e0f7d").config(["$httpProvider","APP_API_KEY",function($httpProvider,APP_API_KEY){$httpProvider.defaults.headers.common["X-Dreamfactory-API-Key"]=APP_API_KEY,$httpProvider.defaults.headers.delete={"Content-Type":"application/json;charset=utf-8"}}]).config(["$routeProvider","$locationProvider","$httpProvider","$qProvider",function($routeProvider,$locationProvider,$httpProvider,$qProvider){$locationProvider.hashPrefix(""),$routeProvider.when("/login",{controller:"LoginCtrl",templateUrl:"views/login.html",resolve:{checkOtherRoute:["$q","UserDataService","$location","SystemConfigDataService",function($q,UserDataService,$location,SystemConfigDataService){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();if(currentUser&&currentUser.session_token){if(currentUser.is_sys_admin){var systemConfig=SystemConfigDataService.getSystemConfig();"user@example.com"===currentUser.email&&systemConfig&&systemConfig.platform&&systemConfig.platform.hasOwnProperty("bitnami_demo")&&!systemConfig.platform.bitnami_demo?$location.url("/profile"):$location.url("/home")}else $location.url("/launchpad");deferred.reject()}else deferred.resolve();return deferred.promise}]}}).when("/logout",{templateUrl:"views/logout.html",controller:"LogoutCtrl"}).when("/register",{templateUrl:"views/register.html",controller:"RegisterCtrl",resolve:{checkRegisterRoute:["$q","UserDataService","$location","SystemConfigDataService",function($q,UserDataService,$location,SystemConfigDataService){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();if(currentUser)currentUser.is_sys_admin?$location.url("/home"):$location.url("/launchpad"),deferred.reject();else{var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("allow_open_registration")&&systemConfig.authentication.allow_open_registration?deferred.resolve():($location.url("/login"),deferred.reject())}return deferred.promise}]}}).when("/register-complete",{templateUrl:"views/register-complete.html",controller:"RegisterCompleteCtrl",resolve:{checkRegisterCompleteRoute:["$q","UserDataService","$location","SystemConfigDataService",function($q,UserDataService,$location,SystemConfigDataService){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();if(currentUser)currentUser.is_sys_admin?$location.url("/home"):$location.url("/launchpad"),deferred.reject();else{var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("allow_open_registration")&&systemConfig.authentication.allow_open_registration?deferred.resolve():($location.url("/login"),deferred.reject())}return deferred.promise}]}}).when("/register-confirm",{templateUrl:"views/register-confirm.html",controller:"RegisterConfirmCtrl",resolve:{checkRegisterConfirmRoute:["$q","UserDataService","$location","SystemConfigDataService",function($q,UserDataService,$location,SystemConfigDataService){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();if(currentUser)currentUser.is_sys_admin?$location.url("/home"):$location.url("/launchpad"),deferred.reject();else{var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("allow_open_registration")&&systemConfig.authentication.allow_open_registration?deferred.resolve():($location.url("/login"),deferred.reject())}return deferred.promise}]}}).when("/reset-password",{templateUrl:"views/reset-password-email.html",controller:"ResetPasswordEmailCtrl",resolve:{checkResetPasswordRoute:["$q","UserDataService","$location",function($q,UserDataService,$location){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();return currentUser?(currentUser.is_sys_admin?$location.url("/home"):$location.url("/launchpad"),deferred.reject()):deferred.resolve(),deferred.promise}]}}).when("/user-invite",{templateUrl:"views/user-invite.html",controller:"UserInviteCtrl",resolve:{checkUserInviteRoute:["$q","UserDataService","$location",function($q,UserDataService,$location){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();return currentUser?(currentUser.is_sys_admin?$location.url("/home"):$location.url("/launchpad"),deferred.reject()):deferred.resolve(),deferred.promise}]}}).otherwise({controller:"LoginCtrl",templateUrl:"views/login.html",resolve:{checkOtherRoute:["$q","UserDataService","$location","SystemConfigDataService",function($q,UserDataService,$location,SystemConfigDataService){var deferred=$q.defer(),currentUser=UserDataService.getCurrentUser();if(currentUser&&currentUser.session_token)if(currentUser.is_sys_admin){var systemConfig=SystemConfigDataService.getSystemConfig();"user@example.com"===currentUser.email&&systemConfig&&systemConfig.platform.hasOwnProperty("bitnami_demo")&&!systemConfig.platform.bitnami_demo?$location.url("/profile"):$location.url("/home")}else $location.url("/launchpad");else $location.url("/login");return deferred.reject(),deferred.promise}]}}),$httpProvider.interceptors.push("httpValidSession")}]).config(["$provide",function($provide){$provide.decorator("$exceptionHandler",["$delegate","$injector",function($delegate,$injector){return function(exception,foo){if("string"==typeof exception){var prefix="Possibly unhandled rejection: ";0===exception.indexOf(prefix)&&(exception=angular.fromJson(exception.slice(prefix.length)))}if(!exception.provider||"dreamfactory"!==exception.provider)return $delegate(exception);$injector.invoke(["dfNotify",function(dfNotify){var messageOptions={module:exception.module,type:exception.type,provider:exception.provider,message:exception.exception};dfNotify.error(messageOptions)}])}}])}]),angular.module("dreamfactoryApp").controller("MainCtrl",["$scope","UserDataService","SystemConfigDataService","$location","dfApplicationData","dfNotify","dfIconService","allowAdminAccess","$animate","$http","INSTANCE_URL",function($scope,UserDataService,SystemConfigDataService,$location,dfApplicationData,dfNotify,dfIconService,allowAdminAccess,$animate,$http,INSTANCE_URL){function _hideSeparateAppTab(currentUser,links,appId){$http.get(INSTANCE_URL.url+"/system/admin/"+currentUser.id+"/session?related=user_to_app_to_role_by_user_id").then(function(result){var userToAppToRole=result.data.user_to_app_to_role_by_user_id?result.data.user_to_app_to_role_by_user_id:null;userToAppToRole&&userToAppToRole.length>0&&($scope._hasAccessToApp(userToAppToRole,appId)||(2===appId?links.splice(6,1):3===appId&&links.splice(8,1)))},function(result){console.error(result)})}$animate.enabled(!1),$scope.title="",$scope.currentUser=UserDataService.getCurrentUser(),$scope.topLevelLinks=[{path:"https://www.dreamfactory.com/products",target:"_blank",label:"Upgrade",name:"upgrade",icon:dfIconService().upgrade,show:!1},{path:"http://www.dreamfactory.com/support",target:"_blank",label:"Support",name:"support",icon:dfIconService().support,show:!1},{path:"#/launchpad",target:null,label:"LaunchPad",name:"launchpad",icon:dfIconService().launchpad,show:!1},{path:"#/home",target:null,label:"Admin",name:"admin",icon:dfIconService().admin,show:!1},{path:"#/login",target:null,label:"Login",name:"login",icon:dfIconService().login,show:!1},{path:"#/register",target:null,label:"Register",name:"register",icon:dfIconService().register,show:!1},{path:null,target:null,label:UserDataService.getCurrentUser().name,name:"user",icon:dfIconService().user,show:!1,subLinks:[{path:"#/profile",target:null,label:"Profile",name:"profile",icon:null,show:!1},{path:"#/logout",target:null,label:"Logout",name:"logout",icon:null,show:!1}]}],$scope.topLevelNavOptions={links:$scope.topLevelLinks},$scope.showAdminComponentNav=!1;var navLinks=[{name:"home",label:"Home",path:"/home"},{name:"apps",label:"Apps",path:"/apps"},{name:"admins",label:"Admins",path:"/admins"},{name:"users",label:"Users",path:"/users"},{name:"roles",label:"Roles",path:"/roles"},{name:"services",label:"Services",path:"/services"},{name:"apidocs",label:"API Docs",path:"/apidocs"},{name:"schema",label:"Schema",path:"/schema"},{name:"data",label:"Data",path:"/data"},{name:"file-manager",label:"Files",path:"/file-manager"},{name:"scripts",label:"Scripts",path:"/scripts"},{name:"config",label:"Config",path:"/config"},{name:"package-manager",label:"Packages",path:"/package-manager"},{name:"limit",label:"Limits",path:"/limits"}];$scope.componentNavOptions={links:navLinks},$scope._setComponentLinks=function(isAdmin){var links=angular.copy(navLinks),currentUser=UserDataService.getCurrentUser();isAdmin?currentUser.role_id&&(console.log(currentUser.role_id),links=$scope._getAccessibleLinks(links,currentUser)):(links.splice(2,1),links.splice(3,1),links.splice(11,1)),$scope.componentNavOptions={links:links}},$scope._getAccessibleLinks=function(links,currentUser){return $http.get(INSTANCE_URL.url+"/system/role/"+currentUser.role_id+"?related=role_service_access_by_role_id").then(function(result){if(result.data){var roleServiceAccesses=result.data.role_service_access_by_role_id;console.log("roleServiceAccesses:",roleServiceAccesses)}},function(result){console.error(result)}),_hideSeparateAppTab(currentUser,links,2),console.log("?",links),links},$scope._setActiveLinks=function(linksArr,activeLinksArr){var found,i;angular.forEach(linksArr,function(link){for(found=!1,i=0;i<activeLinksArr.length;i++)if(link.name===activeLinksArr[i]){found=!0;break}link.show=found})},$scope._hasAccessToApp=function(userToAppToRole,appId){var currentUser=UserDataService.getCurrentUser(),result=!1;return angular.forEach(userToAppToRole,function(uar){uar.user_id===currentUser.id&&uar.role_id===currentUser.role_id&&uar.app_id===appId&&(result=!0)}),result},$scope.setTopLevelLinkValue=function(linkName,linkProp,value){for(var i=0;i<$scope.topLevelLinks.length;i++)if($scope.topLevelLinks[i].name===linkName){$scope.topLevelLinks[i][linkProp]=value;break}},$scope.$watch("currentUser",function(newValue,oldValue){var links,systemConfig;if(angular.equals(newValue,oldValue)||dfApplicationData.resetApplicationObj(),links=["support"],(systemConfig=SystemConfigDataService.getSystemConfig())&&(systemConfig.apps&&systemConfig.apps.length>0&&links.push("launchpad"),systemConfig.hasOwnProperty("platform")&&"OPEN SOURCE"==systemConfig.platform.license&&links.push("upgrade")),newValue){if($scope.setTopLevelLinkValue("user","label",newValue.name),newValue.is_sys_admin){var chatEnabled=!0;dfApplicationData.getApiData(["custom"]).then(function(response){var custom=response[0].resource.filter(function(obj){return"chat"===obj.name});custom.length>0&&(chatEnabled=Boolean(custom[0].value))}).finally(function(){Comm100API.showChat(chatEnabled)})}links.push("user")}else links.push("login"),systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("allow_open_registration")&&systemConfig.authentication.allow_open_registration&&links.push("register"),Comm100API.showChat(!1);allowAdminAccess.get()&&links.push("admin"),$scope._setActiveLinks($scope.topLevelLinks,links),$scope._setComponentLinks(newValue&&newValue.is_sys_admin)}),$scope.$watch(function(){return UserDataService.getCurrentUser().name},function(n,o){n&&$scope.setTopLevelLinkValue("user","label",n)}),$scope.$on("$routeChangeSuccess",function(e){switch($location.path()){case"/home":case"/apps":case"/admins":case"/users":case"/roles":case"/services":case"/apidocs":case"/schema":case"/data":case"/file-manager":case"/scripts":case"/config":case"/package-manager":case"/limits":$scope.showAdminComponentNav=!0;break;default:$scope.showAdminComponentNav=!1}})}]).controller("LoginCtrl",["$scope","$window","$location","$timeout","UserDataService","UserEventsService","dfApplicationData","SystemConfigDataService","dfNotify",function($scope,$window,$location,$timeout,UserDataService,UserEventsService,dfApplicationData,SystemConfigDataService,dfNotify){$scope.loginOptions={showTemplate:!0},$scope.$on(UserEventsService.password.passwordSetSuccess,function(e,userCredsObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Password reset successful."};dfNotify.success(messageOptions),$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginError,function(e){e.stopPropagation()}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){angular.equals($scope.$parent.currentUser,userDataObj)||dfApplicationData.resetApplicationObj(),$scope.$parent.currentUser=userDataObj;var queryString=location.search.substring(1);if($scope.loginOptions.showTemplate=!1,userDataObj.is_sys_admin)if(queryString){uri=$location.absUrl().split("?");$window.location.href=uri[0]+"#/home"}else if(userDataObj.is_sys_admin&&"user@example.com"===userDataObj.email){var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.platform&&systemConfig.platform.hasOwnProperty("bitnami_demo")&&!systemConfig.platform.bitnami_demo?$location.url("/profile"):$location.url("/home")}else $location.url("/home");else if(queryString){var uri=$location.absUrl().split("?");$window.location.href=uri[0]+"#/launchpad"}else $location.url("/launchpad")})}]).controller("LogoutCtrl",["$scope","$location","UserEventsService","dfApplicationData",function($scope,$location,UserEventsService,dfApplicationData){$scope.$on(UserEventsService.logout.logoutSuccess,function(e,userDataObj){$scope.$parent.currentUser=userDataObj,$location.url("/login")})}]).controller("RegisterCtrl",["$scope","$location","UserEventsService","SystemConfigDataService",function($scope,$location,UserEventsService,SystemConfigDataService){var confirmationRequired=!0,systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.authentication&&systemConfig.authentication.hasOwnProperty("open_reg_email_service_id")&&(confirmationRequired=!!systemConfig.authentication.open_reg_email_service_id),$scope.options={confirmationRequired:confirmationRequired},$scope.$on(UserEventsService.register.registerSuccess,function(e,userCredsObj){$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.register.registerConfirmation,function(e){$location.url("/register-complete")}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){$scope.$parent.currentUser=userDataObj,$location.url("/launchpad")}),$scope.$on(UserEventsService.login.loginError,function(e){e.stopPropagation()})}]).controller("RegisterCompleteCtrl",["$scope",function($scope){}]).controller("RegisterConfirmCtrl",["$scope","$location","dfApplicationData","UserEventsService","SystemConfigDataService","dfNotify",function($scope,$location,dfApplicationData,UserEventsService,SystemConfigDataService,dfNotify){$scope.confirmOptions={showTemplate:!0,title:"Registration Confirmation"},$scope.loginOptions={showTemplate:!1},$scope.registerLoginErrorMsg="",$scope.inviteType="user",$scope.$on(UserEventsService.confirm.confirmationSuccess,function(e,userCredsObj){$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Registration Confirmation successful."};dfNotify.success(messageOptions),$scope.$parent.currentUser=userDataObj,$location.url("/launchpad")}),$scope.$on(UserEventsService.login.loginError,function(e,errMsg){e.stopPropagation(),$scope.registerLoginErrorMsg=errMsg.data.error.message})}]).controller("ResetPasswordEmailCtrl",["$scope","$location","dfApplicationData","UserEventsService","SystemConfigDataService","dfNotify","$timeout",function($scope,$location,dfApplicationData,UserEventsService,SystemConfigDataService,dfNotify,$timeout){$scope.loginOptions={showTemplate:!1},$scope.resetPasswordLoginErrorMsg="",$scope.$on(UserEventsService.password.passwordSetSuccess,function(e,userCredsObj){e.stopPropagation(),$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"Password reset successful."};if(dfNotify.success(messageOptions),$scope.$parent.currentUser=userDataObj,$scope.loginOptions.showTemplate=!1,userDataObj.is_sys_admin&&"user@example.com"===userDataObj.email){var systemConfig=SystemConfigDataService.getSystemConfig();systemConfig&&systemConfig.platform&&systemConfig.platform.hasOwnProperty("bitnami_demo")&&!systemConfig.platform.bitnami_demo?$location.url("/profile"):$location.url("/home")}else $location.url("/home")}),$scope.$on(UserEventsService.login.loginError,function(e,errMsg){e.stopPropagation(),$scope.resetPasswordLoginErrorMsg=errMsg.data.error.message})}]).controller("UserInviteCtrl",["$scope","$location","dfApplicationData","UserEventsService","SystemConfigDataService","dfNotify",function($scope,$location,dfApplicationData,UserEventsService,SystemConfigDataService,dfNotify){$scope.confirmOptions={showTemplate:!0,title:"Invitation Confirmation"},$scope.inviteType=1==$location.search().admin?"admin":"user",$scope.loginOptions={showTemplate:!1},$scope.confirmLoginErrorMsg="",$scope.$on(UserEventsService.confirm.confirmationSuccess,function(e,userCredsObj){$scope.$broadcast(UserEventsService.login.loginRequest,userCredsObj)}),$scope.$on(UserEventsService.login.loginSuccess,function(e,userDataObj){var messageOptions={module:"Users",type:"success",provider:"dreamfactory",message:"User Confirmation successful."};dfNotify.success(messageOptions),$scope.$parent.currentUser=userDataObj,$location.url("/launchpad")}),$scope.$on(UserEventsService.login.loginError,function(e,errMsg){e.stopPropagation(),$scope.confirmLoginErrorMsg=errMsg.data.error.message})}]),Array.of||(Array.of=function(){return Array.prototype.slice.call(arguments)}),Array.prototype.copyWithin||(Array.prototype.copyWithin=function(target,start){if(null==this)throw new TypeError("this is null or not defined");var O=Object(this),len=O.length>>>0,relativeTarget=target>>0,to=relativeTarget<0?Math.max(len+relativeTarget,0):Math.min(relativeTarget,len),relativeStart=start>>0,from=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len),end=arguments[2],relativeEnd=void 0===end?len:end>>0,final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len),count=Math.min(final-from,len-to),direction=1;for(from<to&&to<from+count&&(direction=-1,from+=count-1,to+=count-1);count>0;)from in O?O[to]=O[from]:delete O[to],from+=direction,to+=direction,count--;return O}),Array.prototype.every||(Array.prototype.every=function(callbackfn,thisArg){var T,k;if(null==this)throw new TypeError("this is null or not defined");var O=Object(this),len=O.length>>>0;if("function"!=typeof callbackfn)throw new TypeError;for(arguments.length>1&&(T=thisArg),k=0;k<len;){var kValue;if(k in O&&(kValue=O[k],!callbackfn.call(T,kValue,k,O)))return!1;k++}return!0}),Array.prototype.fill||Object.defineProperty(Array.prototype,"fill",{value:function(value){if(null==this)throw new TypeError("this is null or not defined");for(var O=Object(this),len=O.length>>>0,relativeStart=arguments[1]>>0,k=relativeStart<0?Math.max(len+relativeStart,0):Math.min(relativeStart,len),end=arguments[2],relativeEnd=void 0===end?len:end>>0,final=relativeEnd<0?Math.max(len+relativeEnd,0):Math.min(relativeEnd,len);k<final;)O[k]=value,k++;return O}}),Array.prototype.filter||(Array.prototype.filter=function(fun){if(void 0===this||null===this)throw new TypeError;var t=Object(this),len=t.length>>>0;if("function"!=typeof fun)throw new TypeError;for(var res=[],thisArg=arguments.length>=2?arguments[1]:void 0,i=0;i<len;i++)if(i in t){var val=t[i];fun.call(thisArg,val,i,t)&&res.push(val)}return res}),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{value:function(predicate){if(null==this)throw new TypeError('"this" is null or not defined');var o=Object(this),len=o.length>>>0;if("function"!=typeof predicate)throw new TypeError("predicate must be a function");for(var thisArg=arguments[1],k=0;k<len;){var kValue=o[k];if(predicate.call(thisArg,kValue,k,o))return kValue;k++}}}),Array.prototype.findIndex||Object.defineProperty(Array.prototype,"findIndex",{value:function(predicate){if(null==this)throw new TypeError('"this" is null or not defined');var o=Object(this),len=o.length>>>0;if("function"!=typeof predicate)throw new TypeError("predicate must be a function");for(var thisArg=arguments[1],k=0;k<len;){var kValue=o[k];if(predicate.call(thisArg,kValue,k,o))return k;k++}return-1}}),Array.prototype.forEach||(Array.prototype.forEach=function(callback){var T,k;if(null==this)throw new TypeError("this is null or not defined");var O=Object(this),len=O.length>>>0;if("function"!=typeof callback)throw new TypeError(callback+" is not a function");for(arguments.length>1&&(T=arguments[1]),k=0;k<len;){var kValue;k in O&&(kValue=O[k],callback.call(T,kValue,k,O)),k++}}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(searchElement,fromIndex){if(null==this)throw new TypeError('"this" is null or not defined');var o=Object(this),len=o.length>>>0;if(0===len)return!1;for(var n=0|fromIndex,k=Math.max(n>=0?n:len-Math.abs(n),0);k<len;){if(o[k]===searchElement)return!0;k++}return!1}}),Array.prototype.indexOf||(Array.prototype.indexOf=function(searchElement,fromIndex){var k;if(null==this)throw new TypeError('"this" is null or not defined');var o=Object(this),len=o.length>>>0;if(0===len)return-1;var n=0|fromIndex;if(n>=len)return-1;for(k=Math.max(n>=0?n:len-Math.abs(n),0);k<len;){if(k in o&&o[k]===searchElement)return k;k++}return-1}),Array.prototype.lastIndexOf||(Array.prototype.lastIndexOf=function(searchElement){if(void 0===this||null===this)throw new TypeError;var n,k,t=Object(this),len=t.length>>>0;if(0===len)return-1;for(n=len-1,arguments.length>1&&((n=Number(arguments[1]))!=n?n=0:0!=n&&n!=1/0&&n!=-1/0&&(n=(n>0||-1)*Math.floor(Math.abs(n)))),k=n>=0?Math.min(n,len-1):len-Math.abs(n);k>=0;k--)if(k in t&&t[k]===searchElement)return k;return-1}),Array.prototype.map||(Array.prototype.map=function(callback){var T,A,k;if(null==this)throw new TypeError("this is null or not defined");var O=Object(this),len=O.length>>>0;if("function"!=typeof callback)throw new TypeError(callback+" is not a function");for(arguments.length>1&&(T=arguments[1]),A=new Array(len),k=0;k<len;){var kValue,mappedValue;k in O&&(kValue=O[k],mappedValue=callback.call(T,kValue,k,O),A[k]=mappedValue),k++}return A}),Array.prototype.reduce||Object.defineProperty(Array.prototype,"reduce",{value:function(callback){if(null===this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof callback)throw new TypeError(callback+" is not a function");var value,o=Object(this),len=o.length>>>0,k=0;if(2==arguments.length)value=arguments[1];else{for(;k<len&&!(k in o);)k++;if(k>=len)throw new TypeError("Reduce of empty array with no initial value");value=o[k++]}for(;k<len;)k in o&&(value=callback(value,o[k],k,o)),k++;return value}}),"function"!=typeof Array.prototype.reduceRight&&(Array.prototype.reduceRight=function(callback){if(null===this||void 0===this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof callback)throw new TypeError(callback+" is not a function");var value,t=Object(this),k=(t.length>>>0)-1;if(arguments.length>=2)value=arguments[1];else{for(;k>=0&&!(k in t);)k--;if(k<0)throw new TypeError("Reduce of empty array with no initial value");value=t[k--]}for(;k>=0;k--)k in t&&(value=callback(value,t[k],k,t));return value}),Array.prototype.some||(Array.prototype.some=function(fun){if(null==this)throw new TypeError("Array.prototype.some called on null or undefined");if("function"!=typeof fun)throw new TypeError;for(var t=Object(this),len=t.length>>>0,thisArg=arguments.length>=2?arguments[1]:void 0,i=0;i<len;i++)if(i in t&&fun.call(thisArg,t[i],i,t))return!0;return!1}),Array.prototype.toLocaleString||Object.defineProperty(Array.prototype,"toLocaleString",{value:function(locales,options){if(null==this)throw new TypeError('"this" is null or not defined');var a=Object(this),len=a.length>>>0;if(0===len)return"";for(var firstElement=a[0],r=null==firstElement?"":firstElement.toLocaleString(locales,options),k=1;k<len;){var s=r+",",nextElement=a[k];r=s+(r=null==nextElement?"":nextElement.toLocaleString(locales,options)),k++}return r}}),Function.prototype.bind||(Function.prototype.bind=function(oThis){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var aArgs=Array.prototype.slice.call(arguments,1),fToBind=this,fNOP=function(){},fBound=function(){return fToBind.apply(this instanceof fNOP?this:oThis,aArgs.concat(Array.prototype.slice.call(arguments)))};return this.prototype&&(fNOP.prototype=this.prototype),fBound.prototype=new fNOP,fBound});